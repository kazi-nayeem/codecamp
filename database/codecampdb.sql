-- phpMyAdmin SQL Dump
-- version 4.5.1
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Apr 06, 2016 at 01:52 AM
-- Server version: 10.1.9-MariaDB
-- PHP Version: 5.5.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `codecampdb`
--

-- --------------------------------------------------------

--
-- Table structure for table `approve_table`
--

CREATE TABLE `approve_table` (
  `contest_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `approve` int(1) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `approve_table`
--

INSERT INTO `approve_table` (`contest_id`, `student_id`, `approve`) VALUES
(13, 5, 1),
(13, 6, 1),
(14, 5, 1),
(14, 6, 1),
(15, 5, 0),
(16, 6, 1);

-- --------------------------------------------------------

--
-- Table structure for table `codeforces_category`
--

CREATE TABLE `codeforces_category` (
  `problem_number` varchar(12) NOT NULL,
  `category` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `codeforces_category`
--

INSERT INTO `codeforces_category` (`problem_number`, `category`) VALUES
('11D', 'bitmasks'),
('11D', 'dp'),
('11D', 'graphs'),
('122A', 'brute force'),
('122A', 'number theory'),
('148D', 'dp'),
('148D', 'games'),
('148D', 'math'),
('148D', 'probabilities'),
('14D', 'dfs and similar'),
('14D', 'dp'),
('14D', 'graphs'),
('14D', 'shortest paths'),
('14D', 'trees'),
('14D', 'two pointers'),
('17A', 'brute force'),
('17A', 'math'),
('17A', 'number theory'),
('189A', 'brute force'),
('189A', 'dp'),
('1A', 'math'),
('208E', 'binary search'),
('208E', 'data structures'),
('208E', 'dfs and similar'),
('208E', 'trees'),
('270A', 'geometry'),
('270A', 'implementation'),
('270A', 'math'),
('271B', 'binary search'),
('271B', 'brute force'),
('271B', 'math'),
('271B', 'number theory'),
('272B', 'implementation'),
('272B', 'math'),
('272D', 'combinatorics'),
('272D', 'math'),
('272D', 'sortings'),
('285D', 'bitmasks'),
('285D', 'combinatorics'),
('285D', 'dp'),
('285D', 'implementation'),
('285D', 'meet-in-the-middle'),
('28B', 'dfs and similar'),
('28B', 'dsu'),
('28B', 'graphs'),
('294C', 'combinatorics'),
('294C', 'number theory'),
('300C', 'brute force'),
('300C', 'combinatorics'),
('305B', 'brute force'),
('305B', 'math'),
('312B', 'math'),
('312B', 'probabilities'),
('327C', 'combinatorics'),
('327C', 'math'),
('327D', 'constructive algorithms'),
('327D', 'dfs and similar'),
('327D', 'graphs'),
('340C', 'combinatorics'),
('340C', 'implementation'),
('340C', 'math'),
('340E', 'combinatorics'),
('340E', 'math'),
('346B', 'dp'),
('346B', 'strings'),
('351B', 'combinatorics'),
('351B', 'dp'),
('351B', 'probabilities'),
('351D', 'data structures'),
('358D', 'dp'),
('358D', 'greedy'),
('375D', 'data structures'),
('375D', 'dfs and similar'),
('375D', 'trees'),
('37A', 'sortings'),
('387C', 'greedy'),
('387C', 'implementation'),
('389C', 'binary search'),
('389C', 'dp'),
('389C', 'greedy'),
('390C', 'data structures'),
('393C', 'geometry'),
('393D', 'dp'),
('394C', 'constructive algorithms'),
('394C', 'greedy'),
('394D', 'brute force'),
('394D', 'implementation'),
('394D', 'math'),
('401D', 'bitmasks'),
('401D', 'brute force'),
('401D', 'combinatorics'),
('401D', 'dp'),
('401D', 'number theory'),
('402A', 'greedy'),
('402A', 'math'),
('402C', 'brute force'),
('402C', 'constructive algorithms'),
('406A', 'implementation'),
('406A', 'math'),
('406B', 'constructive algorithms'),
('406B', 'greedy'),
('415C', 'constructive algorithms'),
('415C', 'greedy'),
('415C', 'number theory'),
('415D', 'combinatorics'),
('415D', 'dp'),
('415D', 'number theory'),
('416C', 'binary search'),
('416C', 'dp'),
('416C', 'greedy'),
('416C', 'implementation'),
('426A', 'implementation'),
('429D', 'data structures'),
('429D', 'divide and conquer'),
('429D', 'geometry'),
('435A', 'implementation'),
('435B', 'greedy'),
('437A', 'implementation'),
('437B', 'bitmasks'),
('437B', 'greedy'),
('437B', 'implementation'),
('437B', 'sortings'),
('437C', 'graphs'),
('437C', 'greedy'),
('437C', 'sortings'),
('437D', 'dsu'),
('437D', 'sortings'),
('439C', 'brute force'),
('439C', 'constructive algorithms'),
('439C', 'implementation'),
('439C', 'number theory'),
('439D', 'binary search'),
('439D', 'sortings'),
('439D', 'ternary search'),
('439D', 'two pointers'),
('439E', 'combinatorics'),
('439E', 'dp'),
('439E', 'math'),
('441A', 'implementation'),
('441B', 'greedy'),
('441B', 'implementation'),
('441C', 'constructive algorithms'),
('441C', 'dfs and similar'),
('441C', 'implementation'),
('443A', 'constructive algorithms'),
('443A', 'implementation'),
('443B', 'brute force'),
('443D', 'dp'),
('443D', 'greedy'),
('443D', 'math'),
('443D', 'probabilities'),
('443D', 'sortings'),
('449B', 'graphs'),
('449B', 'shortest paths'),
('453A', 'probabilities'),
('454C', 'combinatorics'),
('454C', 'math'),
('454C', 'probabilities'),
('459C', 'combinatorics'),
('459C', 'constructive algorithms'),
('459C', 'math'),
('459D', 'data structures'),
('459D', 'divide and conquer'),
('459D', 'sortings'),
('460B', 'brute force'),
('460B', 'implementation'),
('460B', 'math'),
('461A', 'greedy'),
('461A', 'sortings'),
('465A', 'implementation'),
('465B', 'implementation'),
('465C', 'brute force'),
('466C', 'binary search'),
('466C', 'brute force'),
('466C', 'data structures'),
('466C', 'dp'),
('466C', 'two pointers'),
('466D', 'combinatorics'),
('466D', 'dp'),
('466E', 'dfs and similar'),
('466E', 'dsu'),
('466E', 'graphs'),
('466E', 'trees'),
('467B', 'bitmasks'),
('467B', 'brute force'),
('467B', 'constructive algorithms'),
('467B', 'implementation'),
('467C', 'dp'),
('467C', 'implementation'),
('467D', 'dfs and similar'),
('467D', 'dp'),
('467D', 'graphs'),
('467D', 'hashing'),
('467D', 'strings'),
('469A', 'greedy'),
('469A', 'implementation'),
('469D', '2-sat'),
('469D', 'data structures'),
('469D', 'graph matchings'),
('469D', 'greedy'),
('471A', 'implementation'),
('471B', 'sortings'),
('471C', 'binary search'),
('471C', 'brute force'),
('471C', 'greedy'),
('471C', 'math'),
('472A', 'math'),
('472A', 'number theory'),
('472C', 'greedy'),
('472D', 'dfs and similar'),
('472D', 'dsu'),
('472D', 'shortest paths'),
('472D', 'trees'),
('474A', 'implementation'),
('474B', 'binary search'),
('474B', 'implementation'),
('474D', 'dp'),
('475A', 'implementation'),
('475B', 'brute force'),
('475B', 'dfs and similar'),
('475B', 'graphs'),
('475B', 'implementation'),
('475D', 'brute force'),
('475D', 'data structures'),
('475D', 'math'),
('476B', 'bitmasks'),
('476B', 'brute force'),
('476B', 'combinatorics'),
('476B', 'dp'),
('476B', 'math'),
('476B', 'probabilities'),
('478A', 'implementation'),
('478B', 'combinatorics'),
('478B', 'constructive algorithms'),
('478B', 'greedy'),
('478B', 'math'),
('478C', 'greedy'),
('479D', 'binary search'),
('479D', 'greedy'),
('479D', 'implementation'),
('485A', 'implementation'),
('485A', 'math'),
('485A', 'matrices'),
('485B', 'brute force'),
('485B', 'greedy'),
('485C', 'implementation'),
('485C', 'math'),
('486A', 'implementation'),
('486A', 'math'),
('486B', 'greedy'),
('486B', 'hashing'),
('486B', 'implementation'),
('486C', 'greedy'),
('486C', 'implementation'),
('486D', 'dfs and similar'),
('486D', 'dp'),
('486D', 'math'),
('486D', 'trees'),
('488A', 'brute force'),
('488B', 'brute force'),
('488B', 'constructive algorithms'),
('488C', 'brute force'),
('488D', 'data structures'),
('488D', 'dp'),
('488D', 'two pointers'),
('488E', 'constructive algorithms'),
('488E', 'math'),
('489A', 'implementation'),
('489A', 'sortings'),
('489B', 'dfs and similar'),
('489B', 'dp'),
('489B', 'graph matchings'),
('489B', 'greedy'),
('489B', 'sortings'),
('489B', 'two pointers'),
('489C', 'dp'),
('489C', 'greedy'),
('489C', 'implementation'),
('489D', 'brute force'),
('489D', 'combinatorics'),
('489D', 'dfs and similar'),
('489D', 'graphs'),
('489F', 'combinatorics'),
('489F', 'dp'),
('490A', 'greedy'),
('490A', 'implementation'),
('490A', 'sortings'),
('490B', 'dsu'),
('490B', 'implementation'),
('490C', 'brute force'),
('490C', 'math'),
('490C', 'strings'),
('490D', 'brute force'),
('490D', 'dfs and similar'),
('490D', 'math'),
('490D', 'meet-in-the-middle'),
('490D', 'number theory'),
('492A', 'implementation'),
('492B', 'binary search'),
('492B', 'math'),
('492B', 'sortings'),
('492C', 'greedy'),
('492C', 'sortings'),
('492D', 'binary search'),
('492D', 'implementation'),
('492D', 'math'),
('492D', 'sortings'),
('493A', 'implementation'),
('493B', 'implementation'),
('493C', 'binary search'),
('493C', 'brute force'),
('493C', 'implementation'),
('493C', 'sortings'),
('493C', 'two pointers'),
('494A', 'greedy'),
('495A', 'implementation'),
('495B', 'math'),
('495C', 'implementation'),
('496A', 'brute force'),
('496A', 'implementation'),
('496A', 'math'),
('496B', 'brute force'),
('496B', 'constructive algorithms'),
('496B', 'implementation'),
('496C', 'brute force'),
('496C', 'constructive algorithms'),
('496C', 'implementation'),
('497B', 'binary search'),
('497B', 'brute force'),
('497B', 'implementation'),
('499C', 'math'),
('4A', 'brute force'),
('4A', 'math'),
('500A', 'dfs and similar'),
('500A', 'graphs'),
('500A', 'implementation'),
('500B', 'dfs and similar'),
('500B', 'dsu'),
('500B', 'graphs'),
('500B', 'greedy'),
('500B', 'math'),
('500B', 'sortings'),
('500C', 'constructive algorithms'),
('500C', 'greedy'),
('500C', 'implementation'),
('500C', 'math'),
('500D', 'combinatorics'),
('500D', 'dfs and similar'),
('500D', 'graphs'),
('500D', 'trees'),
('501A', 'implementation'),
('501B', 'data structures'),
('501B', 'dsu'),
('501B', 'strings'),
('501C', 'constructive algorithms'),
('501C', 'data structures'),
('501C', 'greedy'),
('501C', 'sortings'),
('501C', 'trees'),
('501D', 'data structures'),
('504B', 'binary search'),
('504B', 'data structures'),
('504B', 'math'),
('505A', 'brute force'),
('505A', 'implementation'),
('505A', 'strings'),
('505B', 'dfs and similar'),
('505B', 'dp'),
('505B', 'dsu'),
('505B', 'graphs'),
('505C', 'dfs and similar'),
('505C', 'dp'),
('505C', 'two pointers'),
('507B', 'geometry'),
('507B', 'math'),
('507D', 'dp'),
('507D', 'implementation'),
('507E', 'dfs and similar'),
('507E', 'dp'),
('507E', 'graphs'),
('507E', 'shortest paths'),
('508D', 'dfs and similar'),
('508D', 'graphs'),
('508E', 'dp'),
('508E', 'greedy'),
('509A', 'brute force'),
('509A', 'implementation'),
('509B', 'constructive algorithms'),
('509B', 'greedy'),
('509B', 'implementation'),
('509C', 'dp'),
('509C', 'greedy'),
('509C', 'implementation'),
('509D', 'constructive algorithms'),
('509D', 'math'),
('509E', 'math'),
('509E', 'strings'),
('510A', 'implementation'),
('510B', 'dfs and similar'),
('510C', 'dfs and similar'),
('510C', 'graphs'),
('510C', 'sortings'),
('510D', 'bitmasks'),
('510D', 'brute force'),
('510D', 'dp'),
('510D', 'math'),
('514A', 'greedy'),
('514A', 'implementation'),
('514B', 'brute force'),
('514B', 'data structures'),
('514B', 'geometry'),
('514B', 'math'),
('514C', 'binary search'),
('514C', 'hashing'),
('514C', 'string suffix structures'),
('514C', 'strings'),
('514D', 'binary search'),
('514D', 'data structures'),
('514D', 'two pointers'),
('515A', 'math'),
('515B', 'brute force'),
('515B', 'dsu'),
('515B', 'meet-in-the-middle'),
('515B', 'number theory'),
('515C', 'greedy'),
('515C', 'math'),
('515C', 'sortings'),
('515D', 'constructive algorithms'),
('515D', 'greedy'),
('516A', 'dp'),
('516A', 'greedy'),
('516A', 'implementation'),
('516A', 'math'),
('516B', 'data structures'),
('516B', 'graph matchings'),
('516B', 'greedy'),
('516B', 'implementation'),
('518A', 'strings'),
('518B', 'implementation'),
('518B', 'strings'),
('518C', 'data structures'),
('518C', 'implementation'),
('518D', 'combinatorics'),
('518D', 'dp'),
('518D', 'probabilities'),
('519A', 'implementation'),
('519B', 'data structures'),
('519B', 'implementation'),
('519C', 'greedy'),
('519C', 'implementation'),
('519C', 'math'),
('519C', 'number theory'),
('519D', 'data structures'),
('519D', 'dp'),
('519D', 'two pointers'),
('519E', 'binary search'),
('519E', 'data structures'),
('519E', 'dfs and similar'),
('519E', 'dp'),
('519E', 'trees'),
('520A', 'implementation'),
('520A', 'strings'),
('520B', 'dfs and similar'),
('520B', 'graphs'),
('520B', 'greedy'),
('520B', 'implementation'),
('520B', 'math'),
('520B', 'shortest paths'),
('520E', 'combinatorics'),
('520E', 'dp'),
('520E', 'math'),
('520E', 'number theory'),
('521C', 'combinatorics'),
('521C', 'dp'),
('521C', 'math'),
('521C', 'number theory'),
('522D', 'data structures'),
('525A', 'greedy'),
('525A', 'hashing'),
('525B', 'greedy'),
('525C', 'greedy'),
('525C', 'sortings'),
('525D', 'data structures'),
('525D', 'greedy'),
('525E', 'binary search'),
('525E', 'bitmasks'),
('525E', 'brute force'),
('525E', 'dp'),
('525E', 'meet-in-the-middle'),
('527A', 'implementation'),
('527A', 'math'),
('527C', 'binary search'),
('527C', 'data structures'),
('527C', 'implementation'),
('527D', 'data structures'),
('527D', 'dp'),
('527D', 'greedy'),
('527D', 'implementation'),
('527D', 'sortings'),
('534A', 'constructive algorithms'),
('534A', 'implementation'),
('534D', 'binary search'),
('534D', 'constructive algorithms'),
('534D', 'data structures'),
('534D', 'greedy'),
('534F', 'bitmasks'),
('534F', 'dp'),
('534F', 'hashing'),
('534F', 'meet-in-the-middle'),
('535A', 'implementation'),
('535B', 'bitmasks'),
('535B', 'brute force'),
('535B', 'implementation'),
('535C', 'binary search'),
('535C', 'math'),
('536A', 'binary search'),
('536A', 'math'),
('536B', 'hashing'),
('536B', 'string suffix structures'),
('536B', 'strings'),
('540C', 'dfs and similar'),
('540D', 'dp'),
('540D', 'probabilities'),
('540E', 'binary search'),
('540E', 'data structures'),
('540E', 'implementation'),
('540E', 'sortings'),
('540E', 'trees'),
('544A', 'implementation'),
('544C', 'dp'),
('544D', 'brute force'),
('544D', 'graphs'),
('544D', 'shortest paths'),
('545A', 'implementation'),
('545B', 'greedy'),
('545C', 'dp'),
('545C', 'greedy'),
('545D', 'greedy'),
('545D', 'implementation'),
('545D', 'sortings'),
('545E', 'graphs'),
('545E', 'greedy'),
('545E', 'shortest paths'),
('546A', 'implementation'),
('546A', 'math'),
('546B', 'brute force'),
('546B', 'greedy'),
('546B', 'implementation'),
('546B', 'sortings'),
('546C', 'brute force'),
('546C', 'dfs and similar'),
('546D', 'constructive algorithms'),
('546D', 'dp'),
('546D', 'math'),
('546D', 'number theory'),
('546E', 'flows'),
('546E', 'math'),
('547A', 'brute force'),
('547A', 'implementation'),
('547A', 'math'),
('547B', 'binary search'),
('547B', 'data structures'),
('547B', 'dp'),
('547B', 'dsu'),
('547C', 'bitmasks'),
('547C', 'number theory'),
('548A', 'brute force'),
('548A', 'implementation'),
('548B', 'brute force'),
('548B', 'greedy'),
('548B', 'implementation'),
('548D', 'binary search'),
('548D', 'data structures'),
('548E', 'number theory'),
('550A', 'brute force'),
('550A', 'dp'),
('550A', 'implementation'),
('550A', 'strings'),
('550B', 'bitmasks'),
('550B', 'brute force'),
('550C', 'brute force'),
('550C', 'dp'),
('550C', 'math'),
('550D', 'constructive algorithms'),
('550D', 'graphs'),
('550D', 'implementation'),
('550E', 'constructive algorithms'),
('550E', 'greedy'),
('550E', 'implementation'),
('551A', 'implementation'),
('551A', 'sortings'),
('551B', 'brute force'),
('551B', 'constructive algorithms'),
('551B', 'implementation'),
('551B', 'strings'),
('551C', 'binary search'),
('551C', 'greedy'),
('551D', 'combinatorics'),
('551D', 'math'),
('551D', 'matrices'),
('551D', 'number theory'),
('551E', 'binary search'),
('551E', 'data structures'),
('554B', 'brute force'),
('554B', 'strings'),
('554C', 'combinatorics'),
('554C', 'dp'),
('554C', 'math'),
('556A', 'greedy'),
('556B', 'brute force'),
('556B', 'implementation'),
('556C', 'implementation'),
('556D', 'binary search'),
('556D', 'data structures'),
('556D', 'greedy'),
('568A', 'brute force'),
('568A', 'implementation'),
('568A', 'math'),
('568A', 'number theory'),
('569B', 'greedy'),
('569C', 'binary search'),
('569C', 'brute force'),
('569C', 'number theory'),
('570C', 'constructive algorithms'),
('570C', 'data structures'),
('570C', 'implementation'),
('571B', 'dp'),
('571B', 'greedy'),
('571B', 'sortings'),
('572A', 'sortings'),
('573A', 'implementation'),
('573A', 'number theory'),
('573B', 'binary search'),
('573B', 'data structures'),
('573B', 'dp'),
('574C', 'number theory'),
('580A', 'brute force'),
('580A', 'dp'),
('580A', 'implementation'),
('580B', 'binary search'),
('580B', 'sortings'),
('580B', 'two pointers'),
('580C', 'dfs and similar'),
('580C', 'trees'),
('580D', 'bitmasks'),
('580D', 'dp'),
('581A', 'implementation'),
('581B', 'implementation'),
('581C', 'implementation'),
('581C', 'sortings'),
('581D', 'bitmasks'),
('581D', 'brute force'),
('581D', 'constructive algorithms'),
('581D', 'implementation'),
('581D', 'math'),
('583A', 'implementation'),
('583B', 'implementation'),
('584A', 'math'),
('584B', 'combinatorics'),
('584C', 'constructive algorithms'),
('584C', 'greedy'),
('584D', 'number theory'),
('587C', 'data structures'),
('587C', 'trees'),
('589A', 'implementation'),
('589B', 'sortings'),
('589D', 'brute force'),
('589D', 'implementation'),
('589F', 'binary search'),
('589F', 'flows'),
('589F', 'greedy'),
('589G', 'binary search'),
('589G', 'data structures'),
('589I', 'implementation'),
('589J', 'dfs and similar'),
('589J', 'implementation'),
('593A', 'brute force'),
('596B', 'greedy'),
('602B', 'dp'),
('602B', 'two pointers'),
('605A', 'constructive algorithms'),
('605A', 'greedy'),
('605C', 'geometry'),
('605D', 'data structures'),
('605D', 'dfs and similar'),
('606A', 'implementation'),
('606D', 'graphs'),
('616A', 'implementation'),
('616A', 'strings'),
('616B', 'games'),
('616B', 'greedy'),
('616D', 'binary search'),
('616D', 'data structures'),
('616D', 'two pointers'),
('617D', 'constructive algorithms'),
('62B', 'binary search'),
('62B', 'implementation'),
('63A', 'implementation'),
('63A', 'sortings'),
('63A', 'strings'),
('644A', 'constructive algorithms'),
('644B', 'data structures'),
('644B', 'two pointers'),
('86D', 'data structures'),
('86D', 'implementation'),
('86D', 'math'),
('86D', 'two pointers'),
('9A', 'math'),
('9A', 'probabilities'),
('9D', 'combinatorics'),
('9D', 'divide and conquer'),
('9D', 'dp');

-- --------------------------------------------------------

--
-- Table structure for table `codeforces_solve`
--

CREATE TABLE `codeforces_solve` (
  `problem_number` varchar(12) NOT NULL,
  `judge_code_id` int(11) NOT NULL,
  `timestamp` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `codeforces_solve`
--

INSERT INTO `codeforces_solve` (`problem_number`, `judge_code_id`, `timestamp`) VALUES
('100155A', 14, 1448509502),
('100155D', 14, 1448507165),
('100155I', 14, 1448507985),
('100283E', 14, 1448423066),
('100283F', 14, 1448427536),
('100283G', 14, 1448437653),
('100283K', 14, 1448424017),
('100283L', 14, 1448434471),
('100513D', 2, 1414241023),
('100513D', 11, 1414235318),
('100513F', 2, 1414265519),
('100513F', 11, 1414224269),
('100513G', 11, 1414235878),
('100513I', 2, 1414222582),
('100513I', 11, 1414221767),
('100513I', 14, 1414222582),
('100513M', 2, 1414232361),
('100513M', 11, 1414237598),
('100513M', 14, 1414232361),
('100548A', 2, 1445938359),
('100548A', 11, 1445938359),
('100548C', 2, 1446057749),
('100548F', 2, 1446052318),
('100548K', 2, 1445940895),
('100548K', 11, 1445940895),
('100609A', 2, 1439031077),
('100609A', 11, 1439031077),
('100609B', 2, 1439034470),
('100609B', 11, 1439034470),
('100609D', 2, 1439033732),
('100609D', 11, 1439033732),
('100609F', 2, 1439031841),
('100609F', 11, 1439031841),
('100609H', 2, 1439046302),
('100609H', 11, 1439046302),
('100609I', 11, 1439092429),
('100609J', 2, 1439039872),
('100609J', 11, 1439039872),
('100685C', 14, 1444038920),
('100685G', 14, 1444578068),
('100792A', 2, 1445673231),
('100792A', 11, 1445673231),
('100792C', 2, 1445680108),
('100792C', 11, 1445680108),
('100792D', 2, 1445672421),
('100792D', 11, 1445672421),
('100792I', 2, 1445672767),
('100792I', 11, 1445672767),
('100792K', 2, 1445756376),
('100801A', 2, 1446803180),
('100801A', 11, 1446803180),
('100801B', 2, 1446810449),
('100801B', 11, 1446810449),
('100801C', 2, 1446815032),
('100801C', 11, 1446815032),
('100801D', 2, 1446820855),
('100801D', 11, 1446821166),
('100801E', 2, 1446804333),
('100801E', 11, 1446804333),
('100801H', 2, 1446808133),
('100801H', 11, 1446808133),
('100801J', 2, 1446813488),
('100801J', 11, 1446813488),
('100801L', 2, 1446804702),
('100801L', 11, 1446804702),
('100803A', 2, 1448521018),
('100803A', 11, 1448521018),
('100803B', 2, 1448522971),
('100803B', 11, 1448522971),
('100803C', 2, 1448523225),
('100803C', 11, 1448523225),
('100803D', 2, 1448540666),
('100803F', 2, 1448527331),
('100803F', 11, 1448527331),
('100814A', 2, 1448273524),
('100814A', 11, 1448273524),
('100814A', 14, 1447671882),
('100814B', 2, 1448272185),
('100814B', 11, 1448272185),
('100814B', 14, 1447665404),
('100814C', 2, 1448285043),
('100814C', 11, 1448285043),
('100814D', 2, 1448275121),
('100814D', 11, 1448275121),
('100814D', 14, 1447668762),
('100814E', 2, 1448285838),
('100814E', 11, 1448285838),
('100814F', 2, 1448268279),
('100814F', 11, 1448268279),
('100814F', 14, 1447664758),
('100814G', 2, 1448271051),
('100814G', 11, 1448271051),
('100814G', 14, 1447669414),
('100814I', 2, 1448268680),
('100814I', 11, 1448268680),
('100814I', 14, 1447665120),
('100814J', 11, 1448345133),
('100814K', 2, 1448279299),
('100814K', 11, 1448279299),
('100814L', 11, 1448344870),
('100825D', 14, 1448363269),
('100825E', 14, 1448359370),
('100825I', 14, 1448361441),
('11D', 14, 1428253314),
('122A', 11, 1445249120),
('148D', 2, 1431075144),
('148D', 11, 1445452122),
('14D', 14, 1428157956),
('17A', 11, 1396570845),
('189A', 2, 1432139578),
('1A', 11, 1444557132),
('208E', 14, 1459310372),
('270A', 11, 1445539180),
('271B', 2, 1382867822),
('272B', 14, 1420351702),
('272D', 2, 1426162093),
('272D', 11, 1426193534),
('285D', 2, 1427924062),
('285D', 11, 1445631055),
('28B', 14, 1428177983),
('294C', 2, 1427916683),
('300C', 2, 1426097266),
('300C', 11, 1426106159),
('300C', 14, 1428074198),
('305B', 11, 1445718978),
('312B', 11, 1445441581),
('327C', 2, 1426082305),
('327C', 11, 1426099234),
('327C', 14, 1428060406),
('327D', 14, 1428056206),
('340C', 2, 1425990213),
('340C', 11, 1427204362),
('340C', 14, 1425884665),
('340E', 11, 1445607320),
('346B', 14, 1427826542),
('351B', 2, 1427905230),
('351D', 2, 1449775819),
('358D', 2, 1433134854),
('375D', 2, 1449675486),
('37A', 11, 1396571037),
('387C', 14, 1418105529),
('389C', 14, 1418185717),
('390C', 14, 1418198043),
('393C', 14, 1418364439),
('393D', 14, 1418480140),
('394C', 14, 1418580171),
('394D', 14, 1418625343),
('401D', 2, 1427990467),
('401D', 11, 1445600648),
('402A', 2, 1394986600),
('402C', 2, 1394990926),
('406A', 2, 1410881743),
('406B', 2, 1410901570),
('406B', 14, 1410949557),
('415C', 2, 1408460139),
('415C', 14, 1418715523),
('415D', 2, 1408468142),
('415D', 14, 1418794583),
('416C', 2, 1408815432),
('416C', 14, 1418801573),
('426A', 2, 1398614702),
('429D', 11, 1445538083),
('435A', 2, 1401464785),
('435B', 2, 1401468841),
('437A', 11, 1418575922),
('437B', 11, 1418576988),
('437C', 11, 1418588868),
('437D', 11, 1431288132),
('439C', 11, 1432590577),
('439D', 2, 1432274318),
('439D', 11, 1432229386),
('439E', 2, 1432652471),
('439E', 11, 1432588211),
('441A', 2, 1402243228),
('441B', 2, 1402257411),
('441C', 11, 1433184151),
('443A', 11, 1449167441),
('443B', 11, 1449171131),
('443D', 2, 1431071367),
('449B', 14, 1423424613),
('453A', 2, 1410987387),
('453A', 11, 1445440484),
('453A', 14, 1411021863),
('454C', 2, 1412081598),
('459C', 2, 1426009107),
('459C', 14, 1425889309),
('459D', 2, 1408453127),
('460B', 11, 1409519514),
('461A', 11, 1436169899),
('465A', 2, 1410104824),
('465A', 11, 1410195541),
('465B', 2, 1410114946),
('465B', 11, 1410198851),
('465C', 2, 1410286879),
('466C', 2, 1411712922),
('466D', 2, 1411738336),
('466E', 2, 1411835169),
('467B', 2, 1411914277),
('467C', 2, 1411897475),
('467D', 2, 1411164584),
('467D', 14, 1411164688),
('469A', 14, 1411366631),
('469D', 2, 1411509799),
('469D', 11, 1411513925),
('469D', 14, 1411380363),
('471A', 2, 1411746493),
('471A', 14, 1411746937),
('471B', 2, 1411791387),
('471C', 2, 1411810671),
('472A', 2, 1411919275),
('472B', 2, 1411920999),
('472C', 2, 1411923108),
('472D', 2, 1412097411),
('474A', 2, 1412610593),
('474A', 14, 1412610552),
('474B', 2, 1412611780),
('474B', 14, 1412611319),
('474D', 2, 1414357861),
('474D', 11, 1414357742),
('475A', 2, 1412515641),
('475B', 2, 1412517930),
('475D', 2, 1414392906),
('476B', 11, 1445439095),
('478A', 2, 1413474603),
('478A', 11, 1413480005),
('478A', 14, 1413476122),
('478B', 2, 1413476954),
('478B', 11, 1413478018),
('478C', 2, 1413488104),
('478C', 11, 1413483211),
('479D', 2, 1414401931),
('485A', 2, 1415259557),
('485A', 14, 1415256805),
('485B', 2, 1415259332),
('485B', 14, 1415258363),
('485C', 2, 1415257422),
('485C', 14, 1415258772),
('486A', 14, 1415719129),
('486B', 14, 1415721636),
('486C', 2, 1415741145),
('486D', 2, 1419148366),
('488A', 2, 1416593587),
('488A', 11, 1418826245),
('488B', 2, 1418378227),
('488C', 2, 1420011525),
('488C', 11, 1447937476),
('488D', 2, 1420058283),
('488D', 11, 1447942132),
('488E', 11, 1447948084),
('489A', 2, 1416239664),
('489A', 11, 1416239080),
('489A', 14, 1416243475),
('489B', 2, 1416241227),
('489B', 11, 1416239820),
('489B', 14, 1416253234),
('489C', 2, 1416243740),
('489C', 11, 1416241273),
('489C', 14, 1416242582),
('489D', 2, 1416247190),
('489D', 11, 1416243500),
('489D', 14, 1425994165),
('489F', 11, 1416390018),
('490A', 2, 1418187612),
('490A', 11, 1418680108),
('490A', 14, 1416734312),
('490B', 2, 1418191985),
('490B', 11, 1418683213),
('490B', 14, 1416739765),
('490C', 2, 1418195729),
('490C', 11, 1418851423),
('490C', 14, 1416832488),
('490D', 2, 1418226480),
('490D', 11, 1418856424),
('492A', 2, 1418101153),
('492A', 11, 1418674886),
('492B', 2, 1418102452),
('492B', 11, 1418677708),
('492C', 2, 1418105293),
('492C', 11, 1418678849),
('492D', 2, 1418121124),
('493A', 2, 1418802668),
('493A', 11, 1418647853),
('493B', 2, 1418804250),
('493B', 11, 1418648856),
('493C', 2, 1418821988),
('493C', 11, 1418672540),
('494A', 11, 1418502212),
('495A', 2, 1418543191),
('495A', 11, 1418498329),
('495B', 2, 1418544622),
('495B', 11, 1418498535),
('495B', 14, 1418494673),
('495C', 2, 1418552358),
('496A', 2, 1418835827),
('496A', 11, 1418834400),
('496A', 14, 1418834247),
('496B', 2, 1418845324),
('496B', 11, 1418836611),
('496B', 14, 1418850524),
('496C', 2, 1418845589),
('496C', 11, 1418843655),
('496C', 14, 1418848586),
('497B', 2, 1419928279),
('499C', 2, 1419830641),
('499D', 2, 1419865014),
('4A', 11, 1444557478),
('500A', 2, 1419959303),
('500B', 2, 1419967362),
('500C', 2, 1419954499),
('500D', 2, 1426075059),
('500D', 11, 1426275164),
('500D', 14, 1428044670),
('501A', 2, 1421053679),
('501A', 14, 1421053492),
('501B', 2, 1421055154),
('501B', 14, 1421054278),
('501C', 2, 1421062959),
('501C', 14, 1421062921),
('501D', 2, 1421261280),
('504B', 2, 1421261421),
('505A', 14, 1421588023),
('505B', 14, 1421587197),
('505C', 14, 1421827347),
('507B', 14, 1422201765),
('507D', 2, 1422456784),
('507D', 14, 1422457818),
('507E', 2, 1422470366),
('508D', 2, 1434035725),
('508D', 11, 1434057126),
('508E', 2, 1434045465),
('509A', 14, 1423504564),
('509B', 14, 1423506230),
('509C', 2, 1424777265),
('509C', 14, 1423561325),
('509D', 2, 1424767754),
('509E', 2, 1424851798),
('510A', 2, 1423915756),
('510A', 11, 1422913689),
('510A', 14, 1422895056),
('510B', 2, 1423916631),
('510B', 11, 1422915233),
('510B', 14, 1422896308),
('510C', 2, 1423920440),
('510C', 11, 1422916920),
('510C', 14, 1422906314),
('510D', 2, 1423923264),
('510D', 11, 1422920208),
('510D', 14, 1422982748),
('514A', 2, 1423990417),
('514B', 2, 1423991944),
('514C', 2, 1423997684),
('514C', 14, 1423984557),
('514D', 2, 1424155191),
('514D', 14, 1423993414),
('515A', 2, 1424191524),
('515A', 11, 1424191579),
('515B', 2, 1424192738),
('515B', 11, 1424192543),
('515C', 2, 1424195799),
('515C', 11, 1424193887),
('515D', 2, 1424358573),
('515D', 11, 1424197347),
('516A', 14, 1424194416),
('516B', 2, 1424333971),
('516B', 14, 1424239212),
('518A', 11, 1424801881),
('518A', 14, 1424806848),
('518B', 2, 1424797484),
('518B', 11, 1424801017),
('518B', 14, 1424797318),
('518C', 2, 1424805797),
('518C', 11, 1424796617),
('518C', 14, 1424798747),
('518D', 2, 1424808298),
('518D', 11, 1424797537),
('518D', 14, 1424805907),
('519A', 2, 1425128998),
('519A', 11, 1425132813),
('519A', 14, 1425128844),
('519B', 2, 1425129947),
('519B', 11, 1425129561),
('519B', 14, 1425129641),
('519C', 2, 1425131099),
('519C', 11, 1425146994),
('519C', 14, 1425130220),
('519D', 14, 1425149491),
('519E', 2, 1425155973),
('519E', 11, 1425145020),
('519E', 14, 1425244614),
('520A', 11, 1425416789),
('520B', 11, 1425417622),
('520E', 11, 1431807580),
('521C', 2, 1431856112),
('522D', 11, 1427207662),
('525A', 2, 1433058297),
('525B', 2, 1433060240),
('525B', 11, 1433180952),
('525C', 2, 1433190514),
('525C', 11, 1433181866),
('525D', 2, 1433363680),
('525E', 2, 1433057344),
('525E', 11, 1433098005),
('527A', 14, 1426611582),
('527C', 2, 1433158553),
('527D', 2, 1433129201),
('534A', 11, 1432642140),
('534D', 2, 1433010706),
('534F', 2, 1432972556),
('535A', 11, 1432638926),
('535B', 11, 1432639417),
('535C', 2, 1432732795),
('536A', 11, 1432637806),
('536B', 2, 1438233111),
('540C', 14, 1433229139),
('540D', 2, 1430822110),
('540E', 2, 1431340225),
('544A', 11, 1431891767),
('544A', 14, 1433218341),
('544C', 11, 1431894785),
('544C', 14, 1433177889),
('544D', 2, 1432152734),
('544D', 11, 1431901994),
('544D', 14, 1433221949),
('545A', 11, 1432053408),
('545A', 14, 1432992359),
('545B', 2, 1432121148),
('545B', 11, 1432054026),
('545B', 14, 1432994251),
('545C', 11, 1432107484),
('545C', 14, 1433083347),
('545D', 2, 1432113376),
('545D', 11, 1432055354),
('545D', 14, 1432997000),
('545E', 2, 1432117795),
('545E', 11, 1432059259),
('545E', 14, 1433054103),
('546A', 11, 1432314132),
('546A', 14, 1432312342),
('546B', 11, 1432314729),
('546B', 14, 1432314731),
('546C', 2, 1432575659),
('546C', 11, 1432315457),
('546C', 14, 1432353350),
('546D', 2, 1432571162),
('546D', 11, 1432313467),
('546D', 14, 1432354571),
('546E', 11, 1439803774),
('547A', 11, 1433444485),
('547B', 11, 1432662041),
('547C', 11, 1445433677),
('548A', 2, 1432668204),
('548A', 14, 1432658346),
('548B', 2, 1432670186),
('548B', 14, 1432661259),
('548D', 2, 1432667419),
('548D', 14, 1432878311),
('548E', 2, 1445437253),
('550A', 2, 1433444790),
('550B', 2, 1433441441),
('550C', 2, 1433442475),
('550C', 11, 1433445814),
('550D', 2, 1433439513),
('550D', 11, 1433444633),
('550E', 11, 1434065822),
('551A', 2, 1434133234),
('551A', 14, 1434468924),
('551B', 14, 1434481292),
('551C', 14, 1434535976),
('551D', 11, 1434138059),
('551E', 2, 1434137035),
('554B', 14, 1435392521),
('554C', 14, 1435394349),
('556A', 14, 1435414480),
('556B', 14, 1435428980),
('556C', 14, 1435419801),
('556D', 14, 1435480755),
('568A', 11, 1445710403),
('569B', 14, 1439227002),
('569C', 14, 1439226136),
('570C', 11, 1440074111),
('571B', 2, 1440325251),
('571B', 11, 1440403911),
('572A', 14, 1440263154),
('573A', 11, 1440868455),
('573B', 2, 1440935006),
('573B', 11, 1440867819),
('574C', 14, 1440904663),
('580A', 14, 1442942655),
('580B', 14, 1442942279),
('580C', 14, 1442941455),
('580D', 14, 1442940751),
('581A', 11, 1443431080),
('581A', 14, 1443436686),
('581B', 11, 1443431613),
('581C', 11, 1443432816),
('581D', 11, 1443435668),
('583A', 11, 1444571777),
('583A', 14, 1443894806),
('583B', 11, 1444564652),
('583B', 14, 1443896700),
('583C', 11, 1444559663),
('583C', 14, 1443894127),
('584A', 11, 1444149433),
('584B', 11, 1444150064),
('584C', 11, 1444153222),
('584D', 11, 1444155022),
('584D', 14, 1444157766),
('587C', 11, 1445372083),
('588C', 11, 1445291725),
('589A', 2, 1445070615),
('589A', 11, 1445070615),
('589A', 14, 1445072930),
('589B', 2, 1445073358),
('589B', 11, 1445073358),
('589B', 14, 1445085611),
('589D', 2, 1445085648),
('589D', 11, 1445085648),
('589F', 2, 1445099068),
('589F', 11, 1445248292),
('589G', 11, 1445372703),
('589I', 2, 1445069550),
('589I', 11, 1445069550),
('589I', 14, 1445069366),
('589J', 2, 1445072218),
('589J', 11, 1445072218),
('589J', 14, 1445077650),
('593A', 14, 1446729180),
('596B', 14, 1447642343),
('602B', 11, 1449135178),
('605A', 11, 1449685580),
('605C', 11, 1450367067),
('605D', 11, 1450353393),
('606A', 11, 1449677877),
('606D', 11, 1449681650),
('606D', 14, 1450184555),
('616A', 11, 1452525225),
('616B', 11, 1452525570),
('616D', 11, 1452526512),
('617D', 14, 1453621489),
('62B', 14, 1428251000),
('63A', 2, 1378662878),
('644A', 11, 1458225056),
('644B', 11, 1458214663),
('86D', 2, 1449410755),
('9A', 2, 1410982786),
('9A', 11, 1445439484),
('9D', 2, 1422621653);

-- --------------------------------------------------------

--
-- Table structure for table `codeforces_user`
--

CREATE TABLE `codeforces_user` (
  `user_id` int(11) NOT NULL,
  `judge_code_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `codeforces_user`
--

INSERT INTO `codeforces_user` (`user_id`, `judge_code_id`) VALUES
(8, 2),
(6, 11),
(10, 14);

-- --------------------------------------------------------

--
-- Table structure for table `contest_list`
--

CREATE TABLE `contest_list` (
  `contest_id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL,
  `contest_name` varchar(200) NOT NULL,
  `contest_date` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `contest_list`
--

INSERT INTO `contest_list` (`contest_id`, `course_id`, `contest_name`, `contest_date`) VALUES
(13, 12, 'first', '2016-03-27'),
(14, 12, 'second', '2016-03-29'),
(15, 12, 'third', '2016-03-31'),
(16, 12, 'forth', '2016-04-01');

-- --------------------------------------------------------

--
-- Table structure for table `contest_problem_list`
--

CREATE TABLE `contest_problem_list` (
  `problem_id` int(11) NOT NULL,
  `problem_number` varchar(2) NOT NULL,
  `contest_id` int(11) NOT NULL,
  `difficulty` int(11) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `contest_problem_list`
--

INSERT INTO `contest_problem_list` (`problem_id`, `problem_number`, `contest_id`, `difficulty`) VALUES
(75, 'A', 13, 1),
(76, 'B', 13, 5),
(77, 'C', 13, 4),
(78, 'D', 13, 1),
(79, 'E', 13, 1),
(80, 'F', 13, 1),
(81, 'A', 14, 2),
(82, 'B', 14, 1),
(83, 'C', 14, 2),
(84, 'D', 14, 1),
(85, 'E', 14, 1),
(86, 'F', 14, 1),
(87, 'G', 14, 1),
(88, 'H', 14, 1),
(89, 'A', 15, 1),
(90, 'B', 15, 1),
(91, 'C', 15, 1),
(92, 'D', 15, 1),
(93, 'E', 15, 1),
(94, 'F', 15, 1),
(95, 'G', 15, 1),
(96, 'H', 15, 1),
(97, 'A', 16, 1),
(98, 'B', 16, 1),
(99, 'C', 16, 1),
(100, 'D', 16, 1),
(101, 'E', 16, 1),
(102, 'F', 16, 1),
(103, 'G', 16, 1);

-- --------------------------------------------------------

--
-- Table structure for table `course_table`
--

CREATE TABLE `course_table` (
  `course_id` int(11) NOT NULL,
  `owner_id` int(11) NOT NULL,
  `course_title` varchar(200) NOT NULL,
  `course_password` varchar(50) NOT NULL,
  `start_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `course_table`
--

INSERT INTO `course_table` (`course_id`, `owner_id`, `course_title`, `course_password`, `start_date`) VALUES
(8, 5, 'CSE', '1', '2016-03-25 16:44:19'),
(9, 9, 'CSE 100', '1234', '2016-03-27 13:41:05'),
(10, 9, 'CSE 200', '123', '2016-03-27 16:47:55'),
(12, 5, 'CSE 100', '1', '2016-04-02 06:12:06');

-- --------------------------------------------------------

--
-- Table structure for table `enroll_table`
--

CREATE TABLE `enroll_table` (
  `course_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `enroll_id` varchar(20) NOT NULL,
  `enroll_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `enroll_table`
--

INSERT INTO `enroll_table` (`course_id`, `student_id`, `enroll_id`, `enroll_date`) VALUES
(8, 5, '2012331027', '2016-03-31 05:49:38'),
(9, 10, '2012331013', '2016-03-27 14:07:17'),
(10, 6, '27', '2016-03-27 16:49:01'),
(12, 5, '2012331027', '2016-04-02 06:12:31'),
(12, 6, '2012331017', '2016-04-02 06:14:43');

-- --------------------------------------------------------

--
-- Table structure for table `handle_table`
--

CREATE TABLE `handle_table` (
  `judge_code_id` int(11) NOT NULL,
  `judge_name` varchar(20) NOT NULL,
  `handle` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `handle_table`
--

INSERT INTO `handle_table` (`judge_code_id`, `judge_name`, `handle`) VALUES
(14, 'codeforces', 'bishwa_sust'),
(11, 'codeforces', 'codename27'),
(9, 'codeforces', 'J-C'),
(2, 'codeforces', 'olee12'),
(13, 'uva', 'bishwa_sust'),
(5, 'uva', 'dipu_sust'),
(1, 'uva', 'olee12'),
(4, 'uva', 'rdK8ErGE'),
(7, 'uva', 'rumman_sust'),
(8, 'uva', 'udoy'),
(15, 'vjudge', 'bishwa_sust'),
(10, 'vjudge', 'olee12'),
(3, 'vjudge', 'olee12vjudge'),
(12, 'vjudge', 'SUST_Nayeem');

-- --------------------------------------------------------

--
-- Table structure for table `solve_list`
--

CREATE TABLE `solve_list` (
  `problem_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `no_submission` int(11) NOT NULL,
  `solve_flag` int(1) NOT NULL,
  `time` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `solve_list`
--

INSERT INTO `solve_list` (`problem_id`, `student_id`, `no_submission`, `solve_flag`, `time`) VALUES
(75, 5, 0, 1, 0),
(75, 6, 0, 0, 0),
(76, 5, 5, 1, 21720),
(76, 6, 3, 0, 0),
(77, 5, 0, 1, 14888),
(77, 6, 0, 1, 1759),
(78, 5, 2, 0, 0),
(78, 6, 9, 1, 15103),
(79, 5, 0, 1, 18316),
(79, 6, 2, 1, 11006),
(80, 5, 0, 0, 0),
(80, 6, 0, 0, 0),
(81, 5, 4, 1, 19327),
(81, 6, 0, 0, 0),
(82, 5, 3, 1, 25695),
(82, 6, 0, 0, 0),
(83, 5, 0, 1, 0),
(83, 6, 0, 0, 0),
(84, 5, 0, 0, 0),
(84, 6, 2, 1, 8366),
(85, 5, 5, 1, 32905),
(85, 6, 9, 1, 33381),
(86, 5, 0, 0, 0),
(86, 6, 0, 0, 0),
(87, 5, 1, 0, 0),
(87, 6, 11, 1, 33008),
(88, 5, 15, 1, 18488),
(88, 6, 0, 0, 0),
(89, 5, 1, 1, 780),
(90, 5, 0, 0, 0),
(91, 5, 0, 0, 0),
(92, 5, 0, 1, 40020),
(93, 5, 3, 1, 7566),
(94, 5, 0, 0, 0),
(95, 5, 4, 1, 10983),
(96, 5, 0, 0, 0),
(97, 6, 0, 0, 0),
(98, 6, 0, 1, 4680),
(99, 6, 4, 1, 39607),
(100, 6, 0, 0, 0),
(101, 6, 7, 0, 0),
(102, 6, 0, 0, 0),
(103, 6, 0, 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `user_table`
--

CREATE TABLE `user_table` (
  `user_id` int(11) NOT NULL,
  `user_name` varchar(50) NOT NULL,
  `user_email` varchar(50) NOT NULL,
  `password` varchar(50) NOT NULL,
  `reg_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_table`
--

INSERT INTO `user_table` (`user_id`, `user_name`, `user_email`, `password`, `reg_date`) VALUES
(1, 'Kazi Nayeem', 'masum.nayeem@gmail.com', 'kazinayeem', '2016-03-18 03:38:36'),
(3, 'Kazi Nayeem', 'nayeem.cse.sust@gmail.com', 'kazinayeem', '2016-03-18 06:21:52'),
(4, 'Kazi Nayeem', 'kazi@gmail.com', 'kazinayeem', '2016-03-18 06:28:35'),
(5, 'th olee', 'olee@gmail.com', '1', '2016-03-18 06:55:02'),
(6, 'nayeem', 'nayeem@gmail.com', '1', '2016-03-22 17:00:25'),
(7, 'Kazi Nayeem', 'masum@gmail.com', '1', '2016-03-25 20:16:10'),
(8, 'test', 'test@gmail.com', '1', '2016-03-25 20:20:22'),
(9, 'Saif', 'saif.sust@gmail.com', '1', '2016-03-27 13:40:27'),
(10, 'Bishwajit Purkaystha', 'bishwa420@gmail.com', '00000', '2016-03-27 14:03:59');

-- --------------------------------------------------------

--
-- Table structure for table `uva_problem_category`
--

CREATE TABLE `uva_problem_category` (
  `problem_number` int(11) NOT NULL,
  `category` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `uva_problem_category`
--

INSERT INTO `uva_problem_category` (`problem_number`, `category`) VALUES
(36, 'Ad Hoc'),
(36, 'Ad Hoc Mathematics Problems'),
(36, 'Mathematical Simulation (Brute Force)'),
(36, 'Mathematical Simulation (Brute Force), easier'),
(36, 'Sequences'),
(36, 'Sequences and Number Systems'),
(37, '2D Array Manipulation'),
(37, 'Ad Hoc Problems - Part 2'),
(37, 'Just Ad Hoc'),
(37, 'Linear Data Structures with Built-in Libraries'),
(38, 'Complete Search'),
(38, 'Iterative (One Loop, Linear Scan)'),
(38, 'Iterative (The Easier Ones)'),
(39, 'Dynamic Programming'),
(39, 'Longest Increasing Subsequence (LIS) - Classical'),
(39, 'Single-Source Shortest/Longest Paths in DAG'),
(39, 'Single-Source Shortest/Longest Paths on DAG'),
(39, 'Special Graph'),
(39, 'Special Graph (Directed Acyclic Graph)'),
(40, 'All-Pairs Shortest Paths'),
(40, 'Variants'),
(41, 'Complete Search'),
(41, 'Iterative (The Easier Ones)'),
(41, 'Iterative (Two Nested Loops)'),
(42, 'GCD and/or LCM'),
(42, 'Number Theory'),
(43, 'Ad Hoc Mathematics Problems'),
(43, 'Logarithm, Exponentiation, Power'),
(44, 'Dynamic Programming'),
(44, 'Max 2D Range Sum'),
(44, 'Max Sum'),
(44, 'Maximum Sum'),
(45, 'Graham''s Scan'),
(45, 'Graham''s Scan for Convex Hull'),
(45, 'Polygon'),
(45, 'Standard'),
(46, 'Ad Hoc String Processing Problems - Part 2'),
(46, 'Linear Data Structures with Built-in Libraries'),
(46, 'Output Formatting'),
(46, 'Sorting-related problems'),
(47, 'Dynamic Programming'),
(47, 'Longest Increasing Subsequence (LIS)'),
(47, 'Longest Increasing Subsequence (LIS) - Classical'),
(48, 'Special Graph'),
(48, 'Tree'),
(49, 'Ad Hoc Mathematics Problems'),
(49, 'Logarithm, Exponentiation, Power'),
(50, 'Ad Hoc Problems - Part 1'),
(50, 'Ad Hoc Problems - Part 2'),
(50, 'Game (Others), Harder'),
(50, 'Just Ad Hoc'),
(51, 'Special Graph'),
(51, 'Tree'),
(52, 'Dynamic Programming'),
(52, 'Non Classical (medium difficulty)'),
(52, 'Non Classical (The Easier Ones)'),
(53, 'Eulerian Graph'),
(53, 'Special Graphs (Others)'),
(54, 'Graph Traversal'),
(54, 'Just Graph Traversal'),
(55, 'Ad Hoc Problems - Part 2'),
(55, 'Getting Started: The Easy Problems'),
(55, 'Just Ad Hoc'),
(55, 'Medium'),
(56, 'C++ STL stack (Java Stack)'),
(56, 'Linear Data Structures with Built-in Libraries'),
(56, 'Pancake Sorting'),
(56, 'Rare Problems'),
(57, 'Ad Hoc Problems - Part 2'),
(57, 'Basic Geometry - Part 1'),
(57, 'Just Ad Hoc'),
(57, 'Triangles (plus Circles)'),
(58, 'Special Graph'),
(58, 'Tree'),
(59, 'C++ STL algorithm (Java Collections)'),
(59, 'Linear Data Structures with Built-in Libraries'),
(60, 'Depth First Search'),
(60, 'Topological Sort'),
(61, 'All-Pairs Shortest Paths'),
(61, 'Variants'),
(62, 'Ad Hoc Mathematics Problems'),
(62, 'Polynomial'),
(63, 'C++ STL stack (Java Stack)'),
(63, 'Data Structures With Built-in Libraries'),
(63, 'Linear Data Structures with Built-in Libraries'),
(63, 'STL stack'),
(64, 'Modulo Arithmetic'),
(64, 'Number Theory'),
(65, 'Complete Search'),
(65, 'Recursive Backtracking (Harder)'),
(66, 'Ad Hoc Problems - Part 1'),
(66, 'Josephus'),
(66, 'Josephus Problem'),
(66, 'Rare Problems'),
(67, 'More Advanced Search Techniques'),
(67, 'More Challenging Backtracking Problems'),
(69, 'Ad Hoc Problems - Part 1'),
(69, 'Josephus'),
(69, 'Josephus Problem'),
(69, 'Rare Problems'),
(72, 'Ad Hoc Mathematics Problems'),
(72, 'Number Systems'),
(72, 'Number Systems or Sequences'),
(72, 'Sequences and Number Systems'),
(74, 'Ad Hoc Mathematics Problems'),
(74, 'Number Systems'),
(74, 'Number Systems or Sequences'),
(74, 'Sequences and Number Systems'),
(75, 'Ad Hoc Problems - Part 1'),
(75, 'Ad Hoc Problems - Part 2'),
(75, 'Interesting Real Life Problems, Harder'),
(75, 'Just Ad Hoc'),
(76, 'Complete Search'),
(76, 'Iterative (Fancy Techniques)'),
(76, 'Iterative (The Easier Ones)'),
(77, 'Ad Hoc Problems - Part 1'),
(77, 'Ad Hoc Problems - Part 2'),
(77, 'Game (Others), Harder'),
(77, 'Just Ad Hoc'),
(78, 'Problem Decomposition'),
(78, 'Two Components - Complete Search and Geometry'),
(79, 'Geometry Basics'),
(79, 'Triangles (plus Circles)'),
(80, '''Time Waster'' Problems'),
(80, 'Ad Hoc Problems - Part 2'),
(80, 'Just Ad Hoc'),
(81, 'Ad Hoc Problems - Part 1'),
(81, 'Ad Hoc Problems - Part 2'),
(81, 'Interesting Real Life Problems, Harder'),
(81, 'Just Ad Hoc'),
(82, 'C++ STL algorithm (Java Collections)'),
(82, 'Data Structures With Built-in Libraries'),
(82, 'Linear Data Structures with Built-in Libraries'),
(82, 'STL algorithm'),
(83, 'Coin Change (CC)'),
(83, 'Coin Change - Classical'),
(83, 'Dynamic Programming'),
(84, 'Ad Hoc'),
(84, 'Ad Hoc Problems - Part 1'),
(84, 'Ad Hoc String Processing'),
(84, 'Anagram'),
(84, 'Palindrome / Anagram'),
(87, 'Ad Hoc Problems - Part 1'),
(87, 'Josephus'),
(87, 'Josephus Problem'),
(87, 'Rare Problems'),
(88, 'Basic Geometry - Part 1'),
(88, 'Divide and Conquer'),
(88, 'Points and Lines'),
(88, 'Standard'),
(89, 'Ad Hoc String Processing Problems'),
(89, 'Just Ad Hoc'),
(90, 'Complete Search'),
(90, 'Iterative'),
(90, 'Iterative (The Easier Ones)'),
(90, 'Iterative (Three or More Nested Loops, Easier)'),
(91, 'Basic Geometry'),
(91, 'Quadrilaterals'),
(92, 'Ad Hoc Problems - Part 1'),
(92, 'Anagram'),
(92, 'Palindrome / Anagram'),
(95, 'Ad Hoc'),
(95, 'Ad Hoc String Processing'),
(95, 'Ad Hoc String Processing Problems - Part 2'),
(95, 'Output Formatting'),
(96, 'Factorial'),
(96, 'Number Theory'),
(96, 'Working with Prime Factors'),
(97, 'Ad Hoc Problems - Part 1'),
(97, 'Ad Hoc Problems - Part 2'),
(97, 'Interesting Real Life Problems'),
(97, 'Interesting Real Life Problems, Easier'),
(98, 'Ad Hoc Problems - Part 1'),
(98, 'Game (Card)'),
(100, 'Classic'),
(100, 'Standard'),
(100, 'String Processing with DP'),
(100, 'String Processing with Dynamic Programming'),
(101, 'Complete Search'),
(101, 'Recursive Backtracking (Harder)'),
(101, 'Recursive Backtracking (The More Challenging Ones)'),
(102, 'Coin Change (CC)'),
(102, 'Coin Change - Classical'),
(102, 'Dynamic Programming'),
(103, 'Complete Search'),
(103, 'Recursive Backtracking (Easy)'),
(103, 'Recursive Backtracking (The Easier Ones)'),
(104, 'Graph Traversal'),
(104, 'Just Graph Traversal'),
(106, 'Ad Hoc Problems - Part 2'),
(106, 'Time'),
(119, 'Divide and Conquer'),
(119, 'Other Divide and Conquer Problems'),
(120, 'Basic Geometry'),
(120, 'Geometry Basics'),
(120, 'Lines'),
(120, 'Points and Lines'),
(120, 'Problem Decomposition'),
(120, 'Two Components - Complete Search and Geometry'),
(122, 'All-Pairs Shortest Paths'),
(122, 'Floyd Warshall''s'),
(122, 'Standard'),
(122, 'Standard Application (for APSP or SSSP on small graph)'),
(123, 'Ad Hoc Problems - Part 1'),
(123, 'Ad Hoc Problems - Part 2'),
(123, 'Interesting Real Life Problems, Easier'),
(123, 'Just Ad Hoc'),
(124, 'Complete Search'),
(124, 'Iterative (The Easier Ones)'),
(124, 'Iterative (Three or More Nested Loops, Easier)'),
(126, 'Geometry Basics'),
(126, 'Triangles (plus Circles)'),
(127, 'Basic Geometry'),
(127, 'Intersection Problems'),
(127, 'Line Segment Intersection'),
(127, 'Points and Lines'),
(129, 'Complete Search'),
(129, 'Recursive Backtracking'),
(129, 'Recursive Backtracking (Harder)'),
(129, 'Recursive Backtracking (The More Challenging Ones)'),
(131, 'Ad Hoc Problems - Part 1'),
(131, 'Anagram'),
(131, 'Palindrome / Anagram'),
(136, 'Depth First Search'),
(136, 'Topological Sort'),
(137, 'Basic Geometry'),
(137, 'Geometry Basics'),
(137, 'Problem Decomposition'),
(137, 'Quadrilaterals'),
(137, 'Rectangles'),
(137, 'Two Components - Complete Search and Geometry'),
(138, 'Cycle-Finding'),
(138, 'Standard'),
(144, 'Complete Search'),
(144, 'Recursive Backtracking (Harder)'),
(144, 'Recursive Backtracking (The More Challenging Ones)'),
(149, 'Ad Hoc String Processing Problems'),
(149, 'Ad Hoc String Processing Problems - Part 1'),
(149, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(149, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(150, '''Time Waster'' Problems'),
(150, 'Ad Hoc Problems - Part 2'),
(152, 'Dynamic Programming'),
(152, 'Traveling Salesman Problem (TSP)'),
(154, 'Graham''s Scan'),
(154, 'Graham''s Scan for Convex Hull'),
(154, 'Polygon'),
(154, 'Standard'),
(156, 'Ad Hoc Problems - Part 1'),
(156, 'Game (Others)'),
(156, 'Game (Others), Harder'),
(158, 'Complete Search'),
(158, 'Recursive Backtracking'),
(158, 'Recursive Backtracking (Medium)'),
(158, 'Recursive Backtracking (The Easier Ones)'),
(163, 'Ad Hoc Problems - Part 1'),
(163, 'Game (Others)'),
(163, 'Game (Others), Harder'),
(166, '1D Array Manipulation'),
(166, 'Linear Data Structures with Built-in Libraries'),
(167, 'Dynamic Programming'),
(167, 'Longest Increasing Subsequence (LIS)'),
(167, 'Longest Increasing Subsequence (LIS) - Classical'),
(168, 'Ad Hoc Problems - Part 1'),
(168, 'Game (Others)'),
(168, 'Game (Others), Harder'),
(170, 'Complete Search'),
(170, 'Iterative (Fancy Techniques)'),
(181, 'Ad Hoc String Processing Problems'),
(181, 'Ad Hoc String Processing Problems - Part 1'),
(181, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(181, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(183, 'Finding Strongly Connected Components'),
(183, 'Graph Traversal'),
(189, 'Complete Search'),
(189, 'Iterative (The More Challenging Ones)'),
(189, 'Iterative (Three or More Nested Loops, Harder)'),
(191, 'Ad Hoc Problems - Part 1'),
(191, 'Game (Chess)'),
(192, 'Complete Search'),
(192, 'Iterative (One Loop, Linear Scan)'),
(192, 'Iterative (The Easier Ones)'),
(193, 'Non Classic'),
(193, 'String Processing with Dynamic Programming'),
(195, 'Maximum Flow'),
(195, 'Network Flow'),
(195, 'Standard'),
(195, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(196, 'Depth First Search'),
(196, 'Finding Connected Components / Flood Fill'),
(196, 'Flood Fill/Finding Connected Components'),
(196, 'Graph Traversal'),
(199, 'Ad Hoc'),
(199, 'Ad Hoc String Processing'),
(199, 'Ad Hoc String Processing Problems'),
(199, 'Just Ad Hoc'),
(200, 'Ad Hoc Mathematics Problems'),
(200, 'Grid'),
(206, 'Basic Geometry'),
(206, 'Geometry Basics'),
(206, 'Lines'),
(206, 'Points and Lines'),
(206, 'Problem Decomposition'),
(206, 'Two Components - Complete Search and Geometry'),
(207, 'Ad Hoc String Processing Problems'),
(207, 'Ad Hoc String Processing Problems - Part 1'),
(207, 'Input Parsing'),
(207, 'Input Parsing (Non Recursive)'),
(208, 'Ad Hoc'),
(208, 'Ad Hoc Problems - Part 1'),
(208, 'Easy'),
(208, 'Getting Started: The Easy Problems'),
(208, 'Super Easy'),
(209, 'Problem Decomposition'),
(209, 'Two Components - Involving Graph'),
(211, 'Cycle-Finding'),
(211, 'Standard'),
(212, 'Ad Hoc Mathematics Problems'),
(212, 'Just Ad Hoc'),
(214, 'Ad Hoc Problems - Part 1'),
(214, 'Game (Chess)'),
(216, 'Graph Traversal'),
(216, 'Just Graph Traversal'),
(226, 'Bonus Features'),
(226, 'Bonus Features: Base Number Conversion'),
(226, 'Java BigInteger Class'),
(227, 'Data Structures With Our-Own Libraries'),
(227, 'Eulerian Graph'),
(227, 'Graph (simple ones)'),
(227, 'Special Graphs (Others)'),
(230, 'Functions involving Prime Factors'),
(230, 'Number Theory'),
(230, 'Prime Numbers'),
(231, 'Problem Decomposition'),
(231, 'Three Components'),
(232, 'Complete Search'),
(232, 'Iterative (The Easier Ones)'),
(232, 'Iterative (Three or More Nested Loops, Harder)'),
(233, 'Data Structures with Our-Own Libraries'),
(233, 'Tree-related Data Structures'),
(235, 'Data Structures With Built-in Libraries'),
(235, 'Inversion Index'),
(235, 'Rare Problems'),
(235, 'Sorting-related problems'),
(236, 'Ad Hoc Problems - Part 2'),
(236, 'Time'),
(237, 'Complete Search'),
(237, 'Recursive Backtracking (Medium)'),
(241, 'Ad Hoc Problems - Part 1'),
(241, 'Josephus'),
(241, 'Josephus Problem'),
(241, 'Rare Problems'),
(242, 'Ad Hoc String Processing Problems'),
(242, 'Ad Hoc String Processing Problems - Part 1'),
(242, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(242, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(247, 'Greedy'),
(247, 'Non Classical, Usually Harder'),
(247, 'Standard'),
(250, 'On Unweighted Graph: BFS'),
(250, 'On Unweighted Graph: BFS, Harder'),
(250, 'Single-Source Shortest Paths (SSSP)'),
(251, 'Depth First Search'),
(251, 'Finding Articulation Points / Bridges'),
(251, 'Finding Articulation Points/Bridges'),
(251, 'Graph Traversal'),
(256, 'Ad Hoc String Processing Problems'),
(256, 'Output Formatting'),
(257, 'More Advanced Search Techniques'),
(257, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(257, 'On Unweighted Graph: BFS'),
(257, 'Single-Source Shortest Paths (SSSP)'),
(260, 'Factorial'),
(260, 'Number Theory'),
(261, 'Ad Hoc String Processing Problems'),
(261, 'Ad Hoc String Processing Problems - Part 1'),
(261, 'Input Parsing'),
(261, 'Solvable with Java String/Pattern class (Regular Expression)'),
(262, 'Binomial Coefficients'),
(262, 'Combinatorics'),
(262, 'Number Theory'),
(263, 'Ad Hoc String Processing Problems'),
(263, 'Ad Hoc String Processing Problems - Part 1'),
(263, 'Input Parsing'),
(263, 'Input Parsing (Non Recursive)'),
(267, 'Complete Search'),
(267, 'Iterative (The Easier Ones)'),
(267, 'Recursive Backtracking (Medium)'),
(268, 'GCD and/or LCM'),
(268, 'GCD/LCM'),
(268, 'Number Theory'),
(269, 'Ad Hoc Problems - Part 1'),
(269, 'Interesting Real Life Problems, Harder'),
(270, 'Floyd Warshall''s'),
(270, 'Variants'),
(271, '''Time Waster'' Problems'),
(271, 'Ad Hoc Problems - Part 2'),
(271, 'Just Ad Hoc'),
(272, 'Breadth First Search'),
(272, 'Data Structures With Built-in Libraries'),
(272, 'On Unweighted Graph: BFS'),
(272, 'On Unweighted Graph: BFS, Easier'),
(272, 'Single-Source Shortest Paths (SSSP)'),
(272, 'SSSP on Unweighted Graph'),
(272, 'STL queue'),
(273, '''Time Waster'' Problems'),
(273, 'Ad Hoc Problems - Part 2'),
(273, 'Just Ad Hoc'),
(275, 'Ad Hoc Problems - Part 1'),
(275, 'Game (Others)'),
(275, 'Game (Others), Harder'),
(276, 'Ad Hoc Problems - Part 1'),
(276, 'Game (Others)'),
(276, 'Game (Others), Easier'),
(277, 'All-Pairs Shortest Paths'),
(277, 'Dijkstra''s'),
(277, 'Floyd Warshall''s'),
(277, 'On Weighted Graph: Dijkstra''s'),
(277, 'Single-Source Shortest Paths (SSSP)'),
(277, 'Standard'),
(277, 'Standard Application (for APSP or SSSP on small graph)'),
(279, 'Big Integer (use Java)'),
(279, 'Bonus Features'),
(279, 'Bonus Features: Base Number Conversion'),
(279, 'Java BigInteger Class'),
(279, 'Number Theory'),
(280, 'Ad Hoc'),
(280, 'Ad Hoc Mathematics Problems'),
(280, 'Just Ad Hoc'),
(280, 'Number Theory'),
(280, 'Rare Problems'),
(280, 'Roman Numerals'),
(282, 'Ad Hoc Problems - Part 1'),
(282, 'Ad Hoc Problems - Part 2'),
(282, 'Interesting Real Life Problems'),
(282, 'Interesting Real Life Problems, Harder'),
(283, 'Complete Search'),
(283, 'Iterative (The Easier Ones)'),
(283, 'Iterative (Two Nested Loops)'),
(284, 'Dynamic Programming'),
(284, 'Matrix Chain Multiplication'),
(284, 'Other Classical Problems'),
(284, 'Rare Problems'),
(285, '''Time Waster'' Problems'),
(285, 'Ad Hoc Problems - Part 2'),
(285, 'Just Ad Hoc'),
(286, 'Cycle-Finding'),
(286, 'Number Theory'),
(286, 'Standard'),
(288, 'Depth First Search'),
(288, 'Finding Connected Components / Flood Fill'),
(288, 'Flood Fill/Finding Connected Components'),
(288, 'Graph Traversal'),
(289, 'Ad Hoc'),
(289, 'Ad Hoc Problems - Part 1'),
(289, 'Ad Hoc String Processing'),
(289, 'Palindrome'),
(289, 'Palindrome / Anagram'),
(291, 'Big Integer (use Java)'),
(291, 'Bonus Features'),
(291, 'Bonus Features: Base Number Conversion'),
(291, 'Java BigInteger Class'),
(291, 'Number Theory'),
(292, 'Basic Geometry'),
(292, 'Points and Lines'),
(292, 'Problem Decomposition'),
(292, 'Two Components - Complete Search and Geometry'),
(293, 'Coin Change (CC)'),
(293, 'Coin Change - Classical'),
(293, 'Dynamic Programming'),
(297, 'Graham''s Scan'),
(297, 'Graham''s Scan for Convex Hull'),
(297, 'Polygon'),
(297, 'Standard'),
(298, 'Ad Hoc Problems - Part 1'),
(298, 'Ad Hoc Problems - Part 2'),
(298, 'Interesting Real Life Problems, Easier'),
(298, 'Just Ad Hoc'),
(305, 'Binomial Coefficients'),
(305, 'Combinatorics'),
(305, 'Number Theory'),
(307, 'Ad Hoc Mathematics Problems'),
(307, 'Mathematical Simulation (Brute Force)'),
(307, 'Mathematical Simulation (Brute Force), easier'),
(310, 'Modulo Arithmetic'),
(310, 'Number Theory'),
(313, 'Ad Hoc'),
(313, 'Ad Hoc Mathematics Problems'),
(313, 'Base Number Variants'),
(313, 'Number Theory'),
(314, 'Basic Geometry'),
(314, 'Intersection Problems'),
(314, 'Line Segment Intersection'),
(314, 'Points and Lines'),
(315, 'Ad Hoc Problems - Part 1'),
(315, 'Ad Hoc Problems - Part 2'),
(315, 'Game (Others), Harder'),
(315, 'Just Ad Hoc'),
(316, 'Complete Search'),
(316, 'Recursive Backtracking (Easy)'),
(316, 'Recursive Backtracking (The Easier Ones)'),
(317, '''Time Waster'' Problems'),
(317, 'Ad Hoc Problems - Part 2'),
(317, 'Just Ad Hoc'),
(318, 'Ad Hoc Mathematics Problems'),
(318, 'Mathematical Simulation (Brute Force)'),
(318, 'Mathematical Simulation (Brute Force), easier'),
(319, 'Breadth First Search'),
(319, 'On Unweighted Graph: BFS'),
(319, 'On Unweighted Graph: BFS, Easier'),
(319, 'Single-Source Shortest Paths (SSSP)'),
(319, 'SSSP on Unweighted Graph'),
(320, 'Ad Hoc String Processing Problems'),
(320, 'Ad Hoc String Processing Problems - Part 1'),
(320, 'Input Parsing'),
(320, 'Input Parsing (Recursive)'),
(322, 'Complete Search'),
(322, 'Iterative (The Easier Ones)'),
(322, 'Iterative (Three or More Nested Loops, Harder)'),
(324, 'On Unweighted Graph: BFS, Easier'),
(324, 'Single-Source Shortest Paths (SSSP)'),
(325, 'Big Integer (use Java)'),
(325, 'Bonus Features'),
(325, 'Bonus Features: Base Number Conversion'),
(325, 'Java BigInteger Class'),
(325, 'Number Theory'),
(327, 'Ad Hoc String Processing Problems'),
(327, 'Ad Hoc String Processing Problems - Part 1'),
(327, 'Input Parsing'),
(327, 'Input Parsing (Non Recursive)'),
(328, 'Ad Hoc Mathematics Problems'),
(328, 'Polynomial'),
(330, '1D Array Manipulation'),
(330, 'Ad Hoc'),
(330, 'Basic Data Structures'),
(330, 'Linear Data Structures with Built-in Libraries'),
(333, 'Ad Hoc String Processing Problems'),
(333, 'Ad Hoc String Processing Problems - Part 1'),
(333, 'Input Parsing'),
(333, 'Input Parsing (Non Recursive)'),
(341, 'Ad Hoc Problems - Part 2'),
(341, 'Interesting Real Life Problems'),
(342, 'Ad Hoc'),
(342, 'Ad Hoc Problems - Part 1'),
(342, 'Ad Hoc String Processing'),
(342, 'Palindrome'),
(342, 'Palindrome / Anagram'),
(343, 'Ad Hoc Problems - Part 1'),
(343, 'Josephus'),
(343, 'Josephus Problem'),
(343, 'Rare Problems'),
(344, 'Ad Hoc Problems - Part 1'),
(344, 'Ad Hoc Problems - Part 2'),
(344, 'Interesting Real Life Problems'),
(344, 'Interesting Real Life Problems, Harder'),
(346, '''Time Waster'' Problems'),
(346, 'Ad Hoc Problems - Part 2'),
(346, 'Just Ad Hoc'),
(347, 'Number Theory'),
(347, 'Prime Numbers'),
(349, 'Cycle-Finding'),
(349, 'GCD and/or LCM'),
(349, 'Number Theory'),
(350, 'Ad Hoc'),
(350, 'Ad Hoc String Processing'),
(350, 'Ad Hoc String Processing Problems'),
(350, 'String Comparison'),
(351, 'Classical, Usually Easier'),
(351, 'Greedy'),
(351, 'Standard'),
(353, 'GCD and/or LCM'),
(353, 'GCD/LCM'),
(353, 'Number Theory'),
(354, 'Ad Hoc Mathematics Problems'),
(354, 'Number Systems or Sequences'),
(354, 'Sequences'),
(354, 'Sequences and Number Systems'),
(355, '1D Array Manipulation'),
(355, 'Basic Data Structures'),
(355, 'Linear Data Structures with Built-in Libraries'),
(357, 'Complete Search'),
(357, 'Recursive Backtracking (Harder)'),
(357, 'Recursive Backtracking (The More Challenging Ones)'),
(358, 'Breadth First Search'),
(358, 'C++ STL map (Java TreeMap)'),
(358, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(358, 'Non Linear Data Structures with Built-in Libraries'),
(358, 'SSSP on Unweighted Graph'),
(363, 'Ad Hoc'),
(363, 'Ad Hoc String Processing'),
(363, 'In 2D Grid'),
(363, 'String Matching'),
(364, 'All-Pairs Shortest Paths'),
(364, 'Floyd Warshall''s'),
(364, 'Standard'),
(364, 'Standard Application (for APSP or SSSP on small graph)'),
(365, 'Basic Features'),
(365, 'Big Integer (use Java)'),
(365, 'Java BigInteger Class'),
(365, 'Number Theory'),
(370, 'Breadth First Search'),
(370, 'On Unweighted Graph: BFS'),
(370, 'On Unweighted Graph: BFS, Easier'),
(370, 'Single-Source Shortest Paths (SSSP)'),
(370, 'SSSP on Unweighted Graph'),
(374, 'Complete Search'),
(374, 'Recursive Backtracking (Harder)'),
(374, 'Recursive Backtracking (The More Challenging Ones)'),
(375, '2D Array Manipulation'),
(375, 'Ad Hoc Problems - Part 2'),
(375, 'Just Ad Hoc'),
(375, 'Linear Data Structures with Built-in Libraries'),
(376, 'Complete Search'),
(376, 'Iterative (Fancy Techniques)'),
(376, 'Iterative (The Easier Ones)'),
(377, 'All-Pairs Shortest Paths'),
(377, 'Variants'),
(378, 'Dynamic Programming'),
(378, 'Longest Increasing Subsequence (LIS)'),
(379, 'Geometry Basics'),
(379, 'Triangles (plus Circles)'),
(380, 'Breadth First Search'),
(380, 'Knight Moves'),
(380, 'On Unweighted Graph: BFS'),
(380, 'Rare Problems'),
(380, 'Single-Source Shortest Paths (SSSP)'),
(380, 'SSSP on Unweighted Graph'),
(381, 'Ad Hoc Problems - Part 1'),
(381, 'Josephus'),
(381, 'Josephus Problem'),
(381, 'Rare Problems'),
(382, 'Complete Search'),
(382, 'Iterative'),
(382, 'Iterative (The Easier Ones)'),
(382, 'Iterative (Three or More Nested Loops, Easier)'),
(383, 'Ad Hoc String Processing Problems'),
(383, 'Ad Hoc String Processing Problems - Part 1'),
(383, 'Input Parsing'),
(383, 'Input Parsing (Non Recursive)'),
(384, 'Ad Hoc Mathematics Problems'),
(384, 'Number Systems'),
(384, 'Number Systems or Sequences'),
(384, 'Sequences and Number Systems'),
(385, 'Ad Hoc String Processing Problems'),
(385, 'Ad Hoc String Processing Problems - Part 1'),
(385, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(385, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(386, 'Ad Hoc String Processing Problems'),
(386, 'Output Formatting'),
(387, 'Big Integer (use Java)'),
(387, 'Bonus Features'),
(387, 'Bonus Features: Base Number Conversion'),
(387, 'Java BigInteger Class'),
(387, 'Number Theory'),
(388, 'Ad Hoc Problems - Part 1'),
(388, 'Interesting Real Life Problems, Harder'),
(389, 'Ad Hoc Problems - Part 1'),
(389, 'Ad Hoc Problems - Part 2'),
(389, 'Interesting Real Life Problems'),
(389, 'Interesting Real Life Problems, Harder'),
(390, 'Ad Hoc Problems - Part 1'),
(390, 'Interesting Real Life Problems, Harder'),
(393, 'Single-Source Shortest/Longest Paths on DAG'),
(393, 'Special Graph (Directed Acyclic Graph)'),
(394, 'Intersection Problems'),
(394, 'Other Objects'),
(395, 'Ad Hoc Problems - Part 1'),
(395, 'Anagram'),
(395, 'Palindrome / Anagram'),
(396, 'Standard'),
(396, 'String Matching'),
(398, 'Ad Hoc Problems - Part 1'),
(398, 'Ad Hoc Problems - Part 2'),
(398, 'Interesting Real Life Problems, Harder'),
(398, 'Just Ad Hoc'),
(399, 'Ad Hoc String Processing Problems'),
(399, 'Ad Hoc String Processing Problems - Part 1'),
(399, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(399, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(400, 'Data Structures With Our-Own Libraries'),
(400, 'Depth First Search'),
(400, 'Finding Connected Components / Flood Fill'),
(400, 'Union-Find Disjoint Sets'),
(401, 'Basic Geometry'),
(401, 'Intersection Problems'),
(401, 'Other Objects'),
(401, 'Quadrilaterals'),
(403, 'Ad Hoc Problems - Part 1'),
(403, 'Game (Card)'),
(405, 'Ad Hoc String Processing Problems'),
(405, 'Ad Hoc String Processing Problems - Part 1'),
(405, 'Input Parsing'),
(405, 'Input Parsing (Recursive)'),
(406, 'Basic Features'),
(406, 'Java BigInteger Class'),
(407, '2D Array Manipulation'),
(407, 'Basic Data Structures'),
(407, 'Linear Data Structures with Built-in Libraries'),
(408, '1D Array Manipulation'),
(408, 'Basic Data Structures'),
(408, 'Linear Data Structures with Built-in Libraries'),
(409, 'Ad Hoc String Processing Problems'),
(409, 'Ad Hoc String Processing Problems - Part 1'),
(409, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(409, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(410, 'Depth First Search'),
(410, 'Finding Connected Components / Flood Fill'),
(410, 'Flood Fill/Finding Connected Components'),
(410, 'Graph Traversal'),
(412, 'Complete Search'),
(412, 'Iterative (The Easier Ones)'),
(412, 'Iterative (Two Nested Loops)'),
(414, 'DP level 4'),
(414, 'Dynamic Programming'),
(414, 'More Advanced DP Techniques'),
(414, 'More Advanced Dynamic Programming'),
(414, 'Non Classical (medium difficulty)'),
(414, 'The More Challenging Ones'),
(415, 'Others'),
(415, 'Probability Theory'),
(415, 'Standard'),
(417, 'Basic Geometry'),
(417, 'Geometry Basics'),
(417, 'Quadrilaterals'),
(417, 'Rectangles'),
(418, 'Basic Geometry'),
(418, 'Quadrilaterals'),
(419, 'Geometry Basics'),
(419, 'Polygon'),
(419, 'Polygons'),
(419, 'Standard'),
(422, 'Dynamic Programming'),
(422, 'Longest Increasing Subsequence (LIS)'),
(422, 'Longest Increasing Subsequence (LIS) - Classical'),
(423, '1D Array Manipulation'),
(423, 'Basic Data Structures'),
(423, 'Data Structures With Built-in Libraries'),
(423, 'Linear Data Structures with Built-in Libraries'),
(423, 'Static array, vector, bitset, Direct Addressing Table'),
(424, 'Ad Hoc'),
(424, 'Ad Hoc String Processing Problems'),
(424, 'Ad Hoc String Processing Problems - Part 1'),
(424, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(424, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(425, 'C++ STL map (Java TreeMap)'),
(425, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(425, 'Non Linear Data Structures with Built-in Libraries'),
(426, 'Binomial Coefficients'),
(426, 'Combinatorics'),
(427, 'Ad Hoc String Processing Problems'),
(427, 'Ad Hoc String Processing Problems - Part 1'),
(427, 'Input Parsing'),
(427, 'Input Parsing (Non Recursive)'),
(428, 'Complete Search'),
(428, 'Recursive Backtracking (Medium)'),
(428, 'Recursive Backtracking (The Easier Ones)'),
(429, 'Ad Hoc String Processing Problems'),
(429, 'Output Formatting'),
(430, 'Ad Hoc Problems - Part 1'),
(430, 'Game (Others)'),
(430, 'Game (Others), Easier'),
(431, 'Ad Hoc String Processing Problems'),
(431, 'Output Formatting'),
(433, 'Ad Hoc String Processing Problems'),
(433, 'Ad Hoc String Processing Problems - Part 1'),
(433, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(433, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(434, 'Ad Hoc Mathematics Problems'),
(434, 'Mathematical Simulation (Brute Force), harder'),
(435, 'Ad Hoc Problems - Part 1'),
(435, 'Ad Hoc String Processing Problems - Part 1'),
(435, 'Easy'),
(435, 'Solvable with Java String/Pattern class (Regular Expression)'),
(436, 'Fibonacci Numbers'),
(436, 'Number Theory'),
(437, 'Ad Hoc Problems - Part 2'),
(437, 'Just Ad Hoc'),
(438, 'Dynamic Programming'),
(438, 'Longest Increasing Subsequence (LIS)'),
(438, 'Longest Increasing Subsequence (LIS) - Classical'),
(439, 'Ad Hoc Mathematics Problems'),
(439, 'Polynomial'),
(440, 'Ad Hoc Problems - Part 1'),
(440, 'Ad Hoc String Processing Problems - Part 1'),
(440, 'Easy'),
(440, 'Frequency Counting'),
(442, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(442, 'C++ STL set (Java TreeSet)'),
(442, 'Non Linear Data Structures with Built-in Libraries'),
(448, 'Dynamic Programming'),
(448, 'Max 1D Range Sum'),
(448, 'Max Sum'),
(448, 'Maximum Sum'),
(455, 'C++ STL stack (Java Stack)'),
(455, 'Data Structures With Built-in Libraries'),
(455, 'Linear Data Structures with Built-in Libraries'),
(455, 'STL stack'),
(457, 'Finding Prime Factors'),
(457, 'Number Theory'),
(457, 'Prime Numbers'),
(462, 'Problem Decomposition'),
(462, 'Two Components - Involving Graph'),
(465, 'Complete Search'),
(465, 'Number Theory'),
(465, 'Prime Numbers'),
(465, 'Recursive Backtracking'),
(465, 'Recursive Backtracking (Medium)'),
(465, 'Recursive Backtracking (The Easier Ones)'),
(467, 'Classic'),
(467, 'Standard'),
(467, 'String Processing with Dynamic Programming'),
(471, 'Binomial Coefficients'),
(471, 'Combinatorics'),
(471, 'GCD/LCM'),
(471, 'Number Theory'),
(472, 'Classic'),
(472, 'Standard'),
(472, 'String Processing with DP'),
(472, 'String Processing with Dynamic Programming'),
(473, 'Breadth First Search'),
(473, 'On Unweighted Graph: BFS'),
(473, 'On Unweighted Graph: BFS, Harder'),
(473, 'Single-Source Shortest Paths (SSSP)'),
(473, 'SSSP on Unweighted Graph'),
(475, 'Floyd Warshall''s'),
(475, 'Variants'),
(476, 'Basic Geometry'),
(476, 'Geometry Basics'),
(476, 'Great Circle Distance'),
(476, 'Great-Circle Distance'),
(477, 'Special Graph'),
(477, 'Tree'),
(478, 'Ad Hoc'),
(478, 'Ad Hoc String Processing'),
(478, 'Ad Hoc String Processing Problems'),
(478, 'Ad Hoc String Processing Problems - Part 1'),
(478, 'Input Parsing'),
(478, 'Input Parsing (Non Recursive)'),
(479, 'Ad Hoc Problems - Part 1'),
(479, 'Ad Hoc Problems - Part 2'),
(479, 'Interesting Real Life Problems'),
(479, 'Interesting Real Life Problems, Harder'),
(480, 'Complete Search'),
(480, 'Recursive Backtracking (Easy)'),
(480, 'Recursive Backtracking (The Easier Ones)'),
(481, 'C++ STL queue (Java Queue)'),
(481, 'C++ STL queue and deque (Java Queue and Deque)'),
(481, 'Linear Data Structures with Built-in Libraries'),
(482, '2D Array Manipulation'),
(482, 'Basic Data Structures'),
(482, 'Linear Data Structures with Built-in Libraries'),
(483, 'Others'),
(483, 'Probability Theory'),
(483, 'Standard'),
(484, 'Number Theory'),
(484, 'Prime Numbers'),
(485, 'Floyd Warshall''s'),
(485, 'Variants'),
(486, 'Probability Theory'),
(486, 'Standard'),
(488, 'Number Theory'),
(488, 'Other Number Theory Problems'),
(491, 'Ad Hoc Mathematics Problems'),
(491, 'Mathematical Simulation (Brute Force), harder'),
(492, 'Bracket Matching'),
(492, 'C++ STL stack (Java Stack)'),
(492, 'Linear Data Structures with Built-in Libraries'),
(492, 'Rare Problems'),
(495, 'Ad Hoc String Processing Problems - Part 1'),
(495, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(496, 'Ad Hoc Problems - Part 1'),
(496, 'Game (Card)'),
(497, '''Time Waster'' Problems'),
(497, 'Ad Hoc Problems - Part 2'),
(497, 'Just Ad Hoc'),
(499, 'Bellman Ford''s'),
(499, 'On Graph with Negative Weight Cycle: Bellman Ford''s'),
(499, 'Single-Source Shortest Paths (SSSP)'),
(503, '0-1 Knapsack (Subset Sum)'),
(503, '0-1 Knapsack - Classical'),
(503, 'Dynamic Programming'),
(504, 'Ford Fulkerson''s / Edmonds Karps''s'),
(504, 'Independent and Edge Disjoint Paths'),
(504, 'Rare Problems'),
(504, 'Variants'),
(506, 'Complete Search'),
(506, 'Recursive Backtracking (Harder)'),
(506, 'Recursive Backtracking (The More Challenging Ones)'),
(508, 'Breadth First Search'),
(508, 'On Unweighted Graph: BFS'),
(508, 'Single-Source Shortest Paths (SSSP)'),
(508, 'SSSP on Unweighted Graph'),
(509, 'Factorial'),
(509, 'Number Theory'),
(512, 'Complete Search'),
(512, 'Dynamic Programming'),
(512, 'Non Classical (The Easier Ones)'),
(512, 'Recursive Backtracking (Medium)'),
(513, 'Depth First Search'),
(513, 'Finding Connected Components / Flood Fill'),
(513, 'Flood Fill/Finding Connected Components'),
(513, 'Graph Traversal'),
(514, 'Ad Hoc'),
(514, 'Ad Hoc Problems - Part 2'),
(514, 'Getting Started: The Easy Problems'),
(514, 'Just Ad Hoc'),
(514, 'Medium'),
(515, 'Complete Search'),
(515, 'Recursive Backtracking (Medium)'),
(515, 'Recursive Backtracking (The Easier Ones)'),
(516, 'Ad Hoc Mathematics Problems'),
(516, 'Base Number Variants'),
(517, 'Ad Hoc String Processing Problems'),
(517, 'Ad Hoc String Processing Problems - Part 1'),
(517, 'Input Parsing'),
(517, 'Solvable with Java String/Pattern class (Regular Expression)'),
(520, 'Ad Hoc Problems - Part 2'),
(520, 'Time'),
(524, 'Finding Prime Factors'),
(524, 'Number Theory'),
(524, 'Prime Numbers'),
(525, 'Ad Hoc Problems - Part 1'),
(525, 'Game (Others)'),
(525, 'Game (Others), Harder'),
(528, 'Basic Geometry'),
(528, 'Points and Lines'),
(529, 'Art Gallery Problem'),
(529, 'Rare Problems'),
(531, 'Converting General Graph to DAG'),
(531, 'DP on ''Graph Problem'''),
(531, 'Dynamic Programming'),
(531, 'Special Graph (Directed Acyclic Graph)'),
(532, '1D Array Manipulation'),
(532, 'Basic Data Structures'),
(532, 'Linear Data Structures with Built-in Libraries'),
(535, 'Basic Data Structures'),
(535, 'Bit Manipulation'),
(535, 'Data Structures With Built-in Libraries'),
(535, 'Linear Data Structures with Built-in Libraries'),
(535, 'Static array, vector, bitset, Direct Addressing Table'),
(539, 'Complete Search'),
(539, 'Recursive Backtracking (Medium)'),
(539, 'Recursive Backtracking (The Easier Ones)'),
(540, 'Data Structures with Our-Own Libraries'),
(540, 'Graph Data Structures Problems'),
(543, 'Modulo Arithmetic'),
(543, 'Number Theory'),
(544, '''Time Waster'' Problems'),
(544, 'Ad Hoc Problems - Part 2'),
(548, 'DP level 3'),
(548, 'Dynamic Programming'),
(548, 'More Advanced DP Techniques'),
(548, 'More Advanced Dynamic Programming'),
(548, 'Non Classical (medium difficulty)'),
(548, 'The More Challenging Ones'),
(549, 'Ad Hoc Problems - Part 1'),
(549, 'Ad Hoc Problems - Part 2'),
(549, 'Interesting Real Life Problems, Harder'),
(549, 'Just Ad Hoc'),
(551, 'Depth First Search'),
(551, 'Finding Articulation Points / Bridges'),
(551, 'Finding Articulation Points/Bridges'),
(551, 'Graph Traversal'),
(553, 'Data Structures With Built-in Libraries'),
(553, 'Inversion Index'),
(553, 'Rare Problems'),
(553, 'Sorting-related problems'),
(555, 'Graph Traversal'),
(555, 'Just Graph Traversal'),
(556, 'Special Graph'),
(556, 'Tree'),
(557, 'Ad Hoc Mathematics Problems'),
(557, 'Mathematical Simulation (Brute Force)'),
(557, 'Mathematical Simulation (Brute Force), harder'),
(558, 'Complete Search'),
(558, 'Iterative (The Easier Ones)'),
(558, 'Iterative (Two Nested Loops)'),
(560, 'Basic Features'),
(560, 'Java BigInteger Class'),
(561, 'Ad Hoc String Processing Problems'),
(561, 'Ad Hoc String Processing Problems - Part 1'),
(561, 'Input Parsing'),
(561, 'Input Parsing (Recursive)'),
(562, 'Ad Hoc Problems - Part 2'),
(562, 'Easy'),
(562, 'Getting Started: The Easy Problems'),
(562, 'Just Ad Hoc'),
(563, 'Ad Hoc String Processing Problems'),
(563, 'Ad Hoc String Processing Problems - Part 1'),
(563, 'Input Parsing'),
(563, 'Input Parsing (Recursive)'),
(564, 'Factorial'),
(564, 'Number Theory'),
(565, 'Complete Search'),
(565, 'Recursive Backtracking'),
(565, 'Recursive Backtracking (Easy)'),
(565, 'Recursive Backtracking (The Easier Ones)'),
(567, 'Complete Search'),
(567, 'Iterative (The Easier Ones)'),
(567, 'Iterative (Three or More Nested Loops, Easier)'),
(568, 'Breadth First Search'),
(568, 'On Unweighted Graph: BFS'),
(568, 'On Unweighted Graph: BFS, Easier'),
(568, 'Single-Source Shortest Paths (SSSP)'),
(568, 'SSSP on Unweighted Graph'),
(569, 'Complete Search'),
(569, 'Recursive Backtracking'),
(569, 'Recursive Backtracking (Easy)'),
(569, 'Recursive Backtracking (The Easier Ones)'),
(571, 'Ad Hoc Problems - Part 1'),
(571, 'Anagram'),
(571, 'Palindrome / Anagram'),
(573, 'Ad Hoc String Processing Problems - Part 1'),
(573, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(575, 'Geometry Basics'),
(575, 'Polygon'),
(575, 'Polygons'),
(575, 'Standard'),
(577, 'Big Integer (use Java)'),
(577, 'Bonus Features'),
(577, 'Java BigInteger Class'),
(577, 'Number Theory'),
(578, 'Ad Hoc Problems - Part 1'),
(578, 'Ad Hoc Problems - Part 2'),
(578, 'Interesting Real Life Problems'),
(578, 'Interesting Real Life Problems, Easier'),
(579, 'Problem Decomposition'),
(579, 'Two Components - Complete Search and Geometry'),
(580, 'Complete Search'),
(580, 'Iterative'),
(580, 'Iterative (Fancy Techniques)'),
(580, 'Iterative (The More Challenging Ones)'),
(581, 'Ad Hoc Mathematics Problems'),
(581, 'Number Systems'),
(581, 'Number Systems or Sequences'),
(581, 'Sequences and Number Systems'),
(582, 'Ad Hoc String Processing Problems'),
(582, 'Ad Hoc String Processing Problems - Part 1'),
(582, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(582, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(583, 'Ad Hoc Problems - Part 1'),
(583, 'Anagram'),
(583, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(583, 'Non Linear Data Structures with Built-in Libraries'),
(585, 'Ad Hoc'),
(585, 'Ad Hoc String Processing'),
(585, 'Ad Hoc String Processing Problems'),
(585, 'String Comparison'),
(588, 'Ad Hoc Problems - Part 1'),
(588, 'Game (Others)'),
(588, 'Game (Others), Harder'),
(592, 'Ad Hoc Mathematics Problems'),
(592, 'Finding Pattern or Formula, harder'),
(593, 'A*/IDA*'),
(593, 'Meet in the Middle/A*/IDA*'),
(593, 'More Advanced Search'),
(593, 'More Advanced Search Techniques'),
(598, 'Depth First Search'),
(598, 'Finding Connected Components / Flood Fill'),
(598, 'Flood Fill/Finding Connected Components'),
(598, 'Graph Traversal'),
(599, 'More Advanced Search Techniques'),
(599, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(602, 'Ad Hoc'),
(602, 'Ad Hoc Problems - Part 2'),
(602, 'Getting Started: The Easy Problems'),
(602, 'Just Ad Hoc'),
(602, 'Medium'),
(604, 'Bipartite Graph'),
(604, 'Special Graphs (Others)'),
(606, '1D Array Manipulation'),
(606, 'Linear Data Structures with Built-in Libraries'),
(609, 'Greedy'),
(609, 'Non Classical, Usually Harder'),
(611, 'Bipartite Graph'),
(611, 'Max Cardinality Bipartite Matching'),
(611, 'Special Graph'),
(611, 'Special Graphs (Others)'),
(612, 'Ad Hoc String Processing Problems'),
(612, 'String Comparison'),
(614, 'Bracket Matching'),
(614, 'C++ STL stack (Java Stack)'),
(614, 'Data Structures With Built-in Libraries'),
(614, 'Linear Data Structures with Built-in Libraries'),
(614, 'Rare Problems'),
(614, 'STL stack'),
(615, 'Coin Change (CC)'),
(615, 'Coin Change - Classical'),
(615, 'Dynamic Programming'),
(618, 'Complete Search'),
(618, 'Recursive Backtracking (Easy)'),
(618, 'Recursive Backtracking (The Easier Ones)'),
(620, 'Binary Search'),
(620, 'Divide and Conquer'),
(622, 'Graham''s Scan'),
(622, 'Graham''s Scan for Convex Hull'),
(622, 'Polygon'),
(622, 'Standard'),
(627, 'Number Theory'),
(627, 'Prime Numbers'),
(629, 'Problem Decomposition'),
(629, 'Two Components - Complete Search and Geometry'),
(635, 'Ad Hoc Mathematics Problems'),
(635, 'Number Systems or Sequences'),
(635, 'Sequences'),
(635, 'Sequences and Number Systems'),
(637, 'Ad Hoc Problems - Part 1'),
(637, 'Game (Chess)'),
(638, 'Ad Hoc Mathematics Problems'),
(638, 'Mathematical Simulation (Brute Force), harder'),
(640, 'Special Graph'),
(640, 'Tree'),
(641, 'Basic Data Structures'),
(641, 'Bit Manipulation'),
(641, 'Linear Data Structures with Built-in Libraries'),
(642, 'Ad Hoc Mathematics Problems'),
(642, 'Logarithm, Exponentiation, Power'),
(643, 'DP level 3'),
(643, 'More Advanced DP Techniques'),
(644, 'Complete Search'),
(644, 'Iterative (The More Challenging Ones)'),
(644, 'Iterative (Three or More Nested Loops, Easier)'),
(647, 'Ad Hoc Problems - Part 1'),
(647, 'Ad Hoc Problems - Part 2'),
(647, 'Interesting Real Life Problems'),
(647, 'Interesting Real Life Problems, Harder'),
(651, 'More Advanced Search Techniques'),
(651, 'More Challenging Backtracking Problems'),
(652, 'More Advanced Search Techniques'),
(652, 'More Challenging Backtracking Problems'),
(653, 'Special Graph'),
(653, 'Tree'),
(654, 'Basic Features'),
(654, 'Java BigInteger Class'),
(655, 'Divide and Conquer'),
(655, 'Problem Decomposition'),
(655, 'Two Components - Binary Search the Answer and Other'),
(659, 'Extended Euclid'),
(659, 'Number Theory'),
(660, 'Standard'),
(660, 'Suffix Array'),
(660, 'Suffix Trie, Tree, Array'),
(666, 'Complete Search'),
(666, 'Iterative'),
(666, 'Iterative (The Easier Ones)'),
(666, 'Iterative (Two Nested Loops)'),
(667, 'Ad Hoc String Processing Problems - Part 1'),
(667, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(668, 'C++ STL stack (Java Stack)'),
(668, 'Data Structures With Built-in Libraries'),
(668, 'Linear Data Structures with Built-in Libraries'),
(668, 'Postfix Calculator and Conversion'),
(668, 'Rare Problems'),
(668, 'STL stack'),
(670, 'Complete Search'),
(670, 'Recursive Backtracking'),
(670, 'Recursive Backtracking (Easy)'),
(670, 'Recursive Backtracking (The Easier Ones)'),
(673, 'C++ STL stack (Java Stack)'),
(673, 'Linear Data Structures with Built-in Libraries'),
(676, 'Complete Search'),
(676, 'Iterative (The More Challenging Ones)'),
(676, 'Iterative (Three or More Nested Loops, Easier)'),
(678, '3D Objects'),
(678, 'Basic Geometry'),
(678, 'Basic Geometry - Part 2'),
(678, 'Intersection Problems'),
(678, 'Other 3D Objects'),
(678, 'Other Objects'),
(680, 'Ad Hoc'),
(680, 'Ad Hoc String Processing Problems'),
(680, 'Ad Hoc String Processing Problems - Part 1'),
(680, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(680, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(681, 'Ad Hoc String Processing Problems'),
(681, 'Ad Hoc String Processing Problems - Part 1'),
(681, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(681, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(682, 'Ad Hoc String Processing Problems'),
(682, 'Ad Hoc String Processing Problems - Part 1'),
(682, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(682, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(684, 'Ad Hoc String Processing Problems'),
(684, 'Ad Hoc String Processing Problems - Part 1'),
(684, 'Input Parsing'),
(684, 'Input Parsing (Recursive)'),
(689, 'Basic Features'),
(689, 'Java BigInteger Class'),
(691, 'Complete Search'),
(691, 'Recursive Backtracking'),
(691, 'Recursive Backtracking (Easy)'),
(691, 'Recursive Backtracking (The Easier Ones)'),
(694, 'Max Cardinality Bipartite Matching'),
(694, 'Maximum Flow'),
(694, 'Special Graph'),
(694, 'Standard'),
(696, '1D Array Manipulation'),
(696, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(696, 'Linear Data Structures with Built-in Libraries'),
(696, 'Non Linear Data Structures with Built-in Libraries'),
(697, 'Number Theory'),
(697, 'Other Number Theory Problems'),
(700, 'Ad Hoc Mathematics Problems'),
(700, 'Just Ad Hoc'),
(700, 'Rare Problems'),
(700, 'Roman Numerals'),
(701, 'Standard'),
(701, 'Suffix Trie, Tree, Array'),
(703, 'Breadth First Search'),
(703, 'On Unweighted Graph: BFS'),
(703, 'On Unweighted Graph: BFS, Easier'),
(703, 'Single-Source Shortest Paths (SSSP)'),
(703, 'SSSP on Unweighted Graph'),
(704, 'Fibonacci Numbers'),
(704, 'Number Theory'),
(716, 'Complete Search'),
(716, 'Recursive Backtracking (Medium)'),
(717, 'Flood Fill/Finding Connected Components'),
(717, 'Graph Traversal'),
(723, 'Depth First Search'),
(723, 'Finding Connected Components / Flood Fill'),
(723, 'Flood Fill/Finding Connected Components'),
(723, 'Graph Traversal'),
(725, 'Depth First Search'),
(725, 'Finding Connected Components / Flood Fill'),
(725, 'Flood Fill/Finding Connected Components'),
(725, 'Graph Traversal'),
(726, 'Depth First Search'),
(726, 'Finding Connected Components / Flood Fill'),
(726, 'Flood Fill/Finding Connected Components'),
(726, 'Graph Traversal'),
(728, 'Dynamic Programming'),
(728, 'Max 1D Range Sum'),
(728, 'Max Sum'),
(730, 'Ad Hoc String Processing Problems'),
(730, 'Just Ad Hoc'),
(734, 'Data Structures With Our-Own Libraries'),
(734, 'Union-Find Disjoint Sets'),
(736, 'Ad Hoc String Processing Problems'),
(736, 'Ad Hoc String Processing Problems - Part 1'),
(736, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(736, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(737, 'Depth First Search'),
(737, 'Finding Articulation Points / Bridges'),
(737, 'Finding Articulation Points/Bridges'),
(737, 'Graph Traversal'),
(749, 'Ad Hoc Mathematics Problems'),
(749, 'Grid'),
(752, 'Graham''s Scan'),
(752, 'Graham''s Scan for Convex Hull'),
(752, 'Polygon'),
(752, 'Problem Decomposition'),
(752, 'Standard'),
(752, 'Three Components'),
(753, 'DP level 3'),
(753, 'More Advanced DP Techniques'),
(756, '3D Objects'),
(756, 'Basic Geometry'),
(756, 'Basic Geometry - Part 2'),
(756, 'Other 3D Objects'),
(761, 'Ford Fulkerson''s / Edmonds Karps''s'),
(761, 'Maximum Flow'),
(761, 'Network Flow'),
(761, 'Standard'),
(761, 'Standard Application (for Max Flow/Min Cut)'),
(761, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(762, 'All-Pairs Shortest Paths'),
(762, 'Floyd Warshall''s'),
(762, 'Standard'),
(762, 'Standard Application (for APSP or SSSP on small graph)'),
(765, 'Graph Traversal'),
(765, 'Just Graph Traversal'),
(766, 'Counting Paths in DAG'),
(766, 'Special Graph'),
(771, '''Time Waster'' Problems'),
(771, 'Ad Hoc Problems - Part 2'),
(774, 'Basic Geometry'),
(774, 'Geometry Basics'),
(774, 'Lines'),
(774, 'Points and Lines'),
(775, 'Ad Hoc Mathematics Problems'),
(775, 'Mathematical Simulation (Brute Force)'),
(775, 'Mathematical Simulation (Brute Force), easier'),
(777, 'Dynamic Programming'),
(777, 'Max 2D Range Sum'),
(777, 'Max Sum'),
(777, 'Maximum Sum'),
(778, 'Ad Hoc'),
(778, 'Basic Geometry'),
(778, 'Points and Lines'),
(784, 'Problem Decomposition'),
(784, 'Two Components - Mixed with Efficient Data Structure'),
(787, 'Ad Hoc Mathematics Problems'),
(787, 'Mathematical Simulation (Brute Force)'),
(787, 'Mathematical Simulation (Brute Force), harder'),
(788, 'Game Theory'),
(788, 'Standard'),
(791, 'Ad Hoc String Processing Problems'),
(791, 'Ad Hoc String Processing Problems - Part 1'),
(791, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(791, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(793, 'Depth First Search'),
(793, 'Finding Connected Components / Flood Fill'),
(793, 'Flood Fill/Finding Connected Components'),
(793, 'Graph Traversal'),
(797, 'Ad Hoc String Processing Problems'),
(797, 'Ad Hoc String Processing Problems - Part 1'),
(797, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(797, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(798, 'Ad Hoc Problems - Part 1'),
(798, 'Interesting Real Life Problems, Easier'),
(799, 'Polygon'),
(799, 'Standard'),
(800, 'On Unweighted Graph: BFS, Harder'),
(800, 'Single-Source Shortest Paths (SSSP)'),
(801, 'C++ STL map (Java TreeMap)'),
(801, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(801, 'Non Linear Data Structures with Built-in Libraries'),
(802, 'Complete Search'),
(802, 'Recursive Backtracking (Harder)'),
(806, 'Ad Hoc'),
(806, 'Ad Hoc String Processing'),
(806, 'Ad Hoc String Processing Problems'),
(806, 'Ad Hoc String Processing Problems - Part 1'),
(806, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(806, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(807, 'Intersection Problems'),
(807, 'Line Segment Intersection'),
(809, 'Complete Search'),
(809, 'Recursive Backtracking (Harder)'),
(809, 'Recursive Backtracking (The More Challenging Ones)'),
(810, 'Floyd Warshall''s'),
(810, 'Variants'),
(812, 'Flood Fill/Finding Connected Components'),
(812, 'Graph Traversal'),
(813, 'Depth First Search'),
(813, 'Topological Sort'),
(821, 'Ad Hoc Mathematics Problems'),
(821, 'Grid'),
(823, 'DP level 3'),
(823, 'More Advanced DP Techniques'),
(823, 'More Advanced Dynamic Programming'),
(823, 'The More Challenging Ones'),
(825, 'Factorial'),
(825, 'Functions involving Prime Factors'),
(825, 'Number Theory'),
(833, 'Ad Hoc String Processing Problems'),
(833, 'Just Ad Hoc'),
(834, 'Ad Hoc Problems - Part 2'),
(834, 'Time'),
(836, 'Ad Hoc String Processing Problems'),
(836, 'Frequency Counting'),
(838, 'Number Theory'),
(838, 'Prime Numbers'),
(841, 'Fibonacci Numbers'),
(841, 'Number Theory'),
(843, 'Ad Hoc'),
(843, 'Ad Hoc String Processing'),
(843, 'Ad Hoc String Processing Problems'),
(843, 'Frequency Counting'),
(845, 'Intersection Problems'),
(845, 'Other Objects'),
(847, 'Ad Hoc Mathematics Problems'),
(847, 'Mathematical Simulation (Brute Force)'),
(847, 'Mathematical Simulation (Brute Force), easier'),
(848, 'Converting General Graph to DAG'),
(848, 'Special Graph (Directed Acyclic Graph)'),
(849, 'Data Structures With Built-in Libraries'),
(849, 'Kruskal''s'),
(849, 'Minimum Spanning Tree'),
(849, 'Standard'),
(849, 'Standard Application (for MST)'),
(849, 'STL priority_queue'),
(851, 'Converting General Graph to DAG'),
(851, 'DP on ''Graph Problem'''),
(851, 'Dynamic Programming'),
(851, 'Special Graph (Directed Acyclic Graph)'),
(854, 'Ad Hoc Mathematics Problems'),
(854, 'Finding Pattern or Formula'),
(854, 'Finding Pattern or Formula, harder'),
(855, 'Number Theory'),
(855, 'Prime Numbers'),
(861, 'Basic Geometry'),
(861, 'Intersection Problems'),
(861, 'Line Segment Intersection'),
(861, 'Points and Lines'),
(863, 'Geometry Basics'),
(863, 'Problem Decomposition'),
(863, 'Rectangles'),
(863, 'Two Components - Mixed with Efficient Data Structure'),
(865, 'Breadth First Search'),
(865, 'On Unweighted Graph: BFS'),
(865, 'On Unweighted Graph: BFS, Easier'),
(865, 'Single-Source Shortest Paths (SSSP)'),
(865, 'SSSP on Unweighted Graph'),
(866, 'Floyd Warshall''s'),
(866, 'Variants'),
(867, 'Counting Paths in DAG'),
(867, 'Special Graph'),
(868, 'Complete Search'),
(868, 'Iterative (One Loop, Linear Scan)'),
(868, 'Iterative (The Easier Ones)'),
(869, 'Breadth First Search'),
(869, 'More Advanced Search Techniques'),
(869, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(869, 'On Unweighted Graph: BFS'),
(869, 'Single-Source Shortest Paths (SSSP)'),
(869, 'SSSP on Unweighted Graph'),
(870, 'Dijkstra''s'),
(870, 'On Weighted Graph: Dijkstra''s'),
(870, 'On Weighted Graph: Dijkstra''s, Easier'),
(870, 'Single-Source Shortest Paths (SSSP)'),
(873, 'Complete Search'),
(873, 'Iterative (The More Challenging Ones)'),
(874, 'Ad Hoc String Processing Problems'),
(874, 'Input Parsing'),
(880, 'C++ STL map (Java TreeMap)'),
(880, 'Non Linear Data Structures with Built-in Libraries'),
(882, 'Ad Hoc'),
(882, 'Ad Hoc String Processing Problems'),
(882, 'Just Ad Hoc'),
(885, 'Cycle-Finding'),
(885, 'Number Theory'),
(885, 'Standard'),
(886, '''Time Waster'' Problems'),
(886, 'Ad Hoc Problems - Part 2'),
(888, 'Ad Hoc Problems - Part 1'),
(888, 'Game (Others), Easier'),
(889, 'Fibonacci Numbers'),
(889, 'Number Theory'),
(890, 'On Unweighted Graph: BFS, Harder'),
(890, 'Single-Source Shortest Paths (SSSP)'),
(898, 'Binary Search'),
(898, 'Divide and Conquer'),
(901, 'Bonus Features: Primality Testing'),
(901, 'Java BigInteger Class'),
(903, 'Ad Hoc Mathematics Problems'),
(903, 'Number Systems'),
(903, 'Number Systems or Sequences'),
(903, 'Sequences and Number Systems'),
(904, 'Standard'),
(904, 'String Processing with Dynamic Programming'),
(908, 'Problem Decomposition'),
(908, 'Two Components - Involving DP 1D Range Sum'),
(908, 'Two Components - Involving DP 1D RSQ/RMQ'),
(913, 'Intersection Problems'),
(913, 'Line Segment Intersection'),
(915, 'Ad Hoc Mathematics Problems'),
(915, 'Number Systems'),
(915, 'Number Systems or Sequences'),
(915, 'Sequences and Number Systems'),
(917, 'Problem Decomposition'),
(917, 'Two Components - Graph Preprocessing and DP'),
(919, 'Ad Hoc Problems - Part 2'),
(919, 'C++ STL set (Java TreeSet)'),
(919, 'Just Ad Hoc'),
(919, 'Non Linear Data Structures with Built-in Libraries'),
(924, 'Dynamic Programming'),
(924, 'Max 2D Range Sum'),
(924, 'Max Sum'),
(926, 'More Advanced Search Techniques'),
(926, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(929, 'Counting Paths in DAG'),
(929, 'Special Graph'),
(930, 'More Advanced Search Techniques'),
(930, 'More Challenging Backtracking Problems'),
(931, '0-1 Knapsack (Subset Sum)'),
(931, '0-1 Knapsack - Classical'),
(931, 'Dynamic Programming'),
(932, 'Catalan Numbers'),
(932, 'Combinatorics'),
(932, 'Number Theory'),
(934, 'Number Theory'),
(934, 'Working with Prime Factors'),
(941, 'Single-Source Shortest/Longest Paths in DAG'),
(941, 'Single-Source Shortest/Longest Paths on DAG'),
(941, 'Special Graph'),
(941, 'Special Graph (Directed Acyclic Graph)'),
(942, 'Complete Search'),
(942, 'Recursive Backtracking (Medium)'),
(943, 'Graham''s Scan'),
(943, 'Graham''s Scan for Convex Hull'),
(944, 'Dynamic Programming'),
(944, 'Non Classical (medium difficulty)'),
(944, 'Non Classical (The Easier Ones)'),
(945, 'Bipartite Graph Check'),
(945, 'Breadth First Search'),
(945, 'Graph Traversal'),
(945, 'Variants'),
(946, 'Circles (only)'),
(946, 'Geometry Basics'),
(947, 'Ad Hoc Mathematics Problems'),
(947, 'Number Systems'),
(947, 'Number Systems or Sequences'),
(947, 'Number Theory'),
(947, 'Prime Numbers'),
(947, 'Sequences and Number Systems'),
(948, 'Catalan Numbers'),
(948, 'Combinatorics'),
(948, 'Number Theory'),
(949, 'Ad Hoc String Processing Problems'),
(949, 'Frequency Counting'),
(950, 'Breadth First Search'),
(950, 'On Unweighted Graph: BFS'),
(950, 'On Unweighted Graph: BFS, Easier'),
(950, 'Single-Source Shortest Paths (SSSP)'),
(950, 'SSSP on Unweighted Graph'),
(951, 'Ad Hoc'),
(951, 'Ad Hoc String Processing'),
(951, 'In 2D Grid'),
(951, 'String Matching'),
(953, 'Circles (only)'),
(953, 'Geometry Basics'),
(953, 'Problem Decomposition'),
(953, 'Two Components - Complete Search and Geometry'),
(954, 'Basic Features'),
(954, 'Java BigInteger Class'),
(955, 'Ad Hoc Mathematics Problems'),
(955, 'Finding Pattern or Formula'),
(955, 'Finding Pattern or Formula, easier'),
(956, 'Ad Hoc Problems - Part 1'),
(956, 'Josephus'),
(956, 'Josephus Problem'),
(956, 'Rare Problems'),
(957, '2D Array Manipulation'),
(957, 'Basic Data Structures'),
(957, 'Linear Data Structures with Built-in Libraries');
INSERT INTO `uva_problem_category` (`problem_number`, `category`) VALUES
(958, 'Complete Search'),
(958, 'Rare Problems'),
(958, 'Recursive Backtracking (The Easier Ones)'),
(958, 'Tower of Hanoi'),
(959, 'Ad Hoc Problems - Part 1'),
(959, 'Palindrome'),
(959, 'Palindrome / Anagram'),
(960, 'Ad Hoc Problems - Part 2'),
(960, 'Ad Hoc String Processing Problems - Part 1'),
(960, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(960, 'Just Ad Hoc'),
(961, 'Classical, Usually Easier'),
(961, 'Greedy'),
(961, 'Standard'),
(964, 'Bonus Features: Others'),
(964, 'Java BigInteger Class'),
(966, 'Ad Hoc Mathematics Problems'),
(966, 'Mathematical Simulation (Brute Force), harder'),
(967, 'Greedy'),
(967, 'Involving Sorting (Or The Input Is Already Sorted)'),
(967, 'Standard'),
(970, 'DP level 3'),
(970, 'More Advanced DP Techniques'),
(970, 'Single-Source Shortest/Longest Paths in DAG'),
(970, 'Special Graph'),
(973, 'DP level 3'),
(973, 'More Advanced DP Techniques'),
(974, '''Time Waster'' Problems'),
(974, 'Ad Hoc Problems - Part 2'),
(974, 'Just Ad Hoc'),
(975, 'Kruskal''s'),
(975, 'Minimum Spanning Tree'),
(975, 'Standard'),
(975, 'Standard Application (for MST)'),
(976, 'Ad Hoc Mathematics Problems'),
(976, 'Mathematical Simulation (Brute Force)'),
(976, 'Mathematical Simulation (Brute Force), easier'),
(977, 'Dynamic Programming'),
(977, 'Non Classical (The Easier Ones)'),
(978, 'Greedy'),
(978, 'Involving Sorting (Or The Input Is Already Sorted)'),
(979, '1D Array Manipulation'),
(979, 'Basic Data Structures'),
(979, 'Linear Data Structures with Built-in Libraries'),
(982, 'Complete Search'),
(982, 'Iterative (The Easier Ones)'),
(982, 'Iterative (Two Nested Loops)'),
(983, 'Ad Hoc Mathematics Problems'),
(983, 'Number Systems'),
(983, 'Number Systems or Sequences'),
(983, 'Number Theory'),
(983, 'Prime Numbers'),
(983, 'Sequences and Number Systems'),
(985, 'Breadth First Search'),
(985, 'Number Systems'),
(985, 'On Unweighted Graph: BFS'),
(985, 'On Unweighted Graph: BFS, Harder'),
(985, 'Sequences and Number Systems'),
(985, 'Single-Source Shortest Paths (SSSP)'),
(985, 'SSSP on Unweighted Graph'),
(988, 'More Advanced Search Techniques'),
(988, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(988, 'On Unweighted Graph: BFS'),
(988, 'Single-Source Shortest Paths (SSSP)'),
(989, 'Floyd Warshall''s'),
(989, 'Variants'),
(991, '1D Array Manipulation'),
(991, 'Basic Data Structures'),
(991, 'Linear Data Structures with Built-in Libraries'),
(992, 'Dynamic Programming'),
(992, 'Longest Increasing Subsequence (LIS) - Classical'),
(992, 'Single-Source Shortest/Longest Paths on DAG'),
(992, 'Special Graph (Directed Acyclic Graph)'),
(995, 'Eulerian Graph'),
(995, 'Special Graphs (Others)'),
(996, 'Ad Hoc Mathematics Problems'),
(996, 'The Simpler Ones'),
(997, 'Others'),
(997, 'Probability Theory'),
(997, 'Standard'),
(999, 'Ad Hoc String Processing Problems'),
(999, 'Ad Hoc String Processing Problems - Part 1'),
(999, 'Input Parsing'),
(999, 'Solvable with Java String/Pattern class (Regular Expression)'),
(1001, 'Polygon'),
(1001, 'Standard'),
(1002, 'Factorial'),
(1002, 'Number Theory'),
(1002, 'Working with Prime Factors'),
(1003, 'Ad Hoc String Processing Problems'),
(1003, 'Frequency Counting'),
(1004, 'Complete Search'),
(1004, 'Recursive Backtracking (Medium)'),
(1006, 'Graham''s Scan'),
(1006, 'Graham''s Scan for Convex Hull'),
(1006, 'Polygon'),
(1006, 'Preview'),
(1006, 'Preview Contest'),
(1006, 'Standard'),
(1007, 'Classic'),
(1007, 'Standard'),
(1007, 'String Processing with DP'),
(1007, 'String Processing with Dynamic Programming'),
(1008, 'Breadth First Search'),
(1008, 'On Unweighted Graph: BFS'),
(1008, 'On Unweighted Graph: BFS, Harder'),
(1008, 'Single-Source Shortest Paths (SSSP)'),
(1008, 'SSSP on Unweighted Graph'),
(1010, 'DP level 2'),
(1010, 'More Advanced DP Techniques'),
(1010, 'More Advanced Dynamic Programming'),
(1010, 'The More Challenging Ones'),
(1011, 'Ad Hoc Problems - Part 2'),
(1011, 'Time'),
(1012, 'Ad Hoc Mathematics Problems'),
(1012, 'The Simpler Ones'),
(1014, 'A*/IDA*'),
(1014, 'More Advanced Search'),
(1015, 'Dynamic Programming'),
(1015, 'Max 2D Range Sum'),
(1015, 'Max Sum'),
(1015, 'Maximum Sum'),
(1016, 'Basic Geometry'),
(1016, 'Floyd Warshall''s'),
(1016, 'Geometry Basics'),
(1016, 'Great Circle Distance'),
(1016, 'Great-Circle Distance'),
(1016, 'Standard Application (for APSP or SSSP on small graph)'),
(1018, 'Binary Search'),
(1018, 'Divide and Conquer'),
(1019, 'Art Gallery Problem'),
(1019, 'Geometry Basics'),
(1019, 'Polygon'),
(1019, 'Polygons'),
(1019, 'Rare Problems'),
(1019, 'Standard'),
(1020, 'Combinatorics'),
(1020, 'Other Combinatorics'),
(1020, 'Other, Harder'),
(1021, 'Bipartite Graph'),
(1021, 'Max Cardinality Bipartite Matching'),
(1021, 'Special Graph'),
(1021, 'Special Graphs (Others)'),
(1022, 'DP level 2'),
(1022, 'More Advanced DP Techniques'),
(1022, 'More Advanced Dynamic Programming'),
(1022, 'The More Challenging Ones'),
(1023, 'Ad Hoc'),
(1023, 'Ad Hoc Problems - Part 1'),
(1023, 'Ad Hoc Problems - Part 2'),
(1023, 'Interesting Real Life Problems'),
(1023, 'Interesting Real Life Problems, Easier'),
(1024, 'Basic Features'),
(1024, 'Big Integer (use Java)'),
(1024, 'Java BigInteger Class'),
(1024, 'Number Theory'),
(1029, 'Formulas or Theorems'),
(1029, 'Geometry Basics'),
(1029, 'Other Basic Geometry'),
(1029, 'Polygon'),
(1029, 'Rare Algorithms'),
(1029, 'Standard'),
(1030, 'Linear Algebra'),
(1030, 'Others'),
(1031, 'Extended Euclid'),
(1031, 'Number Theory'),
(1033, 'Max Cardinality Bipartite Matching'),
(1033, 'Network Flow'),
(1033, 'Special Graph'),
(1033, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(1034, 'Ad Hoc Mathematics Problems'),
(1034, 'Base Number Variants'),
(1035, 'Complete Search'),
(1035, 'Recursive Backtracking (Harder)'),
(1035, 'Recursive Backtracking (The More Challenging Ones)'),
(1038, 'More Advanced Search Techniques'),
(1038, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(1039, 'Ad Hoc Problems - Part 1'),
(1039, 'Anagram'),
(1039, 'Palindrome / Anagram'),
(1040, 'Floyd Warshall''s'),
(1040, 'Variants'),
(1041, 'Classic'),
(1041, 'Standard'),
(1041, 'String Processing with DP'),
(1041, 'String Processing with Dynamic Programming'),
(1042, 'Ad Hoc Mathematics Problems'),
(1042, 'Number Systems'),
(1042, 'Number Systems or Sequences'),
(1042, 'Sequences and Number Systems'),
(1043, 'Breadth First Search'),
(1043, 'Complete Search'),
(1043, 'Iterative (The Easier Ones)'),
(1043, 'Iterative (Three or More Nested Loops, Easier)'),
(1043, 'SSSP on Unweighted Graph'),
(1045, 'Extended Euclid'),
(1045, 'Number Theory'),
(1046, 'Binomial Coefficients'),
(1046, 'Combinatorics'),
(1047, 'Basic Features'),
(1047, 'Big Integer (use Java)'),
(1047, 'Java BigInteger Class'),
(1047, 'Number Theory'),
(1050, 'Linear Algebra'),
(1050, 'Others'),
(1051, 'Number Theory'),
(1051, 'Other Number Theory Problems'),
(1052, 'Game Theory'),
(1052, 'Standard'),
(1053, 'Geometry Basics'),
(1053, 'Polygon'),
(1053, 'Polygons'),
(1053, 'Standard'),
(1054, 'Graph Traversal'),
(1054, 'Just Graph Traversal'),
(1055, 'Ad Hoc Problems - Part 2'),
(1055, 'Easy'),
(1055, 'Getting Started: The Easy Problems'),
(1055, 'Just Ad Hoc'),
(1056, 'Ad Hoc'),
(1056, 'Ad Hoc String Processing'),
(1056, 'Ad Hoc String Processing Problems'),
(1056, 'Just Ad Hoc'),
(1057, 'Graph Traversal'),
(1057, 'Just Graph Traversal'),
(1066, 'Complete Search'),
(1066, 'Iterative (The More Challenging Ones)'),
(1066, 'Iterative (Three or More Nested Loops, Harder)'),
(1069, 'Complete Search'),
(1069, 'Recursive Backtracking (Harder)'),
(1070, 'Eulerian Graph'),
(1070, 'Special Graphs (Others)'),
(1071, '0-1 Knapsack (Subset Sum)'),
(1071, '0-1 Knapsack - Classical'),
(1071, 'Dynamic Programming'),
(1072, 'Dynamic Programming'),
(1072, 'Longest Increasing Subsequence (LIS)'),
(1073, 'C++ STL map (Java TreeMap)'),
(1073, 'Non Linear Data Structures with Built-in Libraries'),
(1075, '''Time Waster'' Problems'),
(1075, 'Ad Hoc Problems - Part 2'),
(1076, 'Graham''s Scan'),
(1076, 'Graham''s Scan for Convex Hull'),
(1077, 'Circles (only)'),
(1077, 'Geometry Basics'),
(1078, 'Ad Hoc Mathematics Problems'),
(1078, 'Just Ad Hoc'),
(1079, 'C++ STL map (Java TreeMap)'),
(1079, 'Non Linear Data Structures with Built-in Libraries'),
(1080, 'Factorial'),
(1080, 'Number Theory'),
(1080, 'Working with Prime Factors'),
(1081, 'Number Theory'),
(1081, 'Prime Numbers'),
(1082, 'Ad Hoc'),
(1082, 'Ad Hoc Problems - Part 2'),
(1082, 'Getting Started: The Easy Problems'),
(1082, 'Just Ad Hoc'),
(1082, 'Medium'),
(1083, '''Time Waster'' Problems'),
(1083, 'Ad Hoc Problems - Part 2'),
(1083, 'Just Ad Hoc'),
(1088, 'Kruskal''s'),
(1088, 'Variants'),
(1090, 'DP level 4'),
(1090, 'More Advanced DP Techniques'),
(1091, 'Breadth First Search'),
(1091, 'On Unweighted Graph: BFS'),
(1091, 'On Unweighted Graph: BFS, Harder'),
(1091, 'Single-Source Shortest Paths (SSSP)'),
(1091, 'SSSP on Unweighted Graph'),
(1093, 'Greedy'),
(1093, 'Non Classical, Usually Harder'),
(1093, 'Standard'),
(1095, 'DP level 3'),
(1095, 'More Advanced DP Techniques'),
(1099, 'Data Structures With Our-Own Libraries'),
(1099, 'Union-Find Disjoint Sets'),
(1102, 'Ad Hoc Mathematics Problems'),
(1102, 'Finding Pattern or Formula'),
(1102, 'Finding Pattern or Formula, harder'),
(1103, 'Cycle-Finding'),
(1103, 'Standard'),
(1104, 'DP level 3'),
(1104, 'More Advanced DP Techniques'),
(1104, 'More Advanced Dynamic Programming'),
(1104, 'The More Challenging Ones'),
(1105, 'DP level 3'),
(1105, 'More Advanced DP Techniques'),
(1105, 'More Advanced Dynamic Programming'),
(1105, 'The More Challenging Ones'),
(1106, 'Game Theory'),
(1106, 'Standard'),
(1107, 'On Weighted Graph: Dijkstra''s'),
(1107, 'On Weighted Graph: Dijkstra''s, Harder'),
(1107, 'Single-Source Shortest Paths (SSSP)'),
(1107, 'Single-Source Shortest/Longest Paths in DAG'),
(1107, 'Special Graph'),
(1108, 'Basic Geometry'),
(1108, 'Points and Lines'),
(1108, 'Problem Decomposition'),
(1108, 'Two Components - Complete Search and Geometry'),
(1111, 'Ad Hoc Mathematics Problems'),
(1111, 'Finding Pattern or Formula'),
(1111, 'Finding Pattern or Formula, easier'),
(1112, 'All-Pairs Shortest Paths'),
(1112, 'Floyd Warshall''s'),
(1112, 'Standard'),
(1112, 'Standard Application (for APSP or SSSP on small graph)'),
(1113, 'C++ STL queue (Java Queue)'),
(1113, 'C++ STL queue and deque (Java Queue and Deque)'),
(1113, 'Linear Data Structures with Built-in Libraries'),
(1114, 'Graham''s Scan'),
(1114, 'Graham''s Scan for Convex Hull'),
(1115, 'Modulo Arithmetic'),
(1115, 'Number Theory'),
(1117, 'Modulo Arithmetic'),
(1117, 'Number Theory'),
(1118, 'Complete Search'),
(1118, 'Iterative (The More Challenging Ones)'),
(1118, 'Iterative (Three or More Nested Loops, Harder)'),
(1119, 'Formulas or Theorems'),
(1119, 'Rare Algorithms'),
(1120, 'Euler''s Totient (Phi) Function'),
(1120, 'Functions involving Prime Factors'),
(1120, 'Number Theory'),
(1121, 'Geometry Basics'),
(1121, 'Lines'),
(1122, 'A*/IDA*'),
(1122, 'Meet in the Middle/A*/IDA*'),
(1122, 'More Advanced Search'),
(1122, 'More Advanced Search Techniques'),
(1123, 'Ad Hoc Mathematics Problems'),
(1123, 'Grid'),
(1124, 'Fibonacci Numbers'),
(1124, 'Number Theory'),
(1128, 'On Weighted Graph: Dijkstra''s, Harder'),
(1128, 'Single-Source Shortest Paths (SSSP)'),
(1129, '''Time Waster'' Problems'),
(1129, 'Ad Hoc Problems - Part 2'),
(1129, 'Just Ad Hoc'),
(1130, 'Ad Hoc Problems - Part 1'),
(1130, 'Game (Others)'),
(1130, 'Game (Others), Easier'),
(1131, 'Ad Hoc Mathematics Problems'),
(1131, 'Just Ad Hoc'),
(1132, 'Ad Hoc Problems - Part 1'),
(1132, 'Ad Hoc Problems - Part 2'),
(1132, 'Interesting Real Life Problems'),
(1132, 'Interesting Real Life Problems, Easier'),
(1133, 'Classic'),
(1133, 'Standard'),
(1133, 'String Processing with DP'),
(1133, 'String Processing with Dynamic Programming'),
(1134, 'Bonus Features: Others'),
(1134, 'GCD and/or LCM'),
(1134, 'GCD/LCM'),
(1134, 'Java BigInteger Class'),
(1134, 'Number Theory'),
(1135, 'C++ STL algorithm (Java Collections)'),
(1135, 'Data Structures With Built-in Libraries'),
(1135, 'Linear Data Structures with Built-in Libraries'),
(1135, 'STL algorithm'),
(1136, 'Geometry Basics'),
(1136, 'Triangles (plus Circles)'),
(1137, 'Ad Hoc Problems - Part 1'),
(1137, 'Game (Chess)'),
(1138, 'Ad Hoc'),
(1138, 'Ad Hoc String Processing'),
(1138, 'Ad Hoc String Processing Problems'),
(1138, 'Just Ad Hoc'),
(1139, 'Basic Features'),
(1139, 'Java BigInteger Class'),
(1140, 'Depth First Search'),
(1140, 'Finding Articulation Points / Bridges'),
(1140, 'Finding Articulation Points/Bridges'),
(1140, 'Graph Traversal'),
(1141, 'Number Theory'),
(1141, 'Prime Numbers'),
(1141, 'Problem Decomposition'),
(1141, 'Two Components - Involving DP 1D RSQ/RMQ'),
(1142, 'Converting General Graph to DAG'),
(1142, 'Special Graph (Directed Acyclic Graph)'),
(1144, 'Eulerian Graph'),
(1144, 'Special Graphs (Others)'),
(1146, 'Ad Hoc Problems - Part 1'),
(1146, 'Game (Card)'),
(1153, 'Modulo Arithmetic'),
(1153, 'Number Theory'),
(1154, 'Formulas or Theorems'),
(1154, 'Rare Algorithms'),
(1160, 'Binomial Coefficients'),
(1160, 'Combinatorics'),
(1160, 'Number Theory'),
(1161, 'Factorial'),
(1161, 'Number Theory'),
(1162, 'Circles (only)'),
(1162, 'Geometry Basics'),
(1163, 'Ad Hoc String Processing Problems'),
(1163, 'Ad Hoc String Processing Problems - Part 1'),
(1163, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(1163, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(1164, 'Catalan Numbers'),
(1164, 'Combinatorics'),
(1167, 'C++ STL map (Java TreeMap)'),
(1167, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1167, 'Data Structures With Built-in Libraries'),
(1167, 'Non Linear Data Structures with Built-in Libraries'),
(1167, 'STL map/set'),
(1170, 'Fibonacci Numbers'),
(1170, 'Matrix Power'),
(1170, 'Number Theory'),
(1170, 'Powers of a (Square) Matrix'),
(1170, 'Rare Algorithms'),
(1170, 'Standard'),
(1174, 'Ad Hoc Mathematics Problems'),
(1174, 'Grid'),
(1176, 'Bonus Features: Primality Testing'),
(1176, 'Java BigInteger Class'),
(1176, 'Number Theory'),
(1176, 'Prime Numbers'),
(1179, 'Probability Theory'),
(1179, 'Standard'),
(1183, 'Basic Geometry'),
(1183, 'Geometry Basics'),
(1183, 'Lines'),
(1183, 'Points and Lines'),
(1184, 'Art Gallery Problem'),
(1184, 'Converting General Graph to DAG'),
(1184, 'DP on Tree'),
(1184, 'Dynamic Programming'),
(1184, 'Preview'),
(1184, 'Preview Contest'),
(1184, 'Rare Problems'),
(1184, 'Special Graph (Directed Acyclic Graph)'),
(1186, 'Closest Pair Problem'),
(1186, 'Divide and Conquer'),
(1186, 'Divide and Conquer Revisited'),
(1186, 'Rare Problems'),
(1186, 'Standard'),
(1187, 'Floyd Warshall''s'),
(1187, 'Standard Application (for APSP or SSSP on small graph)'),
(1190, 'Greedy'),
(1190, 'Involving Sorting (Or The Input Is Already Sorted)'),
(1190, 'Standard'),
(1193, 'Ad Hoc String Processing Problems'),
(1193, 'Frequency Counting'),
(1198, 'Ad Hoc Mathematics Problems'),
(1198, 'Mathematical Simulation (Brute Force), harder'),
(1199, 'C++ STL algorithm (Java Collections)'),
(1199, 'Data Structures With Built-in Libraries'),
(1199, 'Linear Data Structures with Built-in Libraries'),
(1199, 'STL algorithm'),
(1200, 'Single-Source Shortest/Longest Paths on DAG'),
(1200, 'Special Graph (Directed Acyclic Graph)'),
(1201, '1D Array Manipulation'),
(1201, 'Basic Data Structures'),
(1201, 'Linear Data Structures with Built-in Libraries'),
(1202, '0-1 Knapsack (Subset Sum)'),
(1202, 'Dynamic Programming'),
(1204, 'Basic Geometry'),
(1204, 'Geometry Basics'),
(1204, 'Lines'),
(1204, 'Points and Lines'),
(1205, 'Bit Manipulation'),
(1205, 'Linear Data Structures with Built-in Libraries'),
(1208, '''Time Waster'' Problems'),
(1208, 'Ad Hoc Problems - Part 2'),
(1208, 'Just Ad Hoc'),
(1209, 'Ad Hoc Mathematics Problems'),
(1209, 'Polynomial'),
(1210, 'On Weighted Graph: Dijkstra''s'),
(1210, 'Single-Source Shortest Paths (SSSP)'),
(1212, 'DP level 3'),
(1212, 'More Advanced DP Techniques'),
(1212, 'More Advanced Dynamic Programming'),
(1212, 'The More Challenging Ones'),
(1217, 'Complete Search'),
(1217, 'Recursive Backtracking (Easy)'),
(1217, 'Recursive Backtracking (The Easier Ones)'),
(1219, 'Dijkstra''s'),
(1219, 'On Weighted Graph: Dijkstra''s'),
(1219, 'On Weighted Graph: Dijkstra''s, Harder'),
(1219, 'Single-Source Shortest Paths (SSSP)'),
(1220, 'Ad Hoc Problems - Part 1'),
(1220, 'Game (Others)'),
(1220, 'Game (Others), Easier'),
(1222, 'Ad Hoc'),
(1222, 'Ad Hoc Mathematics Problems'),
(1222, 'The Simpler Ones'),
(1223, 'C++ STL map (Java TreeMap)'),
(1223, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1223, 'Non Linear Data Structures with Built-in Libraries'),
(1225, 'Ad Hoc Problems - Part 1'),
(1225, 'Game (Chess)'),
(1226, 'Complete Search'),
(1226, 'Recursive Backtracking'),
(1226, 'Single-Source Shortest/Longest Paths on DAG'),
(1226, 'Special Graph (Directed Acyclic Graph)'),
(1227, 'Geometry Basics'),
(1227, 'Triangles (plus Circles)'),
(1234, 'Ad Hoc'),
(1234, 'Ad Hoc String Processing'),
(1234, 'Ad Hoc String Processing Problems'),
(1234, 'Frequency Counting'),
(1236, 'C++ STL map (Java TreeMap)'),
(1236, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1236, 'Non Linear Data Structures with Built-in Libraries'),
(1237, 'Chinese Postman Problem'),
(1237, 'DP + bitmask'),
(1237, 'More Advanced Dynamic Programming'),
(1237, 'Rare Problems'),
(1238, '3D Objects'),
(1238, 'Basic Geometry'),
(1238, 'Basic Geometry - Part 2'),
(1238, 'Geometry Basics'),
(1238, 'Other 3D Objects'),
(1238, 'Other Basic Geometry'),
(1239, 'Standard'),
(1239, 'String Matching'),
(1240, 'Euler''s Totient (Phi) Function'),
(1240, 'Functions involving Prime Factors'),
(1240, 'Number Theory'),
(1241, 'Ad Hoc Problems - Part 1'),
(1241, 'Easy'),
(1242, 'Data Structures With Our-Own Libraries'),
(1242, 'Intersection Problems'),
(1242, 'Other Objects'),
(1242, 'Problem Decomposition'),
(1242, 'Two Components - Complete Search and Geometry'),
(1242, 'Union-Find Disjoint Sets'),
(1243, 'Ad Hoc Mathematics Problems'),
(1243, 'Polynomial'),
(1244, 'Catalan Numbers'),
(1244, 'Combinatorics'),
(1244, 'Number Theory'),
(1245, 'DP level 3'),
(1245, 'Dynamic Programming'),
(1245, 'More Advanced DP Techniques'),
(1245, 'Other Classical Problems'),
(1246, 'Depth First Search'),
(1246, 'Topological Sort'),
(1247, 'Coin Change (CC)'),
(1247, 'Coin Change - Classical'),
(1247, 'Dynamic Programming'),
(1248, 'Kruskal''s'),
(1248, 'Problem Decomposition'),
(1248, 'Standard Application (for MST)'),
(1248, 'Two Components - Involving Graph'),
(1249, 'Special Graph'),
(1249, 'Tree'),
(1250, 'Complete Search'),
(1250, 'More Advanced Search Techniques'),
(1250, 'More Challenging Backtracking Problems'),
(1250, 'Recursive Backtracking'),
(1250, 'Recursive Backtracking (The More Challenging Ones)'),
(1251, 'Basic Geometry'),
(1251, 'Points and Lines'),
(1251, 'Problem Decomposition'),
(1251, 'Two Components - Complete Search and Geometry'),
(1252, 'Number Theory'),
(1252, 'Prime Numbers'),
(1254, 'Coin Change (CC)'),
(1254, 'Coin Change - Classical'),
(1254, 'Dynamic Programming'),
(1257, 'Basic Geometry'),
(1257, 'Geometry Basics'),
(1257, 'Great Circle Distance'),
(1257, 'Great-Circle Distance'),
(1259, 'More Advanced Search Techniques'),
(1259, 'More Challenging Backtracking Problems'),
(1260, '2-SAT Problem'),
(1260, 'Rare Problems'),
(1262, 'Intersection Problems'),
(1262, 'Other Objects'),
(1264, 'Factorial'),
(1264, 'Number Theory'),
(1265, 'Ad Hoc Problems - Part 2'),
(1265, 'Getting Started: The Easy Problems'),
(1265, 'Just Ad Hoc'),
(1265, 'Medium'),
(1266, 'Problem Decomposition'),
(1266, 'Two Components - Involving Mathematics'),
(1268, 'Inversion Index'),
(1268, 'Rare Problems'),
(1269, 'Probability Theory'),
(1269, 'Standard'),
(1271, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1271, 'Variants'),
(1275, 'Fibonacci Numbers'),
(1275, 'Number Theory'),
(1277, 'Depth First Search'),
(1277, 'Finding Connected Components / Flood Fill'),
(1277, 'Flood Fill/Finding Connected Components'),
(1277, 'Graph Traversal'),
(1278, 'Dynamic Programming'),
(1278, 'Non Classical (medium difficulty)'),
(1278, 'Non Classical (The Easier Ones)'),
(1281, 'Greedy'),
(1281, 'Non Classical, Usually Harder'),
(1281, 'Standard'),
(1282, 'Binary Search'),
(1282, 'Binary Search the Answer'),
(1282, 'Divide and Conquer'),
(1282, 'Preview'),
(1282, 'Preview Contest'),
(1285, 'Complete Search'),
(1285, 'Recursive Backtracking (Easy)'),
(1285, 'Recursive Backtracking (The Easier Ones)'),
(1287, 'Ad Hoc'),
(1287, 'Ad Hoc Mathematics Problems'),
(1287, 'Mathematical Simulation (Brute Force)'),
(1287, 'Mathematical Simulation (Brute Force), easier'),
(1287, 'Number Theory'),
(1288, 'Geometry Basics'),
(1288, 'Triangles (plus Circles)'),
(1290, 'Bipartite Graph'),
(1290, 'Special Graphs (Others)'),
(1291, 'Single-Source Shortest/Longest Paths in DAG'),
(1291, 'Single-Source Shortest/Longest Paths on DAG'),
(1291, 'Special Graph'),
(1291, 'Special Graph (Directed Acyclic Graph)'),
(1297, 'On Weighted Graph: Dijkstra''s, Harder'),
(1297, 'Single-Source Shortest Paths (SSSP)'),
(1298, 'Basic Geometry'),
(1298, 'Points and Lines'),
(1300, 'Combinatorics'),
(1300, 'Other Combinatorics'),
(1300, 'Other, Harder'),
(1301, 'Complete Search'),
(1301, 'Iterative'),
(1301, 'Iterative (The More Challenging Ones)'),
(1301, 'Iterative (Three or More Nested Loops, Harder)'),
(1301, 'Preview'),
(1301, 'Preview Contest'),
(1302, 'Ad Hoc String Processing Problems'),
(1302, 'Just Ad Hoc'),
(1304, 'Ad Hoc'),
(1304, 'Ad Hoc Problems - Part 1'),
(1304, 'Game (Others)'),
(1304, 'Game (Others), Harder'),
(1305, 'DP + bitmask'),
(1305, 'DP + Bitmasks'),
(1305, 'DP level 2'),
(1305, 'Dynamic Programming'),
(1305, 'More Advanced DP Techniques'),
(1305, 'More Advanced Dynamic Programming'),
(1306, 'Complete Search'),
(1306, 'Iterative (The Easier Ones)'),
(1306, 'Iterative (Three or More Nested Loops, Harder)'),
(1309, 'Game Theory'),
(1309, 'Standard'),
(1310, 'Data Structures With Our-Own Libraries'),
(1310, 'Divide and Conquer'),
(1310, 'Kruskal''s'),
(1310, 'Union-Find Disjoint Sets'),
(1310, 'Variants'),
(1311, 'Ad Hoc Mathematics Problems'),
(1311, 'Mathematical Simulation (Brute Force)'),
(1311, 'Mathematical Simulation (Brute Force), easier'),
(1312, 'Ad Hoc Problems - Part 2'),
(1312, 'Time'),
(1315, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1315, 'Non Linear Data Structures with Built-in Libraries'),
(1316, 'Binomial Coefficients'),
(1316, 'Combinatorics'),
(1316, 'Number Theory'),
(1318, 'Graph Traversal'),
(1318, 'Just Graph Traversal'),
(1323, 'Classical, Usually Easier'),
(1323, 'Greedy'),
(1323, 'Standard'),
(1328, 'Geometry Basics'),
(1328, 'Other Basic Geometry'),
(1330, 'On Weighted Graph: Dijkstra''s'),
(1330, 'On Weighted Graph: Dijkstra''s, Easier'),
(1330, 'Single-Source Shortest Paths (SSSP)'),
(1332, 'Ad Hoc'),
(1332, 'Ad Hoc String Processing'),
(1332, 'Ad Hoc String Processing Problems'),
(1332, 'Just Ad Hoc'),
(1333, 'Finding Prime Factors'),
(1333, 'Number Theory'),
(1334, 'Ad Hoc String Processing Problems'),
(1334, 'Just Ad Hoc'),
(1335, 'Number Theory'),
(1335, 'Prime Numbers'),
(1338, 'Kruskal''s'),
(1338, 'Variants'),
(1341, 'Dynamic Programming'),
(1341, 'Non Classical (The Easier Ones)'),
(1345, 'Game Theory'),
(1345, 'Standard'),
(1346, 'Classic'),
(1346, 'Standard'),
(1346, 'String Processing with DP'),
(1346, 'String Processing with Dynamic Programming'),
(1347, 'Polygon'),
(1347, 'Standard'),
(1348, 'GCD and/or LCM'),
(1348, 'GCD/LCM'),
(1348, 'Number Theory'),
(1349, 'Ad Hoc Mathematics Problems'),
(1349, 'Number Systems or Sequences'),
(1349, 'Sequences'),
(1349, 'Sequences and Number Systems'),
(1350, 'Ad Hoc Problems - Part 1'),
(1350, 'Game (Others)'),
(1350, 'Game (Others), Easier'),
(1356, 'Ad Hoc Problems - Part 1'),
(1356, 'Ad Hoc Problems - Part 2'),
(1356, 'Interesting Real Life Problems'),
(1356, 'Interesting Real Life Problems, Harder'),
(1360, 'DP level 2'),
(1360, 'More Advanced DP Techniques'),
(1361, 'Ad Hoc'),
(1361, 'Ad Hoc Problems - Part 1'),
(1361, 'Easy'),
(1363, 'Breadth First Search'),
(1363, 'On Unweighted Graph: BFS'),
(1363, 'On Unweighted Graph: BFS, Easier'),
(1363, 'Single-Source Shortest Paths (SSSP)'),
(1363, 'SSSP on Unweighted Graph'),
(1365, 'Ad Hoc Problems - Part 2'),
(1365, 'Getting Started: The Easy Problems'),
(1365, 'Just Ad Hoc'),
(1365, 'Medium'),
(1368, 'Ad Hoc Mathematics Problems'),
(1368, 'Finding Pattern or Formula'),
(1368, 'Problem Decomposition'),
(1368, 'Two Components - Involving Mathematics'),
(1373, 'Circles (only)'),
(1373, 'Geometry Basics'),
(1381, 'Greedy'),
(1381, 'Non Classical, Usually Harder'),
(1381, 'Standard'),
(1384, 'Ad Hoc Problems - Part 1'),
(1384, 'Game (Others)'),
(1384, 'Game (Others), Harder'),
(1391, 'Fibonacci Numbers'),
(1391, 'Number Theory'),
(1392, 'Circles (only)'),
(1392, 'Geometry Basics'),
(1393, 'Complete Search'),
(1393, 'Recursive Backtracking (Easy)'),
(1393, 'Recursive Backtracking (The Easier Ones)'),
(1394, 'Non Classic'),
(1394, 'String Processing with Dynamic Programming'),
(1400, 'Special Graph'),
(1400, 'Tree'),
(1401, 'Complete Search'),
(1401, 'Recursive Backtracking (Medium)'),
(1405, 'Bonus Features'),
(1405, 'Bonus Features: Others'),
(1405, 'Java BigInteger Class'),
(1406, 'Dynamic Programming'),
(1406, 'Non Classical (The Easier Ones)'),
(1407, 'Basic Geometry'),
(1407, 'Points and Lines'),
(1410, 'Ad Hoc Mathematics Problems'),
(1410, 'The Simpler Ones'),
(1414, 'Big Integer (use Java)'),
(1414, 'Bonus Features'),
(1414, 'Bonus Features: Base Number Conversion'),
(1414, 'Java BigInteger Class'),
(1414, 'Number Theory'),
(1415, 'Binary Search'),
(1415, 'Divide and Conquer'),
(1416, 'Complete Search'),
(1416, 'Recursive Backtracking (Medium)'),
(1416, 'Recursive Backtracking (The Easier Ones)'),
(1421, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1421, 'Maximum Flow'),
(1421, 'Standard'),
(1421, 'Standard Application (for Max Flow/Min Cut)'),
(1423, 'DP level 4'),
(1423, 'More Advanced DP Techniques'),
(1423, 'More Advanced Dynamic Programming'),
(1423, 'The More Challenging Ones'),
(1424, 'Complete Search'),
(1424, 'Iterative (Three or More Nested Loops, Harder)'),
(1425, 'Number Theory'),
(1425, 'Working with Prime Factors'),
(1428, 'Complete Search'),
(1428, 'Iterative (The Easier Ones)'),
(1428, 'Iterative (Two Nested Loops)'),
(1430, 'Modulo Arithmetic'),
(1430, 'Number Theory'),
(1432, 'Others'),
(1432, 'Probability Theory'),
(1432, 'Standard'),
(1434, 'Ad Hoc Mathematics Problems'),
(1434, 'Finding Pattern or Formula, harder'),
(1435, 'Basic Features'),
(1435, 'Java BigInteger Class'),
(1437, 'Complete Search'),
(1437, 'Dynamic Programming'),
(1437, 'Recursive Backtracking'),
(1437, 'Traveling Salesman Problem (TSP)'),
(1438, 'Fibonacci Numbers'),
(1438, 'Number Theory'),
(1440, 'Ad Hoc Mathematics Problems'),
(1440, 'Finding Pattern or Formula'),
(1440, 'Finding Pattern or Formula, easier'),
(1441, 'Ad Hoc String Processing Problems'),
(1441, 'Output Formatting'),
(1443, 'Basic Geometry'),
(1443, 'Complete Search'),
(1443, 'Geometry Basics'),
(1443, 'Iterative (Three or More Nested Loops, Easier)'),
(1443, 'Quadrilaterals'),
(1443, 'Rectangles'),
(1444, 'Complete Search'),
(1444, 'Recursive Backtracking (Medium)'),
(1444, 'Recursive Backtracking (The Easier Ones)'),
(1446, 'Bipartite Graph Check'),
(1446, 'Breadth First Search'),
(1446, 'Graph Traversal'),
(1446, 'Variants'),
(1447, 'Complete Search'),
(1447, 'Recursive Backtracking (Medium)'),
(1449, 'Ad Hoc'),
(1449, 'Ad Hoc String Processing'),
(1449, 'Ad Hoc String Processing Problems'),
(1449, 'Just Ad Hoc'),
(1450, 'Ad Hoc Mathematics Problems'),
(1450, 'Finding Pattern or Formula'),
(1450, 'Finding Pattern or Formula, harder'),
(1452, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1452, 'Maximum Flow'),
(1452, 'Network Flow'),
(1452, 'Standard'),
(1452, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(1452, 'Variants'),
(1456, 'Cycle-Finding'),
(1456, 'Standard'),
(1459, 'Matrix Power'),
(1459, 'Rare Algorithms'),
(1460, 'Basic Features'),
(1460, 'Java BigInteger Class'),
(1464, 'Basic Features'),
(1464, 'Big Integer (use Java)'),
(1464, 'Java BigInteger Class'),
(1464, 'Number Theory'),
(1467, 'Suffix Array'),
(1468, 'Number Theory'),
(1468, 'Working with Prime Factors'),
(1469, 'Ad Hoc'),
(1469, 'Ad Hoc Problems - Part 1'),
(1469, 'Ad Hoc Problems - Part 2'),
(1469, 'Interesting Real Life Problems'),
(1469, 'Interesting Real Life Problems, Easier'),
(1471, 'Ad Hoc Problems - Part 1'),
(1471, 'Game (Others)'),
(1471, 'Game (Others), Easier'),
(1474, 'Number Theory'),
(1474, 'Prime Numbers'),
(1474, 'Problem Decomposition'),
(1474, 'Two Components - Involving DP 1D Range Sum'),
(1474, 'Two Components - Involving DP 1D RSQ/RMQ'),
(1475, 'Dynamic Programming'),
(1475, 'Longest Increasing Subsequence (LIS)'),
(1475, 'Longest Increasing Subsequence (LIS) - Classical'),
(1477, 'DP level 2'),
(1477, 'More Advanced DP Techniques'),
(1480, 'Number Theory'),
(1480, 'Prime Numbers'),
(1480, 'Problem Decomposition'),
(1480, 'Two Components - Involving Mathematics'),
(1484, 'Converting General Graph to DAG'),
(1484, 'Special Graph (Directed Acyclic Graph)'),
(1491, 'Ad Hoc Problems - Part 1'),
(1491, 'Easy'),
(1491, 'Getting Started: The Easy Problems'),
(1491, 'Super Easy'),
(1492, 'Big Integer (use Java)'),
(1492, 'Bonus Features'),
(1492, 'Bonus Features: Base Number Conversion'),
(1492, 'Java BigInteger Class'),
(1492, 'Number Theory'),
(1495, 'Ad Hoc Problems - Part 1'),
(1495, 'Ad Hoc Problems - Part 2'),
(1495, 'Interesting Real Life Problems'),
(1495, 'Interesting Real Life Problems, Easier'),
(1498, 'Bellman Ford''s'),
(1498, 'On Graph with Negative Weight Cycle: Bellman Ford''s'),
(1498, 'Single-Source Shortest Paths (SSSP)'),
(1507, 'Divide and Conquer'),
(1507, 'Divide and Conquer Revisited'),
(1507, 'Standard'),
(1517, 'Complete Search'),
(1517, 'Recursive Backtracking (Easy)'),
(1517, 'Recursive Backtracking (The Easier Ones)'),
(1519, 'Game Theory'),
(1519, 'Standard'),
(1520, 'Fibonacci Numbers'),
(1520, 'Number Theory'),
(1523, 'Complete Search'),
(1523, 'Recursive Backtracking (Harder)'),
(1523, 'Recursive Backtracking (The More Challenging Ones)'),
(1524, 'Data Structures With Our-Own Libraries'),
(1524, 'Union-Find Disjoint Sets'),
(1526, 'Basic Geometry'),
(1526, 'Points and Lines'),
(1527, 'Ad Hoc Mathematics Problems'),
(1527, 'Polynomial'),
(1530, 'Circles (only)'),
(1530, 'Geometry Basics'),
(1532, 'Cycle-Finding'),
(1532, 'Number Systems'),
(1532, 'Number Theory'),
(1532, 'Sequences and Number Systems'),
(1532, 'Standard'),
(1535, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1535, 'Min Cost (Max) Flow'),
(1535, 'Rare Problems'),
(1535, 'Variants'),
(1537, 'Eulerian Graph'),
(1537, 'Special Graphs (Others)'),
(1541, 'Kruskal''s'),
(1541, 'Variants'),
(1543, 'Greedy'),
(1543, 'Non Classical, Usually Harder'),
(1543, 'Standard'),
(1544, 'Dijkstra''s'),
(1544, 'On Weighted Graph: Dijkstra''s'),
(1544, 'On Weighted Graph: Dijkstra''s, Harder'),
(1544, 'Single-Source Shortest Paths (SSSP)'),
(1545, 'DP level 3'),
(1545, 'More Advanced DP Techniques'),
(1549, 'Data Structures With Our-Own Libraries'),
(1549, 'Union-Find Disjoint Sets'),
(1551, 'Breadth First Search'),
(1551, 'On Unweighted Graph: BFS'),
(1551, 'On Unweighted Graph: BFS, Easier'),
(1551, 'Single-Source Shortest Paths (SSSP)'),
(1551, 'SSSP on Unweighted Graph'),
(1552, 'Binary Search'),
(1552, 'Divide and Conquer'),
(1557, '0-1 Knapsack (Subset Sum)'),
(1557, 'Dynamic Programming'),
(1558, 'Non Classic'),
(1558, 'Standard'),
(1558, 'String Processing with Dynamic Programming'),
(1561, 'Ad Hoc Mathematics Problems'),
(1561, 'Grid'),
(1563, 'Number Theory'),
(1563, 'Working with Prime Factors'),
(1565, 'Ad Hoc Mathematics Problems'),
(1565, 'Mathematical Simulation (Brute Force), harder'),
(1566, 'Ad Hoc String Processing Problems'),
(1566, 'Frequency Counting'),
(1567, 'DP level 4'),
(1567, 'More Advanced DP Techniques'),
(1567, 'More Advanced Dynamic Programming'),
(1567, 'The More Challenging Ones'),
(1576, 'Classic'),
(1576, 'Standard'),
(1576, 'String Processing with Dynamic Programming'),
(1578, 'Number Theory'),
(1578, 'Prime Numbers'),
(1578, 'Problem Decomposition'),
(1578, 'Two Components - Involving Mathematics'),
(1583, 'Ad Hoc Mathematics Problems'),
(1583, 'Grid'),
(1586, 'DP level 3'),
(1586, 'More Advanced DP Techniques'),
(1587, 'Ad Hoc Problems - Part 1'),
(1587, 'Game (Card)'),
(1591, 'Number Theory'),
(1591, 'Prime Numbers'),
(1592, 'DP + bitmask'),
(1592, 'DP + Bitmasks'),
(1592, 'DP level 2'),
(1592, 'Dynamic Programming'),
(1592, 'More Advanced DP Techniques'),
(1592, 'More Advanced Dynamic Programming'),
(1593, 'Polygon'),
(1593, 'Standard'),
(1594, 'Breadth First Search'),
(1594, 'On Unweighted Graph: BFS'),
(1594, 'On Unweighted Graph: BFS, Easier'),
(1594, 'Single-Source Shortest Paths (SSSP)'),
(1594, 'SSSP on Unweighted Graph'),
(1596, 'Matrix Power'),
(1596, 'Rare Algorithms'),
(1597, 'Greedy'),
(1597, 'Non Classical, Usually Harder'),
(1597, 'Standard'),
(1600, 'Ad Hoc Problems - Part 1'),
(1600, 'Ad Hoc Problems - Part 2'),
(1600, 'Interesting Real Life Problems'),
(1600, 'Interesting Real Life Problems, Harder'),
(1601, 'Complete Search'),
(1601, 'Iterative (The More Challenging Ones)'),
(1601, 'Iterative (Three or More Nested Loops, Harder)'),
(1603, 'Complete Search'),
(1603, 'Iterative'),
(1603, 'Iterative (The Easier Ones)'),
(1603, 'Iterative (Three or More Nested Loops, Easier)'),
(1605, '0-1 Knapsack (Subset Sum)'),
(1605, 'Dynamic Programming'),
(1607, 'Ad Hoc Mathematics Problems'),
(1607, 'Finding Pattern or Formula'),
(1607, 'Finding Pattern or Formula, harder'),
(1608, 'Dynamic Programming'),
(1608, 'Max 2D Range Sum'),
(1608, 'Max Sum'),
(1608, 'Maximum Sum'),
(1609, 'Divide and Conquer'),
(1609, 'Standard'),
(1610, 'Basic Features'),
(1610, 'Java BigInteger Class'),
(1611, 'Greedy'),
(1611, 'Involving Sorting (Or The Input Is Already Sorted)'),
(1611, 'Standard'),
(1613, 'Greedy'),
(1613, 'Non Classical, Usually Harder'),
(1613, 'Standard'),
(1618, 'Complete Search'),
(1618, 'Iterative (The Easier Ones)'),
(1620, 'Ad Hoc String Processing Problems'),
(1620, 'Just Ad Hoc'),
(1621, 'GCD/LCM'),
(1621, 'Number Theory'),
(1621, 'Working with Prime Factors'),
(1622, 'DP on ''Graph Problem'''),
(1622, 'Dynamic Programming'),
(1622, 'Powers of a (Square) Matrix'),
(1622, 'Standard'),
(1624, 'Ad Hoc'),
(1624, 'Ad Hoc Problems - Part 2'),
(1624, 'Time'),
(1625, 'Dynamic Programming'),
(1625, 'Max 1D Range Sum'),
(1625, 'Max Sum'),
(1625, 'Maximum Sum'),
(1627, 'C++ STL map (Java TreeMap)'),
(1627, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1627, 'Non Linear Data Structures with Built-in Libraries'),
(1628, 'Graph Traversal'),
(1628, 'Just Graph Traversal'),
(1631, 'DP level 2'),
(1631, 'More Advanced DP Techniques'),
(1634, 'Ad Hoc Mathematics Problems'),
(1634, 'Finding Pattern or Formula'),
(1634, 'Finding Pattern or Formula, harder'),
(1637, 'Ad Hoc Mathematics Problems'),
(1637, 'Finding Pattern or Formula'),
(1637, 'Finding Pattern or Formula, easier'),
(1640, 'Functions involving Prime Factors'),
(1640, 'Modified Sieve'),
(1640, 'Number Theory'),
(1640, 'Prime Numbers'),
(1641, 'Greedy'),
(1641, 'Non Classical, Usually Harder'),
(1641, 'Standard'),
(1642, 'Special Graph'),
(1642, 'Tree'),
(1643, 'Converting General Graph to DAG'),
(1643, 'DP on ''Graph Problem'''),
(1643, 'Dynamic Programming'),
(1643, 'Special Graph (Directed Acyclic Graph)'),
(1644, '2D Array Manipulation'),
(1644, 'Ad Hoc'),
(1644, 'Basic Data Structures'),
(1644, 'Linear Data Structures with Built-in Libraries'),
(1647, 'Binary Search'),
(1647, 'Divide and Conquer'),
(1648, 'Ad Hoc Problems - Part 2'),
(1648, 'Just Ad Hoc'),
(1651, 'Ad Hoc Mathematics Problems'),
(1651, 'Finding Pattern or Formula, harder'),
(1655, 'Greedy'),
(1655, 'Non Classical, Usually Harder'),
(1655, 'Standard'),
(1658, 'GCD/LCM'),
(1658, 'Number Theory'),
(1658, 'Preview'),
(1658, 'Preview Contest'),
(1658, 'Problem Decomposition'),
(1658, 'Two Components - Involving Mathematics'),
(1659, 'Greedy'),
(1659, 'Non Classical, Usually Harder'),
(1659, 'Standard'),
(1660, 'Ad Hoc Mathematics Problems'),
(1660, 'Polynomial'),
(1661, 'Data Structures with Our-Own Libraries'),
(1661, 'Formulas or Theorems'),
(1661, 'Graph Data Structures Problems'),
(1661, 'Rare Algorithms'),
(1662, 'Dynamic Programming'),
(1662, 'Non Classical (The Easier Ones)'),
(1663, 'DP level 4'),
(1663, 'More Advanced DP Techniques'),
(1665, 'All-Pairs Shortest Paths'),
(1665, 'Floyd Warshall''s'),
(1665, 'Standard'),
(1665, 'Standard Application (for APSP or SSSP on small graph)'),
(1671, 'Complete Search'),
(1671, 'Iterative (Two Nested Loops)'),
(1672, 'Depth First Search'),
(1672, 'Finding Strongly Connected Components'),
(1674, 'Combinatorics'),
(1674, 'Other Combinatorics'),
(1674, 'Other, Harder'),
(1675, 'Problem Decomposition'),
(1675, 'Two Components - Mixed with Efficient Data Structure'),
(1676, 'Max Cardinality Bipartite Matching'),
(1676, 'Special Graph'),
(1679, 'Modified Sieve'),
(1679, 'Number Theory'),
(1679, 'Prime Numbers'),
(1680, 'Classic'),
(1680, 'Standard'),
(1680, 'String Processing with DP'),
(1680, 'String Processing with Dynamic Programming'),
(1683, 'Binary Search'),
(1683, 'Divide and Conquer'),
(1687, 'Min Cost (Max) Flow'),
(1687, 'Rare Problems'),
(1688, 'Greedy'),
(1688, 'Standard'),
(1692, 'Ad Hoc Mathematics Problems'),
(1692, 'Finding Pattern or Formula, easier'),
(1696, 'Dynamic Programming'),
(1696, 'Max 1D Range Sum'),
(1700, 'Probability Theory'),
(1700, 'Standard'),
(1702, 'Ad Hoc String Processing Problems'),
(1702, 'Just Ad Hoc'),
(1704, 'Greedy'),
(1704, 'Involving Sorting (Or The Input Is Already Sorted)'),
(1704, 'Standard'),
(1712, 'Josephus Problem'),
(1712, 'Rare Problems'),
(1714, 'Ad Hoc Mathematics Problems'),
(1714, 'The Simpler Ones'),
(1715, 'Josephus Problem'),
(1715, 'Rare Problems'),
(1720, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1720, 'Maximum Flow'),
(1720, 'Network Flow'),
(1720, 'Standard'),
(1720, 'Standard Application (for Max Flow/Min Cut)'),
(1720, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(1721, 'Factorial'),
(1721, 'Number Theory'),
(1721, 'Prime Numbers'),
(1721, 'Working with Prime Factors'),
(1724, 'Ad Hoc Mathematics Problems'),
(1724, 'Mathematical Simulation (Brute Force)'),
(1724, 'Mathematical Simulation (Brute Force), easier'),
(1725, 'Combinatorics'),
(1725, 'Number Theory'),
(1725, 'Other Combinatorics'),
(1725, 'Other, Harder'),
(1726, 'Greedy'),
(1726, 'Involving Sorting (Or The Input Is Already Sorted)'),
(1726, 'Standard'),
(1730, 'Ad Hoc String Processing Problems'),
(1730, 'Frequency Counting'),
(1730, 'Number Theory'),
(1730, 'Prime Numbers'),
(1731, 'Combinatorics'),
(1731, 'Number Theory'),
(1731, 'Other Combinatorics'),
(1731, 'Other, Harder'),
(1732, 'Number Theory'),
(1732, 'Working with Prime Factors'),
(1734, 'All-Pairs Shortest Paths'),
(1734, 'Floyd Warshall''s'),
(1734, 'Standard'),
(1734, 'Standard Application (for APSP or SSSP on small graph)'),
(1741, 'Ad Hoc String Processing Problems'),
(1741, 'Output Formatting'),
(1742, 'Dijkstra''s'),
(1742, 'On Weighted Graph: Dijkstra''s'),
(1742, 'On Weighted Graph: Dijkstra''s, Harder'),
(1742, 'Single-Source Shortest Paths (SSSP)'),
(1744, 'All-Pairs Shortest Paths'),
(1744, 'Floyd Warshall''s'),
(1744, 'Standard'),
(1744, 'Standard Application (for APSP or SSSP on small graph)'),
(1745, 'Problem Decomposition'),
(1745, 'Two Components - Binary Search the Answer and Other'),
(1747, 'Ford Fulkerson''s / Edmonds Karps''s'),
(1747, 'Min Cost (Max) Flow'),
(1747, 'Rare Problems'),
(1747, 'Variants'),
(1751, 'Data Structures With Built-in Libraries'),
(1751, 'Inversion Index'),
(1751, 'Rare Problems'),
(1751, 'Sorting-related problems'),
(1753, 'Ad Hoc'),
(1753, 'Ad Hoc Problems - Part 1'),
(1753, 'Ad Hoc Problems - Part 2'),
(1753, 'Interesting Real Life Problems'),
(1753, 'Interesting Real Life Problems, Easier'),
(1754, 'Ad Hoc Problems - Part 1'),
(1754, 'Game (Others)'),
(1754, 'Game (Others), Harder'),
(1755, 'Big Integer (use Java)'),
(1755, 'Bonus Features'),
(1755, 'Bonus Features: Others'),
(1755, 'Java BigInteger Class'),
(1755, 'Number Theory'),
(1756, 'Ad Hoc'),
(1756, 'Ad Hoc String Processing'),
(1756, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(1756, 'C++ STL set (Java TreeSet)'),
(1756, 'Non Linear Data Structures with Built-in Libraries'),
(1757, 'Problem Decomposition'),
(1757, 'Two Components - Binary Search the Answer and Other'),
(1758, 'DP + bitmask'),
(1758, 'DP level 3'),
(1758, 'More Advanced DP Techniques'),
(1758, 'More Advanced Dynamic Programming'),
(1760, '0-1 Knapsack (Subset Sum)'),
(1760, 'Dynamic Programming'),
(1761, 'Euler''s Totient (Phi) Function'),
(1761, 'Functions involving Prime Factors'),
(1761, 'Number Theory'),
(1764, 'Basic Geometry'),
(1764, 'Problem Decomposition'),
(1764, 'Quadrilaterals'),
(1764, 'Two Components - Complete Search and Geometry'),
(1768, 'Dynamic Programming'),
(1768, 'Max 2D Range Sum'),
(1768, 'Max Sum'),
(1768, 'Maximum Sum'),
(1783, 'Kruskal''s'),
(1783, 'Variants'),
(1784, 'Combinatorics'),
(1784, 'Formulas or Theorems'),
(1784, 'Other Combinatorics'),
(1784, 'Rare Algorithms'),
(1790, 'Ad Hoc Problems - Part 1'),
(1790, 'Game (Chess)'),
(1792, 'Ad Hoc String Processing Problems'),
(1792, 'Ad Hoc String Processing Problems - Part 1'),
(1792, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(1792, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(1793, 'Number Theory'),
(1793, 'Prime Numbers'),
(1795, 'Ad Hoc String Processing Problems'),
(1795, 'Ad Hoc String Processing Problems - Part 1'),
(1795, 'Input Parsing'),
(1795, 'Input Parsing (Recursive)'),
(1796, '2D Array Manipulation'),
(1796, 'Basic Data Structures'),
(1796, 'Linear Data Structures with Built-in Libraries'),
(1797, 'Factorial'),
(1797, 'Number Theory'),
(1797, 'Problem Decomposition'),
(1797, 'Three Components'),
(1797, 'Three/More Components'),
(1799, 'C++ STL stack (Java Stack)'),
(1799, 'Linear Data Structures with Built-in Libraries'),
(1803, 'Fibonacci Numbers'),
(1803, 'Number Theory'),
(1806, 'Ad Hoc Problems - Part 2'),
(1806, 'Just Ad Hoc'),
(1811, 'Matrix Power'),
(1811, 'Powers of a (Square) Matrix'),
(1811, 'Rare Algorithms'),
(1811, 'Standard'),
(1812, 'Problem Decomposition'),
(1812, 'Two Components - Involving DP 1D Range Sum'),
(1812, 'Two Components - Involving DP 1D RSQ/RMQ'),
(1815, 'Converting General Graph to DAG'),
(1815, 'Special Graph (Directed Acyclic Graph)'),
(1817, 'Problem Decomposition'),
(1817, 'Three Components'),
(1819, 'Ad Hoc'),
(1819, 'Ad Hoc String Processing'),
(1819, 'Ad Hoc String Processing Problems'),
(1819, 'Ad Hoc String Processing Problems - Part 1'),
(1819, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(1819, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(1820, 'Ad Hoc Mathematics Problems'),
(1820, 'Mathematical Simulation (Brute Force)'),
(1820, 'Mathematical Simulation (Brute Force), easier'),
(1821, 'C++ STL algorithm (Java Collections)'),
(1821, 'Linear Data Structures with Built-in Libraries'),
(1823, 'Ad Hoc Mathematics Problems'),
(1823, 'Finding Pattern or Formula, harder'),
(1829, 'Min Cost (Max) Flow'),
(1829, 'Rare Problems'),
(1831, 'More Advanced Search Techniques'),
(1831, 'More Challenging Backtracking Problems'),
(1832, 'Dynamic Programming'),
(1832, 'Non Classical (medium difficulty)'),
(1832, 'Problem Decomposition'),
(1832, 'Two Components - Involving DP 1D Range Sum'),
(1832, 'Two Components - Involving DP 1D RSQ/RMQ'),
(1833, 'GCD and/or LCM'),
(1833, 'GCD/LCM'),
(1833, 'Number Theory'),
(1835, 'Ad Hoc String Processing Problems'),
(1835, 'Output Formatting'),
(1836, 'Data Structures with Our-Own Libraries'),
(1836, 'Graph Data Structures Problems'),
(1837, 'Ad Hoc'),
(1837, 'Ad Hoc String Processing'),
(1837, 'Ad Hoc String Processing Problems'),
(1837, 'Ad Hoc String Processing Problems - Part 1'),
(1837, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(1837, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(1838, 'Basic Geometry'),
(1838, 'Geometry Basics'),
(1838, 'Great Circle Distance'),
(1838, 'Great-Circle Distance'),
(1839, 'DP level 2'),
(1839, 'More Advanced DP Techniques'),
(1839, 'More Advanced Dynamic Programming'),
(1839, 'The More Challenging Ones'),
(1842, 'C++ STL queue (Java Queue)'),
(1842, 'C++ STL queue and deque (Java Queue and Deque)'),
(1842, 'Data Structures With Built-in Libraries'),
(1842, 'Linear Data Structures with Built-in Libraries'),
(1842, 'STL queue'),
(1843, 'Basic Geometry'),
(1843, 'Intersection Problems'),
(1843, 'Line Segment Intersection'),
(1843, 'Points and Lines'),
(1844, 'Ad Hoc Problems - Part 1'),
(1844, 'Game (Others)'),
(1844, 'Game (Others), Harder'),
(1846, 'C++ STL algorithm (Java Collections)'),
(1846, 'Linear Data Structures with Built-in Libraries'),
(1847, 'Ad Hoc String Processing Problems - Part 1'),
(1847, 'Input Parsing (Non Recursive)'),
(1849, 'Basic Geometry'),
(1849, 'Complete Search'),
(1849, 'DP + Bitmasks'),
(1849, 'Dynamic Programming'),
(1849, 'Geometry Basics'),
(1849, 'Iterative (Three or More Nested Loops, Easier)'),
(1849, 'Quadrilaterals'),
(1849, 'Rectangles'),
(1851, 'Dynamic Programming'),
(1851, 'Non Classical (The Easier Ones)'),
(1852, 'DP + bitmask'),
(1852, 'DP + Bitmasks'),
(1852, 'DP level 2'),
(1852, 'Dynamic Programming'),
(1852, 'More Advanced DP Techniques'),
(1852, 'More Advanced Dynamic Programming'),
(1852, 'Preview'),
(1852, 'Preview Contest'),
(1853, 'Dynamic Programming'),
(1853, 'Non Classical (The Easier Ones)'),
(1854, 'Converting General Graph to DAG'),
(1854, 'Special Graph (Directed Acyclic Graph)'),
(1857, 'Ad Hoc Mathematics Problems'),
(1857, 'Logarithm, Exponentiation, Power'),
(1858, 'Problem Decomposition'),
(1858, 'Two Components - Graph Preprocessing and DP'),
(1858, 'Two Components - SSSP and DP'),
(1859, 'Combinatorics'),
(1859, 'Number Theory'),
(1859, 'Other Combinatorics'),
(1859, 'Other, Harder'),
(1860, 'Ad Hoc Problems - Part 2'),
(1860, 'Getting Started: The Easy Problems'),
(1860, 'Just Ad Hoc'),
(1860, 'Medium'),
(1861, '2D Array Manipulation'),
(1861, 'Basic Data Structures'),
(1861, 'Linear Data Structures with Built-in Libraries'),
(1862, 'Ad Hoc'),
(1862, 'Ad Hoc String Processing Problems'),
(1862, 'Ad Hoc String Processing Problems - Part 1'),
(1862, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(1862, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(1863, 'Number Theory'),
(1863, 'Other Number Theory Problems'),
(1864, 'More Advanced Search Techniques'),
(1864, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(1865, 'Bonus Features: Primality Testing'),
(1865, 'Java BigInteger Class'),
(1865, 'Number Theory'),
(1865, 'Prime Numbers'),
(1866, 'Basic Features'),
(1866, 'Big Integer (use Java)'),
(1866, 'Java BigInteger Class'),
(1866, 'Number Theory'),
(1867, 'Depth First Search'),
(1867, 'Finding Connected Components / Flood Fill'),
(1868, 'Basic Geometry'),
(1868, 'Points and Lines'),
(1869, 'Data Structures With Our-Own Libraries'),
(1869, 'Graph (simple ones)'),
(1869, 'Graph Data Structures Problems'),
(1870, 'Number Theory'),
(1870, 'Other Number Theory Problems'),
(1871, 'Ad Hoc Mathematics Problems'),
(1871, 'Number Systems or Sequences'),
(1871, 'Sequences'),
(1871, 'Sequences and Number Systems'),
(1872, 'Ad Hoc Mathematics Problems'),
(1872, 'Base Number Variants'),
(1876, 'C++ STL queue (Java Queue)'),
(1876, 'C++ STL queue and deque (Java Queue and Deque)'),
(1876, 'Linear Data Structures with Built-in Libraries'),
(1878, 'Problem Decomposition'),
(1878, 'Two Components - Graph Preprocessing and DP'),
(1878, 'Two Components - SSSP and DP'),
(1879, 'Lowest Common Ancestor'),
(1879, 'Rare Problems'),
(1879, 'Special Graph'),
(1879, 'Tree'),
(1881, 'Ad Hoc'),
(1881, 'Ad Hoc Mathematics Problems'),
(1881, 'Finding Pattern or Formula'),
(1881, 'Finding Pattern or Formula, easier'),
(1881, 'Number Theory'),
(1884, 'Dynamic Programming'),
(1884, 'Non Classical (The Easier Ones)'),
(1885, 'Problem Decomposition'),
(1885, 'Two Components - Graph Preprocessing and DP'),
(1885, 'Two Components - SSSP and DP'),
(1886, 'Ad Hoc Problems - Part 1'),
(1886, 'Palindrome'),
(1886, 'Palindrome / Anagram'),
(1887, 'Depth First Search'),
(1887, 'Finding Connected Components / Flood Fill'),
(1887, 'Flood Fill/Finding Connected Components'),
(1887, 'Graph Traversal'),
(1888, 'All-Pairs Shortest Paths'),
(1888, 'Standard'),
(1889, 'Number Theory'),
(1889, 'Prime Numbers'),
(1891, 'Complete Search'),
(1891, 'Recursive Backtracking (Medium)'),
(1895, 'C++ STL priority_queue (Java PriorityQueue)'),
(1895, 'Non Linear Data Structures with Built-in Libraries'),
(1898, 'More Advanced Search Techniques'),
(1898, 'More Challenging Backtracking Problems'),
(1900, 'Breadth First Search'),
(1900, 'On Unweighted Graph: BFS'),
(1900, 'On Unweighted Graph: BFS, Easier'),
(1900, 'Single-Source Shortest Paths (SSSP)'),
(1900, 'SSSP on Unweighted Graph'),
(1902, '''Time Waster'' Problems'),
(1902, 'Ad Hoc Problems - Part 2'),
(1904, 'Ad Hoc Problems - Part 2'),
(1904, 'Just Ad Hoc'),
(1908, 'On Weighted Graph: Dijkstra''s, Harder'),
(1908, 'Single-Source Shortest Paths (SSSP)'),
(1911, 'Ad Hoc Mathematics Problems'),
(1911, 'Finding Pattern or Formula'),
(1911, 'Finding Pattern or Formula, harder'),
(1914, 'Complete Search'),
(1914, 'Iterative (The More Challenging Ones)'),
(1914, 'Iterative (Three or More Nested Loops, Harder)'),
(1917, 'Complete Search'),
(1917, 'Iterative (One Loop, Linear Scan)'),
(1917, 'Iterative (The Easier Ones)'),
(1918, 'On Unweighted Graph: BFS'),
(1918, 'On Unweighted Graph: BFS, Harder'),
(1918, 'Single-Source Shortest Paths (SSSP)'),
(1919, '1D Array Manipulation'),
(1919, 'Basic Data Structures'),
(1919, 'Linear Data Structures with Built-in Libraries'),
(1923, 'Greedy'),
(1923, 'Non Classical, Usually Harder'),
(1924, 'Problem Decomposition'),
(1924, 'Two Components - Binary Search the Answer and Other'),
(1927, 'Dijkstra''s'),
(1927, 'On Weighted Graph: Dijkstra''s'),
(1927, 'On Weighted Graph: Dijkstra''s, Easier'),
(1927, 'Single-Source Shortest Paths (SSSP)'),
(1931, 'Modified Sieve'),
(1931, 'Number Theory'),
(1932, 'Geometry Basics'),
(1932, 'Triangles (plus Circles)'),
(1935, 'Ad Hoc Mathematics Problems'),
(1935, 'Finding Pattern or Formula'),
(1935, 'Finding Pattern or Formula, harder'),
(1941, 'Fibonacci Numbers'),
(1941, 'Number Theory'),
(1942, 'Complete Search'),
(1942, 'Iterative (One Loop, Linear Scan)'),
(1942, 'Iterative (The Easier Ones)'),
(1943, 'DP level 3'),
(1943, 'More Advanced DP Techniques'),
(1944, 'Dynamic Programming'),
(1944, 'Longest Increasing Subsequence (LIS) - Classical'),
(1946, 'Complete Search'),
(1946, 'Iterative (The Easier Ones)'),
(1956, 'All-Pairs Shortest Paths'),
(1956, 'Floyd Warshall''s'),
(1956, 'Standard'),
(1956, 'Standard Application (for APSP or SSSP on small graph)'),
(1963, 'Non Classic'),
(1963, 'String Processing with Dynamic Programming'),
(1975, 'C++ STL queue (Java Queue)'),
(1975, 'C++ STL queue and deque (Java Queue and Deque)'),
(1975, 'Data Structures With Built-in Libraries'),
(1975, 'Linear Data Structures with Built-in Libraries'),
(1975, 'STL queue'),
(1977, 'Cycle-Finding'),
(1977, 'Number Theory'),
(1977, 'Standard'),
(1980, 'C++ STL algorithm (Java Collections)'),
(1980, 'Linear Data Structures with Built-in Libraries'),
(1981, '2D Array Manipulation'),
(1981, 'Basic Data Structures'),
(1981, 'Linear Data Structures with Built-in Libraries'),
(1983, 'Number Theory'),
(1983, 'Other Number Theory Problems'),
(1985, 'Ad Hoc'),
(1985, 'Ad Hoc Problems - Part 1'),
(1985, 'Easy'),
(1985, 'Getting Started: The Easy Problems'),
(1985, 'Super Easy'),
(1986, 'Bipartite Graph'),
(1986, 'Max Cardinality Bipartite Matching'),
(1986, 'Network Flow'),
(1986, 'Special Graph'),
(1986, 'Special Graphs (Others)'),
(1986, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(1989, 'Ad Hoc'),
(1989, 'Ad Hoc String Processing'),
(1989, 'Ad Hoc String Processing Problems'),
(1989, 'String Comparison'),
(1990, 'Breadth First Search'),
(1990, 'On Unweighted Graph: BFS'),
(1990, 'On Unweighted Graph: BFS, Harder'),
(1990, 'Single-Source Shortest Paths (SSSP)'),
(1990, 'SSSP on Unweighted Graph'),
(1994, 'Cycle-Finding'),
(1994, 'Number Theory'),
(1994, 'Standard'),
(1995, 'Greedy'),
(1995, 'Non Classical, Usually Harder'),
(1995, 'Standard'),
(1997, 'Ad Hoc'),
(1997, 'Ad Hoc String Processing'),
(1997, 'Ad Hoc String Processing Problems'),
(1997, 'String Comparison'),
(1998, 'Binary Search'),
(1998, 'Divide and Conquer'),
(2000, 'Complete Search'),
(2000, 'Iterative (The Easier Ones)'),
(2000, 'Iterative (Three or More Nested Loops, Easier)'),
(2003, 'Ad Hoc'),
(2003, 'Ad Hoc String Processing'),
(2003, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2003, 'C++ STL set (Java TreeSet)'),
(2003, 'Non Linear Data Structures with Built-in Libraries');
INSERT INTO `uva_problem_category` (`problem_number`, `category`) VALUES
(2004, 'Ad Hoc Mathematics Problems'),
(2004, 'Number Systems or Sequences'),
(2004, 'Sequences'),
(2004, 'Sequences and Number Systems'),
(2005, 'Euler''s Totient (Phi) Function'),
(2005, 'Functions involving Prime Factors'),
(2005, 'Number Theory'),
(2006, 'More Advanced Search Techniques'),
(2006, 'More Challenging Backtracking Problems'),
(2009, 'Basic Geometry'),
(2009, 'Geometry Basics'),
(2009, 'Lines'),
(2009, 'Points and Lines'),
(2010, 'Combinatorics'),
(2010, 'Number Theory'),
(2010, 'Other Combinatorics'),
(2010, 'Other, Harder'),
(2011, 'Ad Hoc String Processing Problems - Part 1'),
(2011, 'Input Parsing (Recursive)'),
(2015, 'Ad Hoc String Processing Problems'),
(2015, 'Output Formatting'),
(2019, 'Complete Search'),
(2019, 'Iterative (One Loop, Linear Scan)'),
(2019, 'Iterative (The Easier Ones)'),
(2021, 'Bipartite Graph Check'),
(2021, 'Breadth First Search'),
(2021, 'Graph Traversal'),
(2021, 'Variants'),
(2025, 'DP level 3'),
(2025, 'More Advanced DP Techniques'),
(2026, 'Complete Search'),
(2026, 'Recursive Backtracking (Easy)'),
(2026, 'Recursive Backtracking (The Easier Ones)'),
(2027, 'Functions involving Prime Factors'),
(2027, 'Number Theory'),
(2029, 'DP level 2'),
(2029, 'More Advanced DP Techniques'),
(2031, 'Complete Search'),
(2031, 'Recursive Backtracking (Harder)'),
(2034, '1D Array Manipulation'),
(2034, 'Linear Data Structures with Built-in Libraries'),
(2035, 'Flood Fill/Finding Connected Components'),
(2035, 'Graph Traversal'),
(2037, 'Polygon'),
(2037, 'Standard'),
(2041, 'Greedy'),
(2041, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2042, 'Breadth First Search'),
(2042, 'On Unweighted Graph: BFS'),
(2042, 'On Unweighted Graph: BFS, Harder'),
(2042, 'Single-Source Shortest Paths (SSSP)'),
(2042, 'Variants'),
(2044, 'Greedy'),
(2044, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2044, 'Standard'),
(2046, 'Problem Decomposition'),
(2046, 'Two Components - Involving DP 1D RSQ/RMQ'),
(2048, 'Standard'),
(2048, 'Suffix Array'),
(2048, 'Suffix Trie, Tree, Array'),
(2049, 'Complete Search'),
(2049, 'Iterative (The More Challenging Ones)'),
(2049, 'Iterative (Three or More Nested Loops, Harder)'),
(2051, 'Depth First Search'),
(2051, 'Finding Connected Components / Flood Fill'),
(2051, 'Flood Fill/Finding Connected Components'),
(2051, 'Graph Traversal'),
(2052, 'Bracket Matching'),
(2052, 'C++ STL stack (Java Stack)'),
(2052, 'Linear Data Structures with Built-in Libraries'),
(2052, 'Rare Problems'),
(2056, 'Combinatorics'),
(2056, 'Number Theory'),
(2056, 'Other Combinatorics'),
(2056, 'Others, Easier'),
(2062, 'Ad Hoc Mathematics Problems'),
(2062, 'Base Number Variants'),
(2063, 'Intersection Problems'),
(2063, 'Other Objects'),
(2066, 'DP level 4'),
(2066, 'More Advanced DP Techniques'),
(2068, 'More Advanced Search Techniques'),
(2068, 'More Challenging Backtracking Problems'),
(2071, 'Ad Hoc'),
(2071, 'Ad Hoc Mathematics Problems'),
(2071, 'Mathematical Simulation (Brute Force)'),
(2071, 'Mathematical Simulation (Brute Force), harder'),
(2071, 'Number Theory'),
(2074, 'DP level 4'),
(2074, 'More Advanced DP Techniques'),
(2077, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2077, 'C++ STL set (Java TreeSet)'),
(2077, 'Data Structures With Built-in Libraries'),
(2077, 'Non Linear Data Structures with Built-in Libraries'),
(2077, 'STL map/set'),
(2078, 'Coin Change (CC)'),
(2078, 'Coin Change - Classical'),
(2078, 'Dynamic Programming'),
(2079, 'Bipartite Graph'),
(2079, 'Hopcroft Karp''s Algorithm'),
(2079, 'Rare Algorithms'),
(2079, 'Special Graphs (Others)'),
(2081, '''Time Waster'' Problems'),
(2081, 'Ad Hoc Problems - Part 2'),
(2081, 'Just Ad Hoc'),
(2089, 'Ad Hoc String Processing Problems'),
(2089, 'Ad Hoc String Processing Problems - Part 1'),
(2089, 'Input Parsing'),
(2089, 'Input Parsing (Non Recursive)'),
(2091, 'Ad Hoc'),
(2091, 'Ad Hoc Mathematics Problems'),
(2091, 'Mathematical Simulation (Brute Force)'),
(2091, 'Mathematical Simulation (Brute Force), easier'),
(2092, 'Non Classic'),
(2092, 'Standard'),
(2092, 'String Processing with DP'),
(2092, 'String Processing with Dynamic Programming'),
(2093, 'Geometry Basics'),
(2093, 'Triangles (plus Circles)'),
(2098, 'Greedy'),
(2098, 'Non Classical, Usually Harder'),
(2098, 'Standard'),
(2100, 'Bipartite Graph'),
(2100, 'Max Weighted Independent Set in Bipartite Graph'),
(2100, 'Special Graph'),
(2100, 'Special Graphs (Others)'),
(2102, 'Fibonacci Numbers'),
(2102, 'Number Theory'),
(2104, 'A*/IDA*'),
(2104, 'Meet in the Middle/A*/IDA*'),
(2104, 'More Advanced Search'),
(2104, 'More Advanced Search Techniques'),
(2108, 'Dinic''s Algorithm'),
(2108, 'Network Flow'),
(2108, 'Rare Algorithms'),
(2108, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(2113, 'Ad Hoc Problems - Part 1'),
(2113, 'Easy'),
(2113, 'Getting Started: The Easy Problems'),
(2113, 'Super Easy'),
(2114, 'Bit Manipulation'),
(2114, 'Linear Data Structures with Built-in Libraries'),
(2117, 'Others'),
(2117, 'Probability Theory'),
(2122, 'Others'),
(2122, 'Probability Theory'),
(2122, 'Standard'),
(2126, 'Bonus Features'),
(2126, 'Bonus Features: Base Number Conversion'),
(2126, 'Java BigInteger Class'),
(2133, '1D Array Manipulation'),
(2133, 'Basic Data Structures'),
(2133, 'Linear Data Structures with Built-in Libraries'),
(2136, 'Complete Search'),
(2136, 'More Advanced Search Techniques'),
(2136, 'More Challenging Backtracking Problems'),
(2136, 'Recursive Backtracking (The More Challenging Ones)'),
(2139, 'More Advanced Search Techniques'),
(2139, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(2142, 'Complete Search'),
(2142, 'Recursive Backtracking (Medium)'),
(2142, 'Recursive Backtracking (The Easier Ones)'),
(2143, 'Ad Hoc Mathematics Problems'),
(2143, 'Finding Pattern or Formula'),
(2143, 'Finding Pattern or Formula, easier'),
(2144, 'Ad Hoc String Processing Problems'),
(2144, 'Frequency Counting'),
(2145, 'Combinatorics'),
(2145, 'Number Theory'),
(2145, 'Other Combinatorics'),
(2145, 'Other, Harder'),
(2146, 'Complete Search'),
(2146, 'Iterative (Fancy Techniques)'),
(2146, 'Iterative (The More Challenging Ones)'),
(2148, 'Basic Geometry'),
(2148, 'Geometry Basics'),
(2148, 'Quadrilaterals'),
(2148, 'Rectangles'),
(2153, 'A*/IDA*'),
(2153, 'Meet in the Middle/A*/IDA*'),
(2153, 'More Advanced Search'),
(2153, 'More Advanced Search Techniques'),
(2159, 'DP + bitmask'),
(2159, 'DP level 2'),
(2159, 'More Advanced DP Techniques'),
(2159, 'More Advanced Dynamic Programming'),
(2160, 'Ad Hoc Problems - Part 2'),
(2160, 'Time'),
(2161, 'Ad Hoc String Processing Problems'),
(2161, 'Ad Hoc String Processing Problems - Part 1'),
(2161, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2161, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(2162, 'Ad Hoc'),
(2162, 'Ad Hoc Problems - Part 1'),
(2162, 'Ad Hoc String Processing'),
(2162, 'Palindrome'),
(2162, 'Palindrome / Anagram'),
(2163, '1D Array Manipulation'),
(2163, 'Basic Data Structures'),
(2163, 'Linear Data Structures with Built-in Libraries'),
(2164, 'Ad Hoc'),
(2164, 'Ad Hoc Problems - Part 1'),
(2164, 'Ad Hoc Problems - Part 2'),
(2164, 'Interesting Real Life Problems'),
(2164, 'Interesting Real Life Problems, Harder'),
(2166, 'Ad Hoc Problems - Part 1'),
(2166, 'Game (Card)'),
(2167, 'Functions involving Prime Factors'),
(2167, 'Number Theory'),
(2168, 'Basic Geometry'),
(2168, 'Geometry Basics'),
(2168, 'Lines'),
(2168, 'Points and Lines'),
(2168, 'Problem Decomposition'),
(2168, 'Two Components - Complete Search and Geometry'),
(2169, 'Kruskal''s'),
(2169, 'Minimum Spanning Tree'),
(2169, 'Standard'),
(2169, 'Standard Application (for MST)'),
(2171, 'Greedy'),
(2171, 'Non Classical, Usually Harder'),
(2172, 'Ad Hoc'),
(2172, 'Ad Hoc Mathematics Problems'),
(2172, 'Finding Pattern or Formula'),
(2172, 'Finding Pattern or Formula, harder'),
(2172, 'Number Theory'),
(2173, 'Geometry Basics'),
(2173, 'Other Basic Geometry'),
(2174, 'Ad Hoc'),
(2174, 'Ad Hoc String Processing'),
(2174, 'Ad Hoc String Processing Problems'),
(2174, 'String Comparison'),
(2176, 'Data Structures With Our-Own Libraries'),
(2176, 'Segment Tree'),
(2176, 'Tree-related Data Structures'),
(2177, 'Complete Search'),
(2177, 'Iterative (Three or More Nested Loops, Harder)'),
(2180, 'C++ STL map (Java TreeMap)'),
(2180, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2180, 'Data Structures With Built-in Libraries'),
(2180, 'Non Linear Data Structures with Built-in Libraries'),
(2180, 'STL map/set'),
(2181, 'Greedy'),
(2181, 'Non Classical, Usually Harder'),
(2183, 'Complete Search'),
(2183, 'Iterative'),
(2183, 'Iterative (The Easier Ones)'),
(2183, 'Iterative (Two Nested Loops)'),
(2201, 'Flood Fill/Finding Connected Components'),
(2201, 'Graph Traversal'),
(2203, 'Ad Hoc Mathematics Problems'),
(2203, 'Finding Pattern or Formula, harder'),
(2204, 'Ad Hoc Mathematics Problems'),
(2204, 'Mathematical Simulation (Brute Force)'),
(2204, 'Mathematical Simulation (Brute Force), easier'),
(2221, 'Ad Hoc Mathematics Problems'),
(2221, 'Mathematical Simulation (Brute Force), harder'),
(2225, 'Non Classic'),
(2225, 'Standard'),
(2225, 'String Processing with Dynamic Programming'),
(2229, 'Divide and Conquer'),
(2229, 'Problem Decomposition'),
(2229, 'Two Components - Binary Search the Answer and Other'),
(2231, 'Classical, Usually Easier'),
(2231, 'Greedy'),
(2232, 'Polygon'),
(2232, 'Standard'),
(2234, 'Problem Decomposition'),
(2234, 'Two Components - Involving Graph'),
(2236, 'Greedy'),
(2236, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2245, 'Combinatorics'),
(2245, 'Other, Harder'),
(2253, 'Ad Hoc'),
(2253, 'Ad Hoc String Processing'),
(2253, 'Ad Hoc String Processing Problems'),
(2253, 'Ad Hoc String Processing Problems - Part 1'),
(2253, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2253, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(2255, 'Bellman Ford''s'),
(2255, 'On Graph with Negative Weight Cycle: Bellman Ford''s'),
(2255, 'Single-Source Shortest Paths (SSSP)'),
(2258, 'In 2D Grid'),
(2258, 'String Matching'),
(2259, 'Dynamic Programming'),
(2259, 'Traveling Salesman Problem (TSP)'),
(2260, 'DP level 3'),
(2260, 'More Advanced DP Techniques'),
(2260, 'More Advanced Dynamic Programming'),
(2260, 'The More Challenging Ones'),
(2261, 'C++ STL map (Java TreeMap)'),
(2261, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2261, 'Non Linear Data Structures with Built-in Libraries'),
(2262, 'Bonus Features: Primality Testing'),
(2262, 'Java BigInteger Class'),
(2262, 'Number Theory'),
(2262, 'Prime Numbers'),
(2266, 'Ad Hoc String Processing Problems - Part 1'),
(2266, 'Input Parsing (Recursive)'),
(2267, 'Greedy'),
(2267, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2267, 'Preview'),
(2267, 'Preview Contest'),
(2267, 'Standard'),
(2271, 'Ad Hoc Mathematics Problems'),
(2271, 'Finding Pattern or Formula'),
(2271, 'Finding Pattern or Formula, harder'),
(2272, 'Data Structures With Our-Own Libraries'),
(2272, 'Segment Tree'),
(2272, 'Tree-related Data Structures'),
(2273, 'Ad Hoc Mathematics Problems'),
(2273, 'Finding Pattern or Formula, harder'),
(2276, 'Min Cost (Max) Flow'),
(2276, 'Rare Problems'),
(2282, 'Converting General Graph to DAG'),
(2282, 'DP on Tree'),
(2282, 'Dynamic Programming'),
(2282, 'Special Graph (Directed Acyclic Graph)'),
(2283, 'C++ STL map (Java TreeMap)'),
(2283, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2283, 'Data Structures With Built-in Libraries'),
(2283, 'Non Linear Data Structures with Built-in Libraries'),
(2283, 'STL map/set'),
(2284, 'Ad Hoc Problems - Part 1'),
(2284, 'Palindrome'),
(2284, 'Palindrome / Anagram'),
(2285, 'Combinatorics'),
(2285, 'Number Theory'),
(2285, 'Other Combinatorics'),
(2285, 'Others, Easier'),
(2286, 'Game Theory'),
(2286, 'Standard'),
(2288, 'Ad Hoc'),
(2288, 'Ad Hoc Mathematics Problems'),
(2288, 'Mathematical Simulation (Brute Force)'),
(2288, 'Mathematical Simulation (Brute Force), easier'),
(2288, 'Number Theory'),
(2294, 'Gaussian Elimination'),
(2294, 'Rare Algorithms'),
(2296, 'C++ STL algorithm (Java Collections)'),
(2296, 'Linear Data Structures with Built-in Libraries'),
(2299, 'Problem Decomposition'),
(2299, 'Single-Source Shortest/Longest Paths in DAG'),
(2299, 'Special Graph'),
(2299, 'Two Components - Graph Preprocessing and DP'),
(2299, 'Two Components - Involving Graph'),
(2302, 'Euler''s Totient (Phi) Function'),
(2302, 'Functions involving Prime Factors'),
(2302, 'Modified Sieve'),
(2302, 'Number Theory'),
(2304, 'More Advanced Search Techniques'),
(2304, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(2307, 'Ad Hoc Problems - Part 1'),
(2307, 'Easy'),
(2310, 'Greedy'),
(2310, 'Non Classical, Usually Harder'),
(2313, 'On Weighted Graph: Dijkstra''s, Harder'),
(2313, 'Single-Source Shortest Paths (SSSP)'),
(2315, '1D Array Manipulation'),
(2315, 'Ad Hoc'),
(2315, 'Basic Data Structures'),
(2315, 'Data Structures With Built-in Libraries'),
(2315, 'Linear Data Structures with Built-in Libraries'),
(2315, 'Static array, vector, bitset, Direct Addressing Table'),
(2316, 'Dynamic Programming'),
(2316, 'Non Classical (The Easier Ones)'),
(2317, 'Complete Search'),
(2317, 'Iterative (The Easier Ones)'),
(2317, 'Iterative (Three or More Nested Loops, Harder)'),
(2318, 'Basic Geometry'),
(2318, 'Intersection Problems'),
(2318, 'Line Segment Intersection'),
(2318, 'Points and Lines'),
(2319, 'Number Theory'),
(2319, 'Other Number Theory Problems'),
(2320, 'Basic Geometry'),
(2320, 'Intersection Problems'),
(2320, 'Other Objects'),
(2320, 'Quadrilaterals'),
(2322, 'Factorial'),
(2322, 'Number Theory'),
(2322, 'Working with Prime Factors'),
(2323, 'C++ STL map (Java TreeMap)'),
(2323, 'Non Linear Data Structures with Built-in Libraries'),
(2324, '2D Array Manipulation'),
(2324, 'Basic Data Structures'),
(2324, 'Linear Data Structures with Built-in Libraries'),
(2325, 'Data Structures with Our-Own Libraries'),
(2325, 'Tree-related Data Structures'),
(2326, 'Josephus Problem'),
(2326, 'Rare Problems'),
(2327, 'Breadth First Search'),
(2327, 'On Unweighted Graph: BFS'),
(2327, 'On Unweighted Graph: BFS, Harder'),
(2327, 'Single-Source Shortest Paths (SSSP)'),
(2327, 'SSSP on Unweighted Graph'),
(2341, 'Ad Hoc Problems - Part 2'),
(2341, 'Time'),
(2342, 'Ad Hoc String Processing Problems - Part 1'),
(2342, 'Input Parsing (Non Recursive)'),
(2345, '2D Array Manipulation'),
(2345, 'Basic Data Structures'),
(2345, 'Linear Data Structures with Built-in Libraries'),
(2347, 'Ad Hoc'),
(2347, 'Ad Hoc String Processing'),
(2347, 'Standard'),
(2347, 'String Matching'),
(2349, 'Basic Data Structures'),
(2349, 'Getting Started: The Easy Problems'),
(2349, 'Linear Data Structures with Built-in Libraries'),
(2349, 'Super Easy'),
(2352, 'On Weighted Graph: Dijkstra''s'),
(2352, 'On Weighted Graph: Dijkstra''s, Harder'),
(2352, 'Single-Source Shortest Paths (SSSP)'),
(2354, 'Greedy'),
(2354, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2354, 'Standard'),
(2366, 'Number Theory'),
(2366, 'Other Number Theory Problems'),
(2372, 'Dijkstra''s'),
(2372, 'On Weighted Graph: Dijkstra''s'),
(2372, 'On Weighted Graph: Dijkstra''s, Harder'),
(2372, 'Single-Source Shortest Paths (SSSP)'),
(2373, 'Closest Pair Problem'),
(2373, 'Divide and Conquer'),
(2373, 'Divide and Conquer Revisited'),
(2373, 'Rare Problems'),
(2373, 'Standard'),
(2380, 'Ad Hoc'),
(2380, 'Ad Hoc String Processing'),
(2380, 'Ad Hoc String Processing Problems'),
(2380, 'Ad Hoc String Processing Problems - Part 1'),
(2380, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2380, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(2382, 'Ad Hoc Mathematics Problems'),
(2382, 'Finding Pattern or Formula, harder'),
(2383, 'GCD and/or LCM'),
(2383, 'GCD/LCM'),
(2383, 'Number Theory'),
(2384, 'Classical, Usually Easier'),
(2384, 'Greedy'),
(2384, 'Standard'),
(2386, 'DP + bitmask'),
(2386, 'DP level 3'),
(2386, 'More Advanced DP Techniques'),
(2386, 'More Advanced Dynamic Programming'),
(2388, 'Ad Hoc Mathematics Problems'),
(2388, 'Finding Pattern or Formula, harder'),
(2391, 'Bipartite Graph Check'),
(2391, 'Graph Traversal'),
(2396, 'Combinatorics'),
(2396, 'Number Theory'),
(2396, 'Other Combinatorics'),
(2396, 'Others, Easier'),
(2397, 'Data Structures With Our-Own Libraries'),
(2397, 'Segment Tree'),
(2397, 'Tree-related Data Structures'),
(2400, 'Problem Decomposition'),
(2400, 'Two Components - Graph Preprocessing and DP'),
(2400, 'Two Components - SSSP and DP'),
(2402, 'Dynamic Programming'),
(2402, 'Non Classical (The Easier Ones)'),
(2403, 'Number Theory'),
(2403, 'Prime Numbers'),
(2403, 'Problem Decomposition'),
(2403, 'Two Components - Involving DP 1D Range Sum'),
(2403, 'Two Components - Involving DP 1D RSQ/RMQ'),
(2407, 'Complete Search'),
(2407, 'Iterative (Fancy Techniques)'),
(2407, 'Iterative (The Easier Ones)'),
(2408, 'Binary Search'),
(2408, 'Binary Search the Answer'),
(2408, 'Divide and Conquer'),
(2409, 'Data Structures with Our-Own Libraries'),
(2409, 'Formulas or Theorems'),
(2409, 'Graph Data Structures Problems'),
(2409, 'Rare Algorithms'),
(2410, 'Factorial'),
(2410, 'Number Theory'),
(2412, 'GCD and/or LCM'),
(2412, 'GCD/LCM'),
(2412, 'Number Theory'),
(2413, 'Bipartite Graph'),
(2413, 'Max Cardinality Bipartite Matching'),
(2413, 'Network Flow'),
(2413, 'Special Graph'),
(2413, 'Special Graphs (Others)'),
(2413, 'Standard Max Flow Problem (Edmonds Karp''s)'),
(2414, 'Bipartite Graph'),
(2414, 'Max Vertex Cover in Bipartite Graph'),
(2414, 'Special Graph'),
(2414, 'Special Graphs (Others)'),
(2415, 'Dynamic Programming'),
(2415, 'Non Classical (The Easier Ones)'),
(2423, 'Ad Hoc'),
(2423, 'Number Theory'),
(2423, 'Problem Decomposition'),
(2423, 'Two Components - Involving Mathematics'),
(2427, 'DP level 4'),
(2427, 'More Advanced DP Techniques'),
(2432, 'Geometry Basics'),
(2432, 'Triangles (plus Circles)'),
(2434, 'Graph Matching (non-bipartite)'),
(2434, 'Rare Problems'),
(2442, 'Geometry Basics'),
(2442, 'Polygon'),
(2442, 'Polygons'),
(2442, 'Standard'),
(2443, 'Basic Features'),
(2443, 'Java BigInteger Class'),
(2445, 'Dynamic Programming'),
(2445, 'Non Classical (medium difficulty)'),
(2445, 'Non Classical (The Easier Ones)'),
(2445, 'Preview'),
(2445, 'Preview Contest'),
(2447, 'Ad Hoc String Processing Problems'),
(2447, 'Just Ad Hoc'),
(2450, 'Basic Geometry'),
(2450, 'Geometry Basics'),
(2450, 'Quadrilaterals'),
(2450, 'Rectangles'),
(2451, 'Dynamic Programming'),
(2451, 'Longest Increasing Subsequence (LIS)'),
(2451, 'Longest Increasing Subsequence (LIS) - Classical'),
(2454, 'Ad Hoc Problems - Part 1'),
(2454, 'Game (Others)'),
(2454, 'Game (Others), Easier'),
(2456, 'Ad Hoc Mathematics Problems'),
(2456, 'Number Systems'),
(2456, 'Number Systems or Sequences'),
(2456, 'Sequences and Number Systems'),
(2457, 'Data Structures With Built-in Libraries'),
(2457, 'Rare Problems'),
(2457, 'Sorting in Linear Time'),
(2457, 'Sorting-related problems'),
(2458, 'All-Pairs Shortest Paths'),
(2458, 'Floyd Warshall''s'),
(2458, 'Standard'),
(2458, 'Standard Application (for APSP or SSSP on small graph)'),
(2459, 'More Advanced Search Techniques'),
(2459, 'More Challenging Backtracking Problems'),
(2461, 'Finding Prime Factors'),
(2461, 'Number Theory'),
(2461, 'Prime Numbers'),
(2465, 'Flood Fill/Finding Connected Components'),
(2465, 'Graph Traversal'),
(2466, 'More Advanced Search Techniques'),
(2466, 'More Challenging Backtracking Problems'),
(2467, 'DP + bitmask'),
(2467, 'DP level 4'),
(2467, 'More Advanced DP Techniques'),
(2467, 'More Advanced Dynamic Programming'),
(2467, 'Number Systems'),
(2467, 'Sequences and Number Systems'),
(2468, 'Geometry Basics'),
(2468, 'Polygon'),
(2468, 'Polygons'),
(2468, 'Standard'),
(2469, 'Problem Decomposition'),
(2469, 'Two Components - Mixed with Efficient Data Structure'),
(2470, 'Standard'),
(2470, 'String Matching'),
(2471, 'Pollard''s rho Integer Factoring Algorithm'),
(2471, 'Rare Algorithms'),
(2474, 'Geometry Basics'),
(2474, 'Triangles (plus Circles)'),
(2475, 'Combinatorics'),
(2475, 'Other Combinatorics'),
(2475, 'Others, Easier'),
(2478, 'Ad Hoc String Processing Problems'),
(2478, 'Just Ad Hoc'),
(2481, 'Matrix Power'),
(2481, 'Rare Algorithms'),
(2482, 'Converting General Graph to DAG'),
(2482, 'Special Graph (Directed Acyclic Graph)'),
(2484, 'Game Theory'),
(2484, 'Standard'),
(2486, 'Problem Decomposition'),
(2486, 'Two Components - Involving DP 1D RSQ/RMQ'),
(2487, 'Data Structures With Built-in Libraries'),
(2487, 'Dijkstra''s'),
(2487, 'On Weighted Graph: Dijkstra''s'),
(2487, 'On Weighted Graph: Dijkstra''s, Harder'),
(2487, 'Single-Source Shortest Paths (SSSP)'),
(2487, 'STL priority_queue'),
(2489, 'Ad Hoc Problems - Part 1'),
(2489, 'Game (Chess)'),
(2490, 'Data Structures With Built-in Libraries'),
(2490, 'Inversion Index'),
(2490, 'Rare Problems'),
(2490, 'Sorting-related problems'),
(2491, '1D Array Manipulation'),
(2491, 'Basic Data Structures'),
(2491, 'Linear Data Structures with Built-in Libraries'),
(2493, 'Ad Hoc'),
(2493, 'Ad Hoc Problems - Part 1'),
(2493, 'Easy'),
(2493, 'Getting Started: The Easy Problems'),
(2493, 'Super Easy'),
(2495, 'Others'),
(2495, 'Probability Theory'),
(2495, 'Standard'),
(2498, 'Data Structures With Our-Own Libraries'),
(2498, 'Union-Find Disjoint Sets'),
(2499, 'Depth First Search'),
(2499, 'Finding Strongly Connected Components'),
(2500, 'Basic Geometry'),
(2500, 'Points and Lines'),
(2501, 'Ford Fulkerson''s / Edmonds Karps''s'),
(2501, 'Preview'),
(2501, 'Preview Contest'),
(2501, 'Standard Application (for Max Flow/Min Cut)'),
(2502, 'Ad Hoc Problems - Part 2'),
(2502, 'Geometry Basics'),
(2502, 'Getting Started: The Easy Problems'),
(2502, 'Just Ad Hoc'),
(2502, 'Medium'),
(2502, 'Other Basic Geometry'),
(2507, 'Preview'),
(2507, 'Preview Contest'),
(2507, 'Standard'),
(2507, 'Suffix Array'),
(2507, 'Suffix Trie, Tree, Array'),
(2508, 'Breadth First Search'),
(2508, 'More Advanced Search Techniques'),
(2508, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(2508, 'On Unweighted Graph: BFS'),
(2508, 'Single-Source Shortest Paths (SSSP)'),
(2508, 'SSSP on Unweighted Graph'),
(2510, 'Intersection Problems'),
(2510, 'Other Objects'),
(2510, 'Problem Decomposition'),
(2510, 'Two Components - Complete Search and Geometry'),
(2511, 'Problem Decomposition'),
(2511, 'Two Components - Binary Search the Answer and Other'),
(2512, 'Coin Change (CC)'),
(2512, 'Coin Change - Classical'),
(2512, 'Dynamic Programming'),
(2513, 'Depth First Search'),
(2513, 'Finding Connected Components / Flood Fill'),
(2513, 'Flood Fill/Finding Connected Components'),
(2513, 'Graph Traversal'),
(2515, 'Greedy'),
(2515, 'Non Classical, Usually Harder'),
(2515, 'Standard'),
(2519, 'Geometry Basics'),
(2519, 'Triangles (plus Circles)'),
(2520, 'Data Structures with Our-Own Libraries'),
(2520, 'Problem Decomposition'),
(2520, 'Tree-related Data Structures'),
(2520, 'Two Components - Mixed with Efficient Data Structure'),
(2521, 'Ad Hoc Mathematics Problems'),
(2521, 'Just Ad Hoc'),
(2525, 'Ad Hoc Problems - Part 1'),
(2525, 'Ad Hoc Problems - Part 2'),
(2525, 'Interesting Real Life Problems'),
(2525, 'Interesting Real Life Problems, Easier'),
(2527, 'Greedy'),
(2527, 'Non Classical, Usually Harder'),
(2527, 'Standard'),
(2531, 'Rare Algorithms'),
(2531, 'Sliding Window'),
(2533, 'Combinatorics'),
(2533, 'Other, Harder'),
(2536, 'Ad Hoc String Processing Problems'),
(2536, 'Ad Hoc String Processing Problems - Part 1'),
(2536, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2536, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(2540, 'Breadth First Search'),
(2540, 'Converting General Graph to DAG'),
(2540, 'Special Graph (Directed Acyclic Graph)'),
(2540, 'SSSP on Unweighted Graph'),
(2542, 'Ad Hoc'),
(2542, 'Ad Hoc Problems - Part 1'),
(2542, 'Easy'),
(2542, 'Getting Started: The Easy Problems'),
(2542, 'Super Easy'),
(2543, 'Complete Search'),
(2543, 'Iterative (Three or More Nested Loops, Harder)'),
(2544, 'Cycle-Finding'),
(2544, 'Number Theory'),
(2544, 'Standard'),
(2545, 'Data Structures with Our-Own Libraries'),
(2545, 'Graph Data Structures Problems'),
(2547, 'Non Classic'),
(2547, 'String Processing with Dynamic Programming'),
(2548, 'Complete Search'),
(2548, 'Iterative (Fancy Techniques)'),
(2548, 'Iterative (The More Challenging Ones)'),
(2549, 'Combinatorics'),
(2549, 'Number Theory'),
(2549, 'Other Combinatorics'),
(2549, 'Other, Harder'),
(2595, 'Ad Hoc Problems - Part 1'),
(2595, 'Easy'),
(2597, 'Flood Fill/Finding Connected Components'),
(2597, 'Graph Traversal'),
(2612, 'Complete Search'),
(2612, 'Iterative (The Easier Ones)'),
(2612, 'Iterative (Three or More Nested Loops, Harder)'),
(2614, 'Greedy'),
(2614, 'Non Classical, Usually Harder'),
(2614, 'Standard'),
(2619, 'C++ STL map (Java TreeMap)'),
(2619, 'Non Linear Data Structures with Built-in Libraries'),
(2621, 'Problem Decomposition'),
(2621, 'Two Components - Complete Search and Geometry'),
(2623, 'Standard'),
(2623, 'String Matching'),
(2624, 'Ad Hoc String Processing Problems'),
(2624, 'Frequency Counting'),
(2626, 'Geometry Basics'),
(2626, 'Triangles (plus Circles)'),
(2628, '2D Array Manipulation'),
(2628, 'Basic Data Structures'),
(2628, 'Linear Data Structures with Built-in Libraries'),
(2633, 'Ad Hoc Problems - Part 2'),
(2633, 'Getting Started: The Easy Problems'),
(2633, 'Just Ad Hoc'),
(2633, 'Medium'),
(2635, 'C++ STL algorithm (Java Collections)'),
(2635, 'Linear Data Structures with Built-in Libraries'),
(2644, 'Combinatorics'),
(2644, 'Other Combinatorics'),
(2644, 'Others, Easier'),
(2648, 'Intersection Problems'),
(2648, 'Other Objects'),
(2655, '1D Array Manipulation'),
(2655, 'Basic Data Structures'),
(2655, 'Linear Data Structures with Built-in Libraries'),
(2656, 'Combinatorics'),
(2656, 'Other Combinatorics'),
(2656, 'Others, Easier'),
(2657, 'Problem Decomposition'),
(2657, 'Three Components'),
(2657, 'Three/More Components'),
(2661, 'Ad Hoc Mathematics Problems'),
(2661, 'The Simpler Ones'),
(2663, 'Ad Hoc'),
(2663, 'Ad Hoc Mathematics Problems'),
(2663, 'Just Ad Hoc'),
(2663, 'Rare Problems'),
(2663, 'Roman Numerals'),
(2668, 'C++ STL algorithm (Java Collections)'),
(2668, 'Linear Data Structures with Built-in Libraries'),
(2671, 'Breadth First Search'),
(2671, 'On Unweighted Graph: BFS'),
(2671, 'On Unweighted Graph: BFS, Harder'),
(2671, 'Single-Source Shortest Paths (SSSP)'),
(2671, 'Variants'),
(2673, 'Graham''s Scan'),
(2673, 'Graham''s Scan for Convex Hull'),
(2673, 'Polygon'),
(2673, 'Standard'),
(2675, 'Probability Theory'),
(2675, 'Standard'),
(2676, 'C++ STL map (Java TreeMap)'),
(2676, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2676, 'Non Linear Data Structures with Built-in Libraries'),
(2678, 'Kruskal''s'),
(2678, 'Minimum Spanning Tree'),
(2678, 'Standard'),
(2678, 'Standard Application (for MST)'),
(2681, 'Cycle-Finding'),
(2681, 'Standard'),
(2682, 'Dijkstra''s'),
(2682, 'Preview'),
(2682, 'Preview Contest'),
(2682, 'Problem Decomposition'),
(2682, 'Two Components - Involving Graph'),
(2683, 'Ad Hoc Mathematics Problems'),
(2683, 'Logarithm, Exponentiation, Power'),
(2686, 'Basic Geometry'),
(2686, 'Intersection Problems'),
(2686, 'Other Objects'),
(2686, 'Quadrilaterals'),
(2690, 'Knight Moves'),
(2690, 'Rare Problems'),
(2693, 'Divide and Conquer'),
(2693, 'Divide and Conquer Revisited'),
(2693, 'Standard'),
(2695, 'Divide and Conquer Revisited'),
(2697, 'Ad Hoc Problems - Part 2'),
(2697, 'Time'),
(2705, '0-1 Knapsack (Subset Sum)'),
(2705, 'Dynamic Programming'),
(2707, 'Ad Hoc Mathematics Problems'),
(2707, 'Number Systems or Sequences'),
(2708, 'Ad Hoc Problems - Part 2'),
(2708, 'Getting Started: The Easy Problems'),
(2708, 'Just Ad Hoc'),
(2708, 'Medium'),
(2713, 'Ad Hoc Mathematics Problems'),
(2713, 'Logarithm, Exponentiation, Power'),
(2724, 'Ad Hoc Problems - Part 2'),
(2724, 'Time'),
(2725, 'Ad Hoc Problems - Part 1'),
(2725, 'Game (Card)'),
(2726, 'Ad Hoc Problems - Part 2'),
(2726, 'Just Ad Hoc'),
(2730, 'Getting Started: The Easy Problems'),
(2730, 'Medium'),
(2734, 'Ad Hoc Problems - Part 2'),
(2734, 'Getting Started: The Easy Problems'),
(2734, 'Just Ad Hoc'),
(2734, 'Medium'),
(2736, 'Ad Hoc Mathematics Problems'),
(2736, 'Mathematical Simulation (Brute Force)'),
(2736, 'Mathematical Simulation (Brute Force), easier'),
(2740, 'Problem Decomposition'),
(2740, 'Two Components - Graph Preprocessing and DP'),
(2742, 'Special Graph'),
(2742, 'Tree'),
(2744, 'Ad Hoc String Processing Problems'),
(2744, 'Ad Hoc String Processing Problems - Part 1'),
(2744, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2744, 'Cipher/Encode/Encrypt/Decode/Decrypt, Harder'),
(2750, 'Dynamic Programming'),
(2750, 'Non Classical (The Easier Ones)'),
(2756, 'Depth First Search'),
(2756, 'Finding Strongly Connected Components'),
(2757, 'Kruskal''s'),
(2757, 'Minimum Spanning Tree'),
(2757, 'Standard'),
(2757, 'Standard Application (for MST)'),
(2760, 'Ad Hoc'),
(2760, 'Ad Hoc String Processing'),
(2760, 'Ad Hoc String Processing Problems'),
(2760, 'String Comparison'),
(2762, 'Ad Hoc Mathematics Problems'),
(2762, 'Just Ad Hoc'),
(2763, 'Ad Hoc'),
(2763, 'Ad Hoc String Processing'),
(2763, 'Ad Hoc String Processing Problems'),
(2763, 'Ad Hoc String Processing Problems - Part 1'),
(2763, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2763, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(2764, '''Time Waster'' Problems'),
(2764, 'Ad Hoc Problems - Part 2'),
(2764, 'Just Ad Hoc'),
(2765, 'Ad Hoc Mathematics Problems'),
(2765, 'Finding Pattern or Formula, harder'),
(2766, 'Formulas or Theorems'),
(2766, 'Rare Algorithms'),
(2768, 'Problem Decomposition'),
(2768, 'Two Components - Involving Graph'),
(2823, 'Ad Hoc Mathematics Problems'),
(2823, 'The Simpler Ones'),
(2827, 'Ad Hoc'),
(2827, 'Ad Hoc Problems - Part 1'),
(2827, 'Easy'),
(2827, 'Getting Started: The Easy Problems'),
(2827, 'Super Easy'),
(2828, 'Functions involving Prime Factors'),
(2828, 'Number Theory'),
(2829, 'Greedy'),
(2829, 'Involving Sorting (Or The Input Is Already Sorted)'),
(2829, 'Standard'),
(2830, 'Breadth First Search'),
(2830, 'Problem Decomposition'),
(2830, 'SSSP on Unweighted Graph'),
(2830, 'Two Components - Involving Mathematics'),
(2833, 'Kruskal''s'),
(2833, 'Minimum Spanning Tree'),
(2833, 'Standard'),
(2833, 'Standard Application (for MST)'),
(2834, 'Ad Hoc'),
(2834, 'Ad Hoc String Processing'),
(2834, 'Ad Hoc String Processing Problems'),
(2834, 'String Comparison'),
(2842, 'Complete Search'),
(2842, 'Iterative (Fancy Techniques)'),
(2842, 'Iterative (The Easier Ones)'),
(2843, 'Ad Hoc Problems - Part 1'),
(2843, 'Ad Hoc Problems - Part 2'),
(2843, 'Interesting Real Life Problems'),
(2843, 'Interesting Real Life Problems, Harder'),
(2847, 'Kruskal''s'),
(2847, 'Minimum Spanning Tree'),
(2847, 'Standard'),
(2847, 'Standard Application (for MST)'),
(2849, 'Depth First Search'),
(2849, 'Finding Connected Components / Flood Fill'),
(2849, 'Flood Fill/Finding Connected Components'),
(2849, 'Graph Traversal'),
(2860, 'Basic Data Structures'),
(2860, 'Bit Manipulation'),
(2860, 'Linear Data Structures with Built-in Libraries'),
(2864, 'Ad Hoc Problems - Part 1'),
(2864, 'Easy'),
(2870, 'Depth First Search'),
(2870, 'Finding Strongly Connected Components'),
(2877, 'C++ STL algorithm (Java Collections)'),
(2877, 'Linear Data Structures with Built-in Libraries'),
(2880, 'Fibonacci Numbers'),
(2880, 'Number Theory'),
(2882, 'Converting General Graph to DAG'),
(2882, 'Special Graph (Directed Acyclic Graph)'),
(2887, 'Ad Hoc String Processing Problems'),
(2887, 'Ad Hoc String Processing Problems - Part 1'),
(2887, 'Cipher/Encode/Encrypt/Decode/Decrypt'),
(2887, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(2890, 'Dynamic Programming'),
(2890, 'Longest Increasing Subsequence (LIS)'),
(2890, 'Longest Increasing Subsequence (LIS) - Classical'),
(2892, 'Breadth First Search'),
(2892, 'On Unweighted Graph: BFS'),
(2892, 'On Unweighted Graph: BFS, Harder'),
(2892, 'Single-Source Shortest Paths (SSSP)'),
(2892, 'SSSP on Unweighted Graph'),
(2899, 'Ad Hoc Problems - Part 1'),
(2899, 'Easy'),
(2900, 'Ad Hoc'),
(2904, 'Complete Search'),
(2904, 'Iterative'),
(2904, 'Iterative (The More Challenging Ones)'),
(2904, 'Iterative (Three or More Nested Loops, Harder)'),
(2905, 'Ad Hoc Mathematics Problems'),
(2905, 'The Simpler Ones'),
(2913, 'Problem Decomposition'),
(2913, 'Two Components - Graph Preprocessing and DP'),
(2913, 'Two Components - SSSP and DP'),
(2916, 'Ad Hoc Mathematics Problems'),
(2916, 'Just Ad Hoc'),
(2917, 'Basic Geometry'),
(2917, 'Geometry Basics'),
(2917, 'Great Circle Distance'),
(2917, 'Great-Circle Distance'),
(2921, 'Bonus Features'),
(2921, 'Bonus Features: Others'),
(2921, 'Java BigInteger Class'),
(2924, 'C++ STL algorithm (Java Collections)'),
(2924, 'Linear Data Structures with Built-in Libraries'),
(2927, 'GCD and/or LCM'),
(2927, 'Number Theory'),
(2930, 'Basic Features'),
(2930, 'Java BigInteger Class'),
(2931, 'Graph Traversal'),
(2931, 'Just Graph Traversal'),
(2932, '0-1 Knapsack (Subset Sum)'),
(2932, 'DP level 2'),
(2932, 'Dynamic Programming'),
(2932, 'More Advanced DP Techniques'),
(2933, 'On Weighted Graph: Dijkstra''s'),
(2933, 'On Weighted Graph: Dijkstra''s, Harder'),
(2933, 'Single-Source Shortest Paths (SSSP)'),
(2934, 'Basic Geometry'),
(2934, 'Quadrilaterals'),
(2935, '2D Array Manipulation'),
(2935, 'Basic Data Structures'),
(2935, 'Linear Data Structures with Built-in Libraries'),
(2938, 'Kosaraju''s Algorithm'),
(2938, 'Rare Algorithms'),
(2939, 'Ad Hoc String Processing Problems'),
(2939, 'Just Ad Hoc'),
(2947, 'Ad Hoc Mathematics Problems'),
(2947, 'Logarithm, Exponentiation, Power'),
(2949, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2949, 'C++ STL set (Java TreeSet)'),
(2949, 'Non Linear Data Structures with Built-in Libraries'),
(2950, '1D Array Manipulation'),
(2950, 'Ad Hoc Problems - Part 2'),
(2950, 'Just Ad Hoc'),
(2950, 'Linear Data Structures with Built-in Libraries'),
(2957, 'Minimum Spanning Tree'),
(2957, 'Standard'),
(2958, 'Inversion Index'),
(2958, 'Rare Problems'),
(2960, 'C++ STL map (Java TreeMap)'),
(2960, 'C++ STL map/set (Java TreeMap/TreeSet)'),
(2960, 'Non Linear Data Structures with Built-in Libraries'),
(2986, 'Ad Hoc Mathematics Problems'),
(2986, 'The Simpler Ones'),
(2987, 'Binary Search'),
(2987, 'Divide and Conquer'),
(2988, 'Standard'),
(2988, 'String Matching'),
(2989, 'Number Theory'),
(2989, 'Working with Prime Factors'),
(2999, 'Ad Hoc Mathematics Problems'),
(2999, 'Mathematical Simulation (Brute Force)'),
(2999, 'Mathematical Simulation (Brute Force), easier'),
(3000, 'Ad Hoc String Processing Problems'),
(3000, 'Ad Hoc String Processing Problems - Part 1'),
(3000, 'Input Parsing'),
(3000, 'Input Parsing (Non Recursive)'),
(3001, 'Basic Features'),
(3001, 'Java BigInteger Class'),
(3003, 'Binary Search'),
(3003, 'Binary Search the Answer'),
(3003, 'Divide and Conquer'),
(3051, 'Greedy'),
(3051, 'Involving Sorting (Or The Input Is Already Sorted)'),
(3051, 'Standard'),
(3053, 'Graph Traversal'),
(3053, 'Just Graph Traversal'),
(3057, 'Graph Traversal'),
(3057, 'Just Graph Traversal'),
(3068, 'Ad Hoc Problems - Part 2'),
(3068, 'C++ STL map (Java TreeMap)'),
(3068, 'Just Ad Hoc'),
(3068, 'Non Linear Data Structures with Built-in Libraries'),
(3077, 'Bit Manipulation'),
(3077, 'Data Structures with Our-Own Libraries'),
(3077, 'Linear Data Structures with Built-in Libraries'),
(3077, 'Tree-related Data Structures'),
(3084, 'Basic Data Structures'),
(3084, 'Bit Manipulation'),
(3084, 'Linear Data Structures with Built-in Libraries'),
(3085, 'Ad Hoc Mathematics Problems'),
(3085, 'Mathematical Simulation (Brute Force)'),
(3085, 'Mathematical Simulation (Brute Force), easier'),
(3086, 'Binary Search'),
(3086, 'Binary Search the Answer'),
(3086, 'Divide and Conquer'),
(3093, 'Ad Hoc Problems - Part 1'),
(3093, 'Easy'),
(3096, 'Ad Hoc Problems - Part 1'),
(3096, 'Interesting Real Life Problems, Easier'),
(3097, 'Ad Hoc Problems - Part 2'),
(3097, 'Ad Hoc String Processing Problems - Part 1'),
(3097, 'Cipher/Encode/Encrypt/Decode/Decrypt, Easier'),
(3097, 'Just Ad Hoc'),
(3098, 'Ad Hoc Problems - Part 2'),
(3098, 'Time'),
(3102, 'Dynamic Programming'),
(3102, 'Max 2D Range Sum'),
(3103, 'Bonus Features: Base Number Conversion'),
(3103, 'Java BigInteger Class'),
(3104, 'Flood Fill/Finding Connected Components'),
(3104, 'Graph Traversal'),
(3106, 'Binomial Coefficients'),
(3106, 'Combinatorics'),
(3107, 'Ad Hoc Problems - Part 2'),
(3107, 'Getting Started: The Easy Problems'),
(3107, 'Just Ad Hoc'),
(3107, 'Medium'),
(3109, 'Ad Hoc Problems - Part 2'),
(3109, 'Time'),
(3110, 'Complete Search'),
(3110, 'Iterative (The More Challenging Ones)'),
(3110, 'Iterative (Three or More Nested Loops, Harder)'),
(3111, 'Problem Decomposition'),
(3111, 'Two Components - Mixed with Efficient Data Structure'),
(3112, 'Complete Search'),
(3112, 'Recursive Backtracking (Medium)'),
(3113, 'Ad Hoc String Processing Problems'),
(3113, 'Just Ad Hoc'),
(3116, 'Ad Hoc String Processing Problems'),
(3116, 'Output Formatting'),
(3117, 'Problem Decomposition'),
(3117, 'Two Components - Mixed with Efficient Data Structure'),
(3118, 'Problem Decomposition'),
(3118, 'Two Components - Mixed with Efficient Data Structure'),
(3119, 'Ad Hoc Mathematics Problems'),
(3119, 'Mathematical Simulation (Brute Force)'),
(3119, 'Mathematical Simulation (Brute Force), harder'),
(3121, 'Ad Hoc Mathematics Problems'),
(3121, 'Mathematical Simulation (Brute Force)'),
(3125, 'More Advanced Search Techniques'),
(3125, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(3125, 'On Unweighted Graph: BFS'),
(3125, 'Single-Source Shortest Paths (SSSP)'),
(3126, 'Complete Search'),
(3126, 'Iterative (Three or More Nested Loops, Easier)'),
(3135, 'Ad Hoc Problems - Part 1'),
(3135, 'Ad Hoc Problems - Part 2'),
(3135, 'Interesting Real Life Problems'),
(3135, 'Interesting Real Life Problems, Easier'),
(3137, 'Ad Hoc Mathematics Problems'),
(3137, 'Logarithm, Exponentiation, Power'),
(3139, 'Basic Data Structures'),
(3139, 'C++ STL list (Java LinkedList)'),
(3139, 'Linear Data Structures with Built-in Libraries'),
(3142, 'Data Structures with Our-Own Libraries'),
(3142, 'Graph Data Structures Problems'),
(3146, 'C++ STL priority_queue (Java PriorityQueue)'),
(3146, 'Non Linear Data Structures with Built-in Libraries'),
(3155, 'Ad Hoc Mathematics Problems'),
(3155, 'Finding Pattern or Formula, easier'),
(3166, 'Ad Hoc Problems - Part 1'),
(3166, 'Easy'),
(3170, 'Ad Hoc Problems - Part 2'),
(3170, 'Time'),
(3173, 'Combinatorics'),
(3173, 'Other, Harder'),
(3175, 'Probability Theory'),
(3175, 'Standard'),
(3178, 'Ad Hoc Mathematics Problems'),
(3178, 'Finding Pattern or Formula, easier'),
(3179, 'Problem Decomposition'),
(3179, 'Two Components - Involving DP 1D RSQ/RMQ'),
(3181, 'DP level 3'),
(3181, 'More Advanced DP Techniques'),
(3183, 'Binary Search the Answer'),
(3183, 'Divide and Conquer'),
(3194, 'Modified Sieve'),
(3194, 'Number Theory'),
(3198, 'On Weighted Graph: Dijkstra''s, Harder'),
(3198, 'Single-Source Shortest Paths (SSSP)'),
(3200, 'C++ STL set (Java TreeSet)'),
(3200, 'Non Linear Data Structures with Built-in Libraries'),
(3212, '''Time Waster'' Problems'),
(3212, 'Ad Hoc Problems - Part 2'),
(3212, 'Just Ad Hoc'),
(3215, 'DP + bitmask'),
(3215, 'More Advanced Dynamic Programming'),
(3222, 'Problem Decomposition'),
(3222, 'Two Components - Involving Graph'),
(3226, 'Problem Decomposition'),
(3226, 'Two Components - Involving Graph'),
(3235, 'Bipartite Graph'),
(3235, 'Special Graphs (Others)'),
(3237, '''Time Waster'' Problems'),
(3237, 'Ad Hoc Problems - Part 2'),
(3237, 'Just Ad Hoc'),
(3238, 'Data Structures with Our-Own Libraries'),
(3238, 'Tree-related Data Structures'),
(3242, 'Number Theory'),
(3242, 'Working with Prime Factors'),
(3252, 'C++ STL queue and deque (Java Queue and Deque)'),
(3252, 'Linear Data Structures with Built-in Libraries'),
(3286, 'Ad Hoc String Processing Problems'),
(3286, 'Just Ad Hoc'),
(3287, 'Converting General Graph to DAG'),
(3287, 'More Advanced Search Techniques'),
(3287, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(3287, 'Special Graph (Directed Acyclic Graph)'),
(3288, 'Ad Hoc Problems - Part 2'),
(3288, 'Just Ad Hoc'),
(3289, 'Problem Decomposition'),
(3289, 'Two Components - Involving Mathematics'),
(3290, 'On Weighted Graph: Dijkstra''s'),
(3290, 'Single-Source Shortest Paths (SSSP)'),
(3295, 'Basic Features'),
(3295, 'Java BigInteger Class'),
(3296, 'On Weighted Graph: Dijkstra''s, Harder'),
(3296, 'Single-Source Shortest Paths (SSSP)'),
(3302, '1D Array Manipulation'),
(3302, 'Linear Data Structures with Built-in Libraries'),
(3311, 'Problem Decomposition'),
(3311, 'Two Components - Involving Graph'),
(3312, 'On Unweighted Graph: BFS'),
(3312, 'On Unweighted Graph: BFS, Harder'),
(3312, 'Single-Source Shortest Paths (SSSP)'),
(3320, 'Bipartite Graph'),
(3320, 'Special Graphs (Others)'),
(3339, '2D Array Manipulation'),
(3339, 'Linear Data Structures with Built-in Libraries'),
(3342, 'Binary Search the Answer'),
(3342, 'Divide and Conquer'),
(3347, 'Ad Hoc Problems - Part 1'),
(3347, 'Interesting Real Life Problems, Easier'),
(3359, 'C++ STL queue and deque (Java Queue and Deque)'),
(3359, 'Linear Data Structures with Built-in Libraries'),
(3362, 'Greedy'),
(3362, 'Involving Sorting (Or The Input Is Already Sorted)'),
(3390, 'Lowest Common Ancestor'),
(3390, 'Rare Problems'),
(3391, 'Ad Hoc Problems - Part 1'),
(3391, 'Game (Others), Easier'),
(3401, 'Complete Search'),
(3401, 'Iterative (Fancy Techniques)'),
(3401, 'Recursive Backtracking (The Easier Ones)'),
(3402, 'Ad Hoc Problems - Part 2'),
(3402, 'Getting Started: The Easy Problems'),
(3402, 'Just Ad Hoc'),
(3402, 'Super Easy'),
(3407, 'Problem Decomposition'),
(3407, 'Two Components - Binary Search the Answer and Other'),
(3431, 'Getting Started: The Easy Problems'),
(3431, 'Super Easy'),
(3480, 'Problem Decomposition'),
(3480, 'Two Components - Involving Graph'),
(3481, 'Problem Decomposition'),
(3481, 'Three Components'),
(3488, 'Complete Search'),
(3488, 'Iterative (Fancy Techniques)'),
(3493, 'More Advanced Search Techniques'),
(3493, 'More Challenging Backtracking Problems'),
(3498, 'More Advanced Search Techniques'),
(3498, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(3502, 'Ad Hoc Problems - Part 1'),
(3502, 'Interesting Real Life Problems, Harder'),
(3505, 'Complete Search'),
(3505, 'Iterative (Fancy Techniques)'),
(3520, 'Problem Decomposition'),
(3520, 'Three Components'),
(3520, 'Three/More Components'),
(3532, 'Ad Hoc Problems - Part 2'),
(3532, 'Just Ad Hoc'),
(3533, 'Problem Decomposition'),
(3533, 'Two Components - Involving Graph'),
(3534, 'Problem Decomposition'),
(3534, 'Three Components'),
(3537, 'Bitonic TSP'),
(3537, 'More Advanced Dynamic Programming'),
(3537, 'Rare Problems'),
(3537, 'The More Challenging Ones'),
(3539, 'Complete Search'),
(3539, 'Meet in the Middle/A*/IDA*'),
(3539, 'More Advanced Search Techniques'),
(3539, 'Recursive Backtracking (The More Challenging Ones)'),
(3540, 'DP + bitmask'),
(3540, 'DP level 4'),
(3540, 'More Advanced DP Techniques'),
(3540, 'More Advanced Dynamic Programming'),
(3553, 'On Weighted Graph: Dijkstra''s, Easier'),
(3553, 'Single-Source Shortest Paths (SSSP)'),
(3562, 'Rare Algorithms'),
(3562, 'Sliding Window'),
(3565, 'Getting Started: The Easy Problems'),
(3565, 'Super Easy'),
(3589, 'On Unweighted Graph: BFS, Easier'),
(3589, 'Single-Source Shortest Paths (SSSP)'),
(3613, 'DP level 2'),
(3613, 'More Advanced DP Techniques'),
(3625, 'Bipartite Graph'),
(3625, 'Min Path Cover on DAG'),
(3625, 'Rare Problems'),
(3625, 'Special Graphs (Others)'),
(3633, 'Standard'),
(3633, 'String Processing with Dynamic Programming'),
(3634, 'Classical, Usually Easier'),
(3634, 'Greedy'),
(3634, 'Standard'),
(3635, 'Bipartite Graph'),
(3635, 'Special Graphs (Others)'),
(3636, 'Binary Search'),
(3636, 'Divide and Conquer'),
(3636, 'Problem Decomposition'),
(3636, 'Two Components - Involving Mathematics'),
(3637, 'Dynamic Programming'),
(3637, 'Longest Increasing Subsequence (LIS)'),
(3638, 'Flood Fill/Finding Connected Components'),
(3638, 'Graph Traversal'),
(3639, 'All-Pairs Shortest Paths'),
(3639, 'Standard'),
(3640, 'Problem Decomposition'),
(3640, 'Two Components - Binary Search the Answer and Other'),
(3641, 'Ad Hoc String Processing Problems'),
(3641, 'Ad Hoc String Processing Problems - Part 1'),
(3641, 'Input Parsing (Non Recursive)'),
(3641, 'Just Ad Hoc'),
(3642, 'Bipartite Graph'),
(3642, 'Min Path Cover on DAG'),
(3642, 'Rare Problems'),
(3642, 'Special Graphs (Others)'),
(3643, 'On Weighted Graph: Dijkstra''s'),
(3643, 'On Weighted Graph: Dijkstra''s, Harder'),
(3643, 'Single-Source Shortest Paths (SSSP)'),
(3644, 'C++ STL priority_queue (Java PriorityQueue)'),
(3644, 'Non Linear Data Structures with Built-in Libraries'),
(3645, 'DP + bitmask'),
(3645, 'More Advanced Dynamic Programming'),
(3646, 'Graph Traversal'),
(3646, 'Just Graph Traversal'),
(3647, 'Polygon'),
(3647, 'Standard'),
(3648, 'Classic'),
(3648, 'Standard'),
(3648, 'String Processing with Dynamic Programming'),
(3649, 'Minimum Spanning Tree'),
(3649, 'Standard'),
(3650, 'C++ STL algorithm (Java Collections)'),
(3650, 'Linear Data Structures with Built-in Libraries'),
(3651, 'Bonus Features: Primality Testing'),
(3651, 'Java BigInteger Class'),
(3652, 'DP level 2'),
(3652, 'More Advanced DP Techniques'),
(3652, 'More Advanced Dynamic Programming'),
(3652, 'The More Challenging Ones'),
(3653, 'Bipartite Graph'),
(3653, 'Special Graphs (Others)'),
(3654, '0-1 Knapsack (Subset Sum)'),
(3654, 'Dynamic Programming'),
(3655, 'More Advanced Dynamic Programming'),
(3655, 'The More Challenging Ones'),
(3656, 'Ad Hoc String Processing Problems'),
(3656, 'Just Ad Hoc'),
(3658, 'A*/IDA*'),
(3658, 'Meet in the Middle/A*/IDA*'),
(3658, 'More Advanced Search'),
(3658, 'More Advanced Search Techniques'),
(3659, 'Converting General Graph to DAG'),
(3659, 'Special Graph (Directed Acyclic Graph)'),
(3660, 'Ad Hoc String Processing Problems'),
(3660, 'Just Ad Hoc'),
(3661, 'DP level 4'),
(3661, 'More Advanced DP Techniques'),
(3661, 'More Advanced Dynamic Programming'),
(3661, 'The More Challenging Ones'),
(3662, 'Problem Decomposition'),
(3662, 'Two Components - Binary Search the Answer and Other'),
(3663, 'DP level 4'),
(3663, 'More Advanced DP Techniques'),
(3663, 'More Advanced Dynamic Programming'),
(3663, 'The More Challenging Ones'),
(3664, 'Standard'),
(3664, 'Suffix Trie, Tree, Array'),
(3665, 'Combinatorics'),
(3665, 'Other Combinatorics'),
(3665, 'Other, Harder'),
(3666, 'Ad Hoc Mathematics Problems'),
(3666, 'Ad Hoc Problems - Part 2'),
(3666, 'Just Ad Hoc'),
(3666, 'Mathematical Simulation (Brute Force), easier'),
(3667, 'Basic Features'),
(3667, 'Java BigInteger Class'),
(3668, 'Standard'),
(3668, 'Suffix Trie, Tree, Array'),
(3669, 'More Advanced Dynamic Programming'),
(3669, 'The More Challenging Ones'),
(3670, 'Finding Strongly Connected Components'),
(3670, 'Graph Traversal'),
(3671, 'Bonus Features'),
(3671, 'Bonus Features: Others'),
(3671, 'Java BigInteger Class'),
(3672, 'DP level 3'),
(3672, 'More Advanced DP Techniques'),
(3672, 'More Advanced Dynamic Programming'),
(3672, 'The More Challenging Ones'),
(3673, 'Data Structures with Our-Own Libraries'),
(3673, 'Tree-related Data Structures'),
(3674, 'All-Pairs Shortest Paths'),
(3674, 'Standard'),
(3676, 'Minimum Spanning Tree'),
(3676, 'Standard'),
(3677, 'More Advanced Dynamic Programming'),
(3677, 'The More Challenging Ones'),
(3678, 'Complete Search'),
(3678, 'Iterative (One Loop, Linear Scan)'),
(3678, 'Iterative (The Easier Ones)'),
(3679, 'DP level 3'),
(3679, 'More Advanced DP Techniques'),
(3679, 'More Advanced Dynamic Programming'),
(3679, 'The More Challenging Ones'),
(3680, 'Ad Hoc String Processing Problems'),
(3680, 'Just Ad Hoc'),
(3681, 'DP level 3'),
(3681, 'More Advanced DP Techniques'),
(3681, 'More Advanced Dynamic Programming'),
(3681, 'The More Challenging Ones'),
(3682, 'Ad Hoc Problems - Part 2'),
(3682, 'Bit Manipulation'),
(3682, 'Just Ad Hoc'),
(3682, 'Linear Data Structures with Built-in Libraries'),
(3683, 'Independent and Edge Disjoint Paths'),
(3683, 'Rare Problems'),
(3684, 'Problem Decomposition'),
(3684, 'Two Components - Involving Graph'),
(3685, 'DP level 3'),
(3685, 'More Advanced DP Techniques'),
(3685, 'More Advanced Dynamic Programming'),
(3685, 'The More Challenging Ones'),
(3686, 'More Advanced Dynamic Programming'),
(3686, 'The More Challenging Ones'),
(3687, 'Functions involving Prime Factors'),
(3687, 'Number Theory'),
(3688, 'All-Pairs Shortest Paths'),
(3688, 'Standard'),
(3689, 'More Advanced Dynamic Programming'),
(3689, 'The More Challenging Ones'),
(3690, 'Basic Geometry'),
(3690, 'Points and Lines'),
(3691, 'Problem Decomposition'),
(3691, 'Three Components'),
(3691, 'Two Components - Involving Graph'),
(3692, 'More Advanced Search Techniques'),
(3692, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(3692, 'On Unweighted Graph: BFS'),
(3692, 'Single-Source Shortest Paths (SSSP)'),
(3693, 'DP + bitmask'),
(3693, 'DP level 4'),
(3693, 'More Advanced DP Techniques'),
(3693, 'More Advanced Dynamic Programming'),
(3694, 'More Advanced Search Techniques'),
(3694, 'More Challenging State-Space Search with BFS or Dijkstra''s'),
(3694, 'On Unweighted Graph: BFS'),
(3694, 'Single-Source Shortest Paths (SSSP)'),
(3695, 'Standard'),
(3695, 'Suffix Trie, Tree, Array'),
(3696, 'More Advanced Dynamic Programming'),
(3696, 'The More Challenging Ones'),
(3697, 'Ad Hoc Mathematics Problems'),
(3697, 'Number Systems or Sequences'),
(3701, 'Complete Search'),
(3701, 'Iterative (The Easier Ones)'),
(3701, 'Iterative (Two Nested Loops)'),
(3702, 'Complete Search'),
(3702, 'Recursive Backtracking (The Easier Ones)'),
(3703, 'Complete Search'),
(3703, 'Recursive Backtracking (Harder)'),
(3703, 'Recursive Backtracking (The More Challenging Ones)'),
(3704, 'Problem Decomposition'),
(3704, 'Two Components - Involving Graph'),
(3705, 'Combinatorics'),
(3705, 'Other Combinatorics'),
(3707, 'Magic Square Construction (odd size)'),
(3707, 'Rare Problems'),
(3710, 'Getting Started: The Easy Problems'),
(3710, 'Super Easy'),
(3711, 'Ad Hoc Mathematics Problems'),
(3711, 'Mathematical Simulation (Brute Force), easier'),
(3712, '2D Array Manipulation'),
(3712, 'Linear Data Structures with Built-in Libraries'),
(3740, 'Problem Decomposition'),
(3740, 'Two Components - Mixed with Efficient Data Structure'),
(3743, 'Classical, Usually Easier'),
(3743, 'Greedy'),
(3746, 'DP level 2'),
(3746, 'More Advanced DP Techniques'),
(3764, 'Ad Hoc Problems - Part 1'),
(3764, 'Interesting Real Life Problems, Harder'),
(3768, 'Complete Search'),
(3768, 'Iterative (Fancy Techniques)'),
(3770, 'Complete Search'),
(3770, 'Iterative (Fancy Techniques)'),
(3778, '1D Array Manipulation'),
(3778, 'Linear Data Structures with Built-in Libraries'),
(3794, 'Getting Started: The Easy Problems'),
(3794, 'Super Easy'),
(3828, 'Rare Problems'),
(3828, 'Roman Numerals'),
(3829, '2D Array Manipulation'),
(3829, 'Linear Data Structures with Built-in Libraries'),
(3834, 'Getting Started: The Easy Problems'),
(3834, 'Super Easy'),
(3836, 'Classical, Usually Easier'),
(3836, 'Greedy'),
(3837, 'Complete Search'),
(3837, 'Iterative (Fancy Techniques)'),
(3886, 'Complete Search'),
(3886, 'Iterative (Fancy Techniques)'),
(3891, 'Problem Decomposition'),
(3891, 'Two Components - Mixed with Efficient Data Structure'),
(3906, 'Combinatorics'),
(3906, 'Others, Easier'),
(3914, 'Matrix Power'),
(3914, 'Rare Algorithms'),
(3922, 'Getting Started: The Easy Problems'),
(3922, 'Medium'),
(3926, 'Greedy'),
(3926, 'Non Classical, Usually Harder'),
(3929, 'Greedy'),
(3929, 'Involving Sorting (Or The Input Is Already Sorted)'),
(3932, 'Complete Search'),
(3932, 'Iterative (Two Nested Loops)'),
(3942, 'Complete Search'),
(3942, 'Iterative (Three or More Nested Loops, Easier)'),
(3948, 'C++ STL map (Java TreeMap)'),
(3948, 'Non Linear Data Structures with Built-in Libraries'),
(3960, 'Complete Search'),
(3960, 'Iterative (Three or More Nested Loops, Easier)'),
(3972, 'Ad Hoc Mathematics Problems'),
(3972, 'Mathematical Simulation (Brute Force), easier'),
(3987, 'Bonus Features: Primality Testing'),
(3987, 'Java BigInteger Class'),
(3988, 'Ad Hoc String Processing Problems - Part 1'),
(3988, 'Input Parsing (Non Recursive)'),
(4000, 'Ad Hoc Problems - Part 1'),
(4000, 'Interesting Real Life Problems, Easier'),
(4022, 'Getting Started: The Easy Problems'),
(4022, 'Super Easy'),
(4028, 'Complete Search'),
(4028, 'Iterative (Two Nested Loops)'),
(4093, 'Bitonic TSP'),
(4093, 'Rare Problems'),
(4134, 'Basic Geometry - Part 2'),
(4134, 'Circles (only)'),
(4270, 'C++ STL map (Java TreeMap)'),
(4270, 'Non Linear Data Structures with Built-in Libraries');
INSERT INTO `uva_problem_category` (`problem_number`, `category`) VALUES
(4286, '''Time Waster'' Problems'),
(4286, 'Ad Hoc Problems - Part 2');

-- --------------------------------------------------------

--
-- Table structure for table `uva_solve`
--

CREATE TABLE `uva_solve` (
  `problem_number` int(11) NOT NULL,
  `judge_code_id` int(11) NOT NULL,
  `uva_judge_id` int(11) NOT NULL,
  `timestamp` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `uva_solve`
--

INSERT INTO `uva_solve` (`problem_number`, `judge_code_id`, `uva_judge_id`, `timestamp`) VALUES
(36, 1, 11541754, 1364831098),
(36, 4, 12018613, 1373263621),
(36, 7, 10338182, 1342371959),
(36, 8, 12709238, 1385051291),
(36, 13, 14041905, 1408048657),
(38, 7, 10031340, 1335285738),
(38, 8, 12975335, 1389799939),
(43, 7, 15116766, 1426001436),
(44, 4, 14773337, 1420629949),
(44, 7, 10775059, 1350898593),
(44, 13, 13434973, 1396455350),
(47, 7, 11099029, 1357155581),
(49, 1, 11645562, 1366556610),
(49, 4, 12388400, 1379949856),
(49, 7, 9987679, 1334322260),
(49, 8, 11663318, 1366822856),
(52, 1, 14040737, 1408031279),
(52, 7, 12484982, 1381523320),
(52, 13, 14018697, 1407703274),
(54, 7, 10677514, 1349185203),
(55, 1, 12775780, 1386020813),
(55, 4, 12778110, 1386064311),
(55, 8, 12772101, 1385984834),
(56, 8, 13794919, 1403758891),
(57, 7, 16541715, 1449334496),
(60, 1, 12724600, 1385316027),
(60, 4, 13233810, 1393588505),
(60, 8, 13065825, 1391237582),
(60, 13, 13047251, 1390924456),
(69, 7, 14654609, 1418234748),
(72, 1, 11905242, 1371308019),
(72, 4, 12378433, 1379750577),
(72, 7, 9997959, 1334589612),
(72, 8, 12631162, 1383725246),
(72, 13, 12298716, 1378367683),
(74, 7, 10045381, 1335551337),
(74, 8, 12591099, 1383150201),
(79, 7, 16540784, 1449323244),
(82, 1, 12349742, 1379276597),
(82, 7, 10429977, 1344043791),
(82, 8, 12353612, 1379342459),
(83, 1, 12385265, 1379885164),
(83, 4, 13338664, 1395050008),
(83, 7, 10521545, 1345916637),
(83, 8, 12412158, 1380352468),
(83, 13, 13515123, 1397821712),
(87, 7, 10512846, 1345730341),
(88, 1, 13948158, 1406371507),
(88, 7, 16464798, 1448028381),
(92, 7, 10716118, 1349944182),
(96, 1, 12283225, 1378069240),
(96, 4, 12496686, 1381693860),
(96, 7, 10309442, 1341817675),
(96, 8, 12311591, 1378577310),
(96, 13, 13337388, 1395029536),
(100, 7, 13648518, 1400394927),
(102, 1, 13565156, 1398803491),
(102, 4, 13511905, 1397758164),
(103, 1, 12704493, 1384969068),
(103, 4, 13429207, 1396384452),
(103, 7, 11249911, 1360097854),
(103, 8, 12662477, 1384238365),
(103, 13, 13131202, 1392238377),
(122, 7, 10838713, 1351977808),
(126, 7, 16524197, 1449054668),
(127, 1, 13957888, 1406547565),
(127, 4, 15095307, 1425677141),
(127, 7, 16542234, 1449341363),
(131, 1, 12907028, 1388348433),
(131, 4, 13136979, 1392320387),
(131, 7, 13127853, 1392197549),
(131, 8, 13133170, 1392275660),
(131, 13, 13129043, 1392216369),
(136, 1, 12729066, 1385391685),
(136, 4, 13474275, 1397073069),
(136, 13, 13944554, 1406311785),
(152, 13, 14490068, 1415366132),
(167, 1, 13749500, 1402669119),
(167, 4, 14168567, 1410204096),
(167, 7, 10546924, 1346416094),
(167, 13, 13330511, 1394907793),
(183, 1, 12493875, 1381652429),
(183, 4, 14213995, 1410892565),
(183, 8, 12751875, 1385690220),
(183, 13, 13696274, 1401437467),
(192, 1, 12252599, 1377463116),
(192, 7, 10010588, 1334859652),
(192, 8, 12278804, 1377976592),
(192, 13, 13058517, 1391106907),
(195, 1, 14367500, 1413551364),
(195, 13, 14367018, 1413546256),
(196, 1, 11978706, 1372568173),
(196, 4, 12655087, 1384115159),
(196, 7, 10421252, 1343887575),
(196, 8, 12370360, 1379612589),
(196, 13, 12409189, 1380296559),
(199, 7, 10512141, 1345713912),
(200, 7, 10248334, 1340370512),
(208, 1, 11590548, 1365667920),
(208, 4, 12424308, 1380560645),
(208, 7, 9931875, 1333101000),
(208, 8, 11743310, 1368210915),
(208, 13, 12320194, 1378733673),
(214, 1, 12697829, 1384860485),
(214, 8, 12049708, 1373917368),
(216, 1, 12417906, 1380451624),
(216, 7, 10586632, 1347287491),
(227, 7, 12470526, 1381291607),
(230, 1, 12273504, 1377882059),
(230, 4, 12750686, 1385669626),
(230, 7, 10513316, 1345738250),
(230, 8, 12329869, 1378903748),
(230, 13, 12258304, 1377576340),
(233, 7, 13802293, 1403890269),
(233, 13, 13819018, 1404238462),
(235, 1, 11676058, 1367087646),
(235, 4, 12603170, 1383332517),
(235, 7, 9972822, 1333966558),
(235, 8, 11689417, 1367345249),
(235, 13, 12363539, 1379511763),
(237, 1, 13182400, 1392932404),
(241, 7, 10520513, 1345898160),
(242, 7, 11092967, 1356955873),
(260, 1, 12026461, 1373399582),
(260, 4, 12634472, 1383766598),
(260, 7, 10759667, 1350638705),
(260, 8, 12043457, 1373698350),
(272, 1, 12260799, 1377619995),
(272, 4, 12719768, 1385228399),
(272, 7, 10557770, 1346664033),
(272, 8, 12420331, 1380484195),
(272, 13, 12624262, 1383623132),
(277, 1, 12927874, 1388834373),
(277, 7, 10600753, 1347607217),
(277, 8, 12999621, 1390268795),
(277, 13, 12961566, 1389545123),
(284, 7, 12586708, 1383084779),
(286, 1, 12402860, 1380201249),
(286, 7, 10335153, 1342294932),
(286, 8, 12588287, 1383117548),
(288, 1, 11977102, 1372527841),
(288, 4, 12654758, 1384109482),
(288, 7, 10365877, 1342848511),
(288, 8, 11977338, 1372531943),
(288, 13, 12436019, 1380734467),
(289, 4, 13414721, 1396132063),
(289, 8, 13405820, 1396001570),
(289, 13, 13401422, 1395936148),
(291, 1, 12492133, 1381618004),
(291, 7, 12465654, 1381216189),
(291, 8, 12542255, 1382458901),
(293, 1, 12385124, 1379882228),
(293, 4, 13338320, 1395045774),
(293, 7, 10521589, 1345917326),
(293, 8, 12417262, 1380439591),
(293, 13, 13515371, 1397825721),
(305, 1, 11936296, 1371846700),
(305, 4, 12579416, 1382980812),
(305, 7, 10243259, 1340221519),
(305, 8, 11944806, 1372003535),
(305, 13, 14756430, 1420258902),
(307, 1, 14594518, 1417114199),
(307, 7, 9991743, 1334412456),
(307, 8, 12062111, 1374101677),
(307, 13, 12907163, 1388351382),
(310, 1, 11978800, 1372569998),
(310, 4, 12730910, 1385416265),
(310, 7, 10224982, 1339704312),
(310, 8, 11977279, 1372530850),
(310, 13, 12368046, 1379583613),
(311, 7, 16525794, 1449070657),
(314, 7, 16542561, 1449347834),
(314, 13, 14278713, 1411926245),
(318, 1, 14491561, 1415381664),
(318, 4, 12572531, 1382893769),
(318, 7, 9999183, 1334614936),
(318, 8, 11980781, 1372605936),
(318, 13, 12427299, 1380606451),
(319, 1, 12331053, 1378921478),
(319, 4, 13473968, 1397067475),
(319, 7, 10552684, 1346532070),
(319, 8, 12565709, 1382798491),
(319, 13, 12894924, 1388068949),
(322, 1, 12218137, 1376815943),
(322, 7, 9922680, 1332929701),
(322, 8, 12221756, 1376882588),
(322, 13, 12406855, 1380265231),
(324, 1, 12899217, 1388161109),
(324, 13, 12899191, 1388160667),
(325, 1, 12544805, 1382511235),
(325, 7, 14772567, 1420616465),
(325, 8, 12544837, 1382511835),
(328, 1, 12965127, 1389616357),
(328, 13, 12913571, 1388508982),
(330, 1, 12554471, 1382634358),
(341, 1, 12355010, 1379361183),
(341, 8, 12819959, 1386672720),
(342, 1, 12447076, 1380908894),
(342, 7, 16764223, 1453899315),
(342, 8, 12453295, 1381000555),
(342, 13, 12915583, 1388580044),
(347, 1, 12278601, 1377972661),
(347, 4, 12717503, 1385198684),
(347, 7, 10016935, 1334989552),
(347, 8, 12328724, 1378886761),
(349, 1, 12700389, 1384894621),
(349, 4, 12700252, 1384891903),
(349, 7, 10167487, 1338288733),
(349, 8, 12703586, 1384958747),
(350, 1, 12999056, 1390249015),
(350, 13, 13062910, 1391184467),
(353, 1, 13840562, 1404645956),
(353, 4, 12694903, 1384797721),
(353, 7, 10179108, 1338553865),
(353, 8, 12731510, 1385431423),
(353, 13, 12325494, 1378822137),
(355, 1, 12767024, 1385914189),
(355, 7, 10513893, 1345750464),
(355, 8, 12358695, 1379432461),
(358, 1, 12296532, 1378321714),
(358, 7, 10551728, 1346512342),
(364, 1, 12958666, 1389479000),
(364, 7, 10738972, 1350312929),
(364, 8, 13174159, 1392822110),
(365, 1, 12514313, 1381986083),
(365, 4, 15146732, 1426368545),
(365, 7, 9971229, 1333916538),
(365, 8, 12595584, 1383223599),
(365, 13, 12238722, 1377198720),
(370, 1, 12326924, 1378846998),
(370, 7, 10717607, 1349965631),
(370, 8, 12441269, 1380814843),
(370, 13, 12625548, 1383643074),
(378, 7, 11139864, 1358271295),
(379, 1, 12218343, 1376818949),
(379, 7, 10058934, 1335819398),
(379, 8, 12221573, 1376879844),
(380, 1, 12268346, 1377765481),
(380, 7, 10386559, 1343237237),
(380, 8, 12434583, 1380717021),
(380, 13, 12950048, 1389285163),
(381, 7, 10512862, 1345730681),
(382, 1, 12614876, 1383497694),
(382, 4, 12751205, 1385676491),
(382, 7, 10771981, 1350838337),
(382, 8, 12662630, 1384240723),
(382, 13, 13035895, 1390756812),
(383, 1, 12349218, 1379268734),
(384, 7, 10167489, 1338288792),
(385, 7, 11093101, 1356959979),
(386, 1, 11815796, 1369500664),
(386, 8, 11907964, 1371357953),
(386, 13, 12404912, 1380228496),
(387, 1, 12544553, 1382506588),
(387, 7, 10167491, 1338288859),
(387, 8, 12552382, 1382607162),
(387, 13, 12411747, 1380344202),
(393, 1, 12599546, 1383285445),
(393, 13, 13643956, 1400266510),
(396, 1, 13340545, 1395068983),
(396, 7, 10615329, 1347899624),
(396, 8, 13267705, 1394023571),
(399, 1, 11496656, 1364066373),
(399, 4, 12388395, 1379949802),
(399, 7, 9902011, 1332554426),
(399, 8, 12374476, 1379681620),
(399, 13, 12251700, 1377449291),
(400, 1, 12478825, 1381418624),
(400, 4, 12704939, 1384975449),
(400, 7, 10426621, 1343988611),
(400, 8, 12578504, 1382973345),
(400, 13, 12648431, 1384010603),
(401, 7, 10328729, 1342188995),
(406, 7, 10538331, 1346244976),
(406, 13, 13008138, 1390410664),
(409, 7, 11093616, 1356972726),
(410, 1, 12371038, 1379622515),
(410, 4, 12865004, 1387401646),
(410, 7, 10367415, 1342886434),
(410, 8, 12371110, 1379623836),
(410, 13, 12362331, 1379495547),
(417, 1, 13432078, 1396430256),
(417, 7, 10382148, 1343156287),
(417, 8, 13426736, 1396354255),
(418, 7, 10364292, 1342811679),
(422, 1, 13169213, 1392751568),
(422, 4, 14165737, 1410155416),
(422, 7, 10546883, 1346414865),
(422, 8, 13247365, 1393759641),
(422, 13, 13196272, 1393140741),
(423, 1, 12827038, 1386781309),
(423, 7, 10233968, 1339961336),
(424, 1, 11519687, 1364448529),
(424, 4, 12569106, 1382858878),
(424, 7, 9981506, 1334179877),
(424, 8, 11616679, 1366124641),
(424, 13, 12984581, 1389969106),
(425, 1, 12296620, 1378323337),
(425, 7, 10516960, 1345820410),
(425, 8, 12360044, 1379451697),
(429, 1, 11654525, 1366700373),
(429, 4, 12418510, 1380462053),
(429, 7, 9936271, 1333174822),
(429, 8, 11986825, 1372705208),
(429, 13, 12281945, 1378045911),
(430, 1, 12223814, 1376922179),
(430, 7, 11114341, 1357611867),
(430, 13, 14468134, 1414941930),
(431, 7, 10046760, 1335588381),
(433, 1, 12336598, 1379017138),
(433, 4, 12571860, 1382887908),
(433, 7, 12907618, 1388365608),
(435, 1, 11578455, 1365492830),
(435, 4, 12418358, 1380460122),
(435, 7, 9893160, 1332360362),
(435, 8, 11577918, 1365484395),
(436, 1, 11684395, 1367251938),
(436, 4, 12639492, 1383846265),
(436, 7, 10086855, 1336421664),
(436, 8, 12316369, 1378664365),
(436, 13, 12394485, 1380049915),
(437, 1, 12656312, 1384146380),
(437, 8, 12714120, 1385136435),
(437, 13, 12654071, 1384099692),
(438, 1, 13165561, 1392713216),
(438, 4, 14166133, 1410162597),
(438, 7, 10546979, 1346417451),
(438, 8, 13247488, 1393760804),
(439, 1, 13169028, 1392749215),
(440, 4, 12704437, 1384968227),
(448, 1, 13249684, 1393785984),
(448, 7, 11100544, 1357206369),
(448, 8, 13451572, 1396716489),
(448, 13, 13437245, 1396499841),
(455, 1, 12384918, 1379877649),
(455, 7, 10835222, 1351922186),
(455, 8, 12979561, 1389878534),
(465, 1, 12723387, 1385299273),
(465, 4, 12997892, 1390230601),
(465, 8, 13001932, 1390309289),
(465, 13, 13036320, 1390763679),
(467, 1, 14182675, 1410426869),
(467, 7, 13638284, 1400153360),
(471, 1, 11936552, 1371850759),
(471, 4, 12690729, 1384715867),
(471, 7, 10252750, 1340487385),
(471, 8, 11944920, 1372004970),
(471, 13, 12255141, 1377517301),
(472, 1, 13393842, 1395845755),
(472, 4, 13680786, 1401091363),
(472, 7, 10765225, 1350729188),
(472, 8, 13327944, 1394877088),
(472, 13, 13682911, 1401131737),
(473, 1, 12424032, 1380557268),
(473, 4, 12935366, 1388987398),
(473, 7, 10672357, 1349067103),
(473, 8, 12614964, 1383498711),
(473, 13, 13035058, 1390746942),
(475, 1, 12502536, 1381782810),
(475, 7, 10889211, 1352982962),
(475, 8, 12688278, 1384675577),
(475, 13, 12923474, 1388752599),
(478, 4, 12522493, 1382122763),
(478, 7, 10555972, 1346612182),
(478, 8, 12982757, 1389939918),
(478, 13, 12336504, 1379015940),
(480, 1, 13292817, 1394379394),
(480, 4, 13292991, 1394381109),
(481, 7, 10642657, 1348412580),
(481, 13, 16143668, 1442907900),
(482, 1, 13212120, 1393335752),
(482, 7, 10167493, 1338288922),
(482, 13, 12410117, 1380310595),
(483, 1, 14375732, 1413664179),
(483, 4, 14214763, 1410903545),
(483, 7, 12914025, 1388524114),
(483, 13, 14226229, 1411069341),
(484, 1, 12061406, 1374086648),
(484, 4, 12484255, 1381513180),
(484, 7, 10028296, 1335221474),
(484, 8, 12319054, 1378717197),
(484, 13, 12402467, 1380196949),
(485, 1, 12504918, 1381827717),
(485, 7, 10752462, 1350542879),
(485, 8, 12637793, 1383825304),
(485, 13, 12798308, 1386347998),
(489, 7, 14665819, 1418409619),
(496, 1, 12260300, 1377613305),
(498, 7, 12903835, 1388271522),
(499, 1, 12752982, 1385707543),
(499, 7, 10847355, 1352142574),
(499, 13, 13876162, 1405258626),
(503, 1, 12389856, 1379970327),
(503, 4, 13512815, 1397781229),
(503, 7, 10911597, 1353414402),
(503, 8, 13513240, 1397791281),
(503, 13, 13564372, 1398790211),
(504, 7, 14654381, 1418232037),
(504, 13, 16026910, 1441082812),
(508, 1, 12263428, 1377674776),
(508, 4, 13168795, 1392746206),
(508, 7, 13353766, 1395256803),
(508, 8, 12422605, 1380532430),
(508, 13, 12863771, 1387384835),
(509, 1, 12026535, 1373401449),
(509, 4, 12634508, 1383767462),
(509, 7, 10322664, 1342074888),
(509, 8, 12045908, 1373725429),
(512, 1, 13040409, 1390827399),
(513, 1, 11976499, 1372518404),
(513, 4, 12654619, 1384107488),
(513, 7, 10354428, 1342649918),
(513, 8, 11977158, 1372528851),
(513, 13, 12348653, 1379258393),
(514, 1, 11595025, 1365747645),
(514, 7, 10167471, 1338288132),
(514, 8, 11597396, 1365779150),
(515, 1, 13002340, 1390314262),
(515, 4, 13270636, 1394055069),
(515, 8, 13138259, 1392342961),
(515, 13, 13564180, 1398788220),
(516, 1, 11851109, 1370195296),
(516, 4, 12417165, 1380438023),
(516, 7, 9955994, 1333582971),
(516, 8, 11906328, 1371321484),
(516, 13, 12600094, 1383294625),
(520, 1, 12166517, 1375724848),
(520, 4, 12425733, 1380578185),
(520, 7, 9901896, 1332550588),
(520, 8, 12356369, 1379395894),
(520, 13, 12320356, 1378736142),
(521, 7, 14717718, 1419408509),
(524, 1, 12025775, 1373387712),
(524, 4, 12524693, 1382164800),
(524, 7, 14820930, 1421583570),
(524, 8, 12020122, 1373288199),
(524, 13, 12693730, 1384784137),
(528, 7, 16466269, 1448054081),
(528, 13, 12336855, 1379021731),
(532, 1, 11638623, 1366439914),
(532, 4, 12399471, 1380140358),
(532, 7, 9955898, 1333579133),
(532, 8, 11638805, 1366442747),
(532, 13, 13063024, 1391185679),
(535, 1, 12219897, 1376843160),
(535, 7, 10167496, 1338288982),
(535, 8, 12298875, 1378369511),
(545, 1, 13180218, 1392903709),
(545, 7, 13180697, 1392908574),
(545, 13, 13264902, 1393996020),
(551, 7, 11728462, 1367997423),
(553, 1, 12030607, 1373479122),
(553, 4, 14186046, 1410463582),
(553, 7, 10688490, 1349422794),
(553, 8, 12029820, 1373466584),
(556, 1, 12654958, 1384112617),
(556, 4, 14185822, 1410461118),
(556, 7, 10760021, 1350645669),
(556, 13, 13260923, 1393938002),
(557, 7, 12896678, 1388100739),
(558, 1, 12690580, 1384713450),
(562, 1, 12542112, 1382457237),
(562, 7, 10167501, 1338289058),
(562, 8, 12544666, 1382508518),
(564, 1, 12061001, 1374081227),
(564, 4, 14677457, 1418639365),
(564, 7, 10759533, 1350636791),
(564, 8, 12001234, 1372955226),
(564, 13, 12408138, 1380284352),
(565, 1, 13116113, 1392012455),
(565, 4, 13116793, 1392021683),
(565, 8, 12671102, 1384352070),
(565, 13, 13053718, 1391017081),
(568, 1, 12336143, 1379010504),
(568, 13, 12899493, 1388164789),
(569, 1, 12665035, 1384270561),
(569, 4, 13512208, 1397764091),
(569, 8, 12673880, 1384390797),
(569, 13, 13143729, 1392404559),
(581, 1, 12383048, 1379844994),
(581, 7, 10167504, 1338289128),
(581, 8, 12382897, 1379841578),
(581, 13, 15262314, 1428040831),
(598, 1, 12447807, 1380918256),
(598, 8, 12679187, 1384483979),
(598, 13, 12724004, 1385306748),
(604, 13, 14799196, 1421183549),
(611, 13, 14367468, 1413551060),
(614, 1, 12061827, 1374094410),
(614, 4, 12640237, 1383859389),
(614, 7, 14821007, 1421584759),
(614, 8, 12437457, 1380765059),
(614, 13, 12402988, 1380202819),
(615, 1, 12922607, 1388737435),
(615, 4, 13338212, 1395043717),
(615, 7, 10521643, 1345918258),
(615, 8, 13454905, 1396776612),
(615, 13, 13514932, 1397818608),
(620, 1, 12679556, 1384488116),
(620, 7, 10167507, 1338289191),
(620, 13, 16034122, 1441206878),
(622, 1, 14176228, 1410331329),
(627, 1, 12108045, 1374842660),
(627, 4, 12629101, 1383682911),
(627, 7, 10168891, 1338319411),
(627, 8, 12363520, 1379511450),
(635, 1, 11915244, 1371493616),
(635, 7, 9928977, 1333044060),
(635, 8, 11921243, 1371609700),
(635, 13, 12264890, 1377701868),
(637, 1, 11899319, 1371190473),
(637, 4, 13342340, 1395087715),
(637, 8, 11979085, 1372575874),
(640, 7, 10837604, 1351958795),
(641, 7, 11871579, 1370618866),
(643, 7, 12667700, 1384312094),
(643, 13, 14763825, 1420430477),
(654, 1, 12380028, 1379776096),
(654, 7, 10112169, 1336998146),
(654, 8, 12354068, 1379347598),
(660, 7, 13628827, 1399985010),
(663, 1, 12900208, 1388177999),
(663, 4, 12868350, 1387470700),
(663, 8, 12974922, 1389795145),
(663, 13, 12885363, 1387824559),
(666, 1, 12252145, 1377455803),
(666, 4, 13162449, 1392658258),
(666, 8, 14225239, 1411055203),
(666, 13, 12403929, 1380213743),
(668, 1, 12117052, 1374998101),
(668, 4, 13580017, 1399056871),
(668, 8, 13579683, 1399051117),
(668, 13, 13008372, 1390413137),
(670, 1, 12719564, 1385225508),
(670, 4, 13475510, 1397103563),
(670, 8, 13242699, 1393689422),
(680, 7, 10244847, 1340275057),
(691, 1, 12704877, 1384974661),
(691, 4, 13429123, 1396382113),
(691, 7, 11252973, 1360149121),
(691, 8, 12667567, 1384307986),
(691, 13, 13135191, 1392299726),
(694, 13, 14793764, 1421082825),
(696, 1, 12954149, 1389377744),
(696, 7, 11057752, 1356088811),
(696, 13, 12923516, 1388753248),
(699, 13, 12891703, 1387988865),
(701, 7, 13630851, 1400008326),
(703, 1, 12330544, 1378913312),
(703, 7, 10708395, 1349805257),
(703, 8, 12427331, 1380606847),
(703, 13, 12904532, 1388297451),
(704, 7, 14717408, 1419402092),
(716, 7, 11239937, 1359922796),
(717, 7, 10562302, 1346770908),
(717, 13, 12910172, 1388421401),
(723, 1, 12694189, 1384788444),
(725, 1, 12367735, 1379579704),
(725, 4, 12660366, 1384199443),
(725, 7, 10559310, 1346694553),
(725, 8, 12375399, 1379692255),
(725, 13, 12355933, 1379387500),
(726, 1, 12375012, 1379688244),
(726, 4, 12863871, 1387385969),
(726, 7, 10556352, 1346622252),
(726, 8, 12381897, 1379821466),
(726, 13, 12367709, 1379579483),
(728, 7, 13796028, 1403780398),
(734, 1, 12456660, 1381064962),
(734, 4, 13113772, 1391966276),
(734, 7, 10861790, 1352413279),
(734, 8, 12617490, 1383541183),
(734, 13, 12659631, 1384192626),
(737, 1, 14369077, 1413569888),
(737, 7, 11730885, 1368025834),
(737, 13, 14783716, 1420833267),
(761, 7, 13313585, 1394648228),
(761, 13, 15928564, 1439459940),
(762, 1, 12954393, 1389383151),
(762, 4, 13242934, 1393692254),
(762, 7, 10739174, 1350315003),
(762, 8, 13234387, 1393593852),
(762, 13, 12953974, 1389374406),
(766, 1, 13682924, 1401131894),
(766, 8, 12401962, 1380188180),
(766, 13, 13685753, 1401198295),
(774, 1, 13950315, 1406396816),
(774, 7, 16476243, 1448230656),
(775, 1, 11538316, 1364756811),
(775, 4, 12345453, 1379184476),
(775, 8, 11669759, 1366951848),
(775, 13, 12402591, 1380198234),
(777, 4, 14773500, 1420632449),
(777, 7, 11101942, 1357237979),
(778, 7, 16474352, 1448199924),
(780, 7, 13353759, 1395256720),
(787, 1, 12615492, 1383505263),
(787, 4, 12717741, 1385202478),
(787, 7, 10233935, 1339960230),
(787, 13, 12402552, 1380197854),
(788, 7, 10049013, 1335631680),
(793, 13, 14795883, 1421133012),
(810, 7, 11730839, 1368025429),
(812, 1, 12582604, 1383034564),
(812, 4, 12655435, 1384121930),
(812, 7, 10359219, 1342724632),
(812, 8, 12381843, 1379819900),
(812, 13, 12366730, 1379565628),
(813, 1, 12724664, 1385316966),
(813, 4, 13236416, 1393611512),
(813, 8, 13065772, 1391236496),
(813, 13, 13047459, 1390926866),
(821, 7, 10440053, 1344228686),
(825, 1, 12980975, 1389893438),
(825, 7, 10309617, 1341820384),
(825, 8, 13052135, 1391006836),
(825, 13, 13337523, 1395031849),
(836, 1, 12340554, 1379094811),
(836, 8, 12345289, 1379181709),
(838, 1, 12949936, 1389283703),
(841, 1, 12027966, 1373438518),
(841, 4, 12627768, 1383668069),
(841, 7, 10023532, 1335138032),
(841, 8, 12039656, 1373639225),
(841, 13, 12402537, 1380197689),
(843, 1, 13342054, 1395083659),
(843, 7, 11077936, 1356591765),
(843, 8, 13245090, 1393726728),
(843, 13, 13072496, 1391354719),
(849, 1, 12512409, 1381946831),
(849, 4, 12911173, 1388440771),
(849, 7, 10852142, 1352235310),
(849, 8, 13134891, 1392296218),
(849, 13, 12785630, 1386162206),
(854, 1, 11612379, 1366049467),
(854, 4, 12567186, 1382819144),
(854, 7, 9908739, 1332697201),
(854, 8, 11947329, 1372051283),
(854, 13, 12345039, 1379178082),
(855, 1, 13029063, 1390666205),
(855, 4, 12697193, 1384849485),
(855, 7, 13027410, 1390653165),
(855, 13, 13035068, 1390747057),
(861, 1, 12928489, 1388844159),
(861, 7, 16473751, 1448191903),
(865, 1, 12349727, 1379276278),
(865, 8, 12570198, 1382872756),
(865, 13, 12627436, 1383664651),
(867, 1, 13685647, 1401196815),
(867, 13, 13686719, 1401213083),
(868, 7, 15093215, 1425653353),
(869, 7, 10707169, 1349790224),
(870, 1, 12958426, 1389473253),
(870, 4, 13023294, 1390592011),
(870, 7, 10603193, 1347643518),
(870, 8, 12819785, 1386670019),
(870, 13, 12819023, 1386658516),
(882, 1, 13135343, 1392301510),
(882, 7, 12943829, 1389128365),
(889, 7, 14711469, 1419269397),
(901, 7, 15115443, 1425990270),
(903, 1, 13118836, 1392048990),
(903, 7, 15117620, 1426010883),
(908, 7, 11178210, 1359005335),
(915, 1, 12906450, 1388337483),
(915, 7, 14710144, 1419251642),
(915, 8, 12975287, 1389799487),
(915, 13, 12872019, 1387553920),
(917, 7, 13700509, 1401539712),
(924, 4, 14773612, 1420634655),
(924, 7, 11113112, 1357574054),
(930, 1, 13175243, 1392831769),
(930, 4, 13175172, 1392830977),
(930, 7, 13174533, 1392824595),
(930, 8, 13179504, 1392896851),
(930, 13, 13264926, 1393996355),
(931, 1, 13160009, 1392634913),
(931, 4, 13513629, 1397797879),
(931, 7, 12639576, 1383847591),
(931, 13, 13950397, 1406398405),
(932, 7, 10170681, 1338367890),
(934, 4, 14303274, 1412358757),
(934, 7, 14658409, 1418304452),
(941, 1, 15669873, 1435052064),
(941, 7, 11422665, 1363034275),
(944, 1, 13750151, 1402685986),
(944, 7, 12494291, 1381659144),
(944, 13, 13950083, 1406392952),
(945, 1, 12248183, 1377375745),
(945, 4, 12722269, 1385280434),
(945, 7, 10423085, 1343919518),
(945, 8, 12348568, 1379257292),
(945, 13, 12437944, 1380774741),
(946, 7, 16546771, 1449426938),
(947, 1, 12242805, 1377272273),
(947, 7, 14701682, 1419063550),
(947, 8, 12242782, 1377271804),
(948, 7, 15050300, 1425044271),
(949, 1, 12067319, 1374182540),
(949, 4, 12644736, 1383941527),
(949, 7, 10423519, 1343926833),
(949, 13, 12591806, 1383157328),
(950, 1, 12333401, 1378970053),
(950, 7, 10682336, 1349298227),
(950, 8, 12568753, 1382854052),
(950, 13, 12906421, 1388336716),
(951, 7, 12629767, 1383697264),
(951, 13, 12384214, 1379864763),
(954, 1, 11638489, 1366437885),
(954, 4, 12580476, 1382992330),
(954, 7, 10030339, 1335268930),
(959, 1, 11651566, 1366651345),
(959, 7, 10235271, 1340008492),
(959, 8, 12380189, 1379778663),
(959, 13, 12298525, 1378364442),
(960, 1, 11549654, 1365010037),
(960, 4, 12417258, 1380439544),
(960, 7, 10047223, 1335604814),
(960, 8, 11639594, 1366454097),
(966, 7, 10052580, 1335710432),
(966, 13, 14317658, 1412659563),
(967, 1, 12447072, 1380908851),
(967, 8, 12453407, 1381003179),
(973, 7, 12528718, 1382221535),
(973, 13, 15098977, 1425738938),
(975, 1, 12502070, 1381776547),
(975, 4, 12907476, 1388359941),
(975, 7, 10850425, 1352209419),
(975, 8, 12601207, 1383309576),
(975, 13, 12709640, 1385056331),
(976, 1, 11556392, 1365087928),
(976, 4, 12402189, 1380192762),
(976, 7, 9969573, 1333888388),
(976, 8, 11556411, 1365088160),
(976, 13, 12228359, 1377005641),
(977, 1, 14276277, 1411885368),
(977, 7, 12500081, 1381756459),
(977, 13, 14368055, 1413556965),
(979, 1, 11928039, 1371718439),
(979, 4, 12562026, 1382734281),
(979, 7, 10030846, 1335277039),
(979, 8, 12439546, 1380794995),
(982, 1, 12555184, 1382644145),
(982, 7, 10052747, 1335712833),
(982, 8, 12320544, 1378738478),
(982, 13, 12240153, 1377232785),
(983, 1, 13547203, 1398428643),
(985, 1, 12450574, 1380964436),
(985, 7, 10724112, 1350053779),
(985, 8, 12613636, 1383484474),
(985, 13, 12912367, 1388477761),
(989, 1, 12532720, 1382292488),
(989, 4, 13113761, 1391966171),
(989, 7, 12978399, 1389860302),
(989, 8, 12693950, 1384786282),
(989, 13, 12793239, 1386264544),
(990, 7, 15092072, 1425642123),
(990, 13, 15094235, 1425664064),
(991, 1, 11925631, 1371669131),
(991, 4, 12591367, 1383152720),
(991, 8, 11930630, 1371753515),
(991, 13, 12345226, 1379180771),
(996, 1, 11517180, 1364401049),
(996, 4, 11970775, 1372420296),
(996, 7, 9700150, 1328134103),
(996, 8, 11517177, 1364401037),
(996, 13, 13677353, 1401004581),
(997, 13, 14313914, 1412573627),
(1003, 1, 12224791, 1376938776),
(1003, 4, 13003704, 1390335051),
(1003, 7, 11140220, 1358278349),
(1003, 8, 12339001, 1379065671),
(1007, 1, 12365135, 1379533604),
(1007, 4, 13336130, 1394998848),
(1007, 7, 10763622, 1350698213),
(1007, 8, 12359518, 1379444117),
(1007, 13, 13156829, 1392573635),
(1008, 1, 12778008, 1386062682),
(1008, 4, 13475204, 1397096728),
(1008, 8, 12931891, 1388915350),
(1008, 13, 12919214, 1388669049),
(1010, 7, 13700890, 1401547092),
(1011, 1, 11578392, 1365491779),
(1011, 4, 12580218, 1382988946),
(1011, 7, 10170370, 1338362085),
(1011, 8, 12340355, 1379090721),
(1011, 13, 12255092, 1377516204),
(1012, 1, 11415397, 1362923309),
(1012, 4, 12018640, 1373264120),
(1012, 7, 9924637, 1332961815),
(1012, 8, 11532365, 1364651896),
(1012, 13, 12402472, 1380197009),
(1013, 7, 13097234, 1391725671),
(1015, 7, 11104986, 1357326475),
(1016, 7, 10740760, 1350335753),
(1018, 7, 10512378, 1345721075),
(1019, 7, 12620533, 1383576767),
(1020, 1, 11478076, 1363800915),
(1020, 4, 12407177, 1380271163),
(1020, 7, 9689654, 1327920670),
(1020, 8, 11541905, 1364832801),
(1020, 13, 12315447, 1378650895),
(1021, 1, 14090068, 1408910177),
(1021, 7, 11422658, 1363034222),
(1021, 13, 14094284, 1408986998),
(1023, 1, 11518527, 1364420117),
(1023, 4, 12399479, 1380140450),
(1023, 7, 10023237, 1335127571),
(1023, 8, 12379088, 1379759947),
(1023, 13, 12314631, 1378639588),
(1031, 7, 15029033, 1424712823),
(1033, 13, 16032897, 1441188200),
(1039, 1, 13130307, 1392227004),
(1039, 4, 13136907, 1392319323),
(1039, 7, 13131393, 1392241773),
(1039, 8, 13133147, 1392275469),
(1039, 13, 13128872, 1392214125),
(1040, 1, 12515539, 1382005260),
(1040, 4, 13050023, 1390979030),
(1040, 7, 12976186, 1389811801),
(1040, 8, 12651234, 1384064672),
(1040, 13, 12876982, 1387648690),
(1041, 1, 13123947, 1392131759),
(1041, 7, 10765722, 1350737036),
(1041, 8, 13331486, 1394933994),
(1041, 13, 13249833, 1393787762),
(1042, 7, 10540483, 1346281832),
(1042, 13, 13333204, 1394963180),
(1043, 1, 13941630, 1406271120),
(1043, 7, 10710602, 1349848805),
(1043, 13, 13992837, 1407221155),
(1045, 1, 12286007, 1378134135),
(1045, 7, 15028372, 1424704826),
(1045, 8, 12284981, 1378118006),
(1047, 1, 12766336, 1385906167),
(1047, 7, 10436516, 1344157554),
(1047, 13, 12342422, 1379136015),
(1048, 1, 12321859, 1378757270),
(1048, 4, 12628824, 1383679051),
(1048, 7, 10246635, 1340316206),
(1048, 8, 12326049, 1378830076),
(1051, 1, 11873638, 1370676746),
(1051, 4, 12407434, 1380275197),
(1051, 7, 9936457, 1333179169),
(1051, 8, 11876107, 1370724986),
(1051, 13, 12354130, 1379348389),
(1052, 7, 16249000, 1444563022),
(1056, 8, 13794920, 1403758901),
(1066, 1, 12447075, 1380908871),
(1066, 8, 13595835, 1399391607),
(1068, 1, 12719754, 1385228157),
(1068, 4, 12713286, 1385127092),
(1068, 7, 10051852, 1335696629),
(1068, 8, 12776509, 1386039034),
(1068, 13, 12306856, 1378490986),
(1070, 7, 16314897, 1445583952),
(1071, 1, 12386789, 1379923172),
(1071, 4, 13522805, 1397980428),
(1071, 7, 10947130, 1354022756),
(1071, 8, 13453761, 1396759434),
(1071, 13, 14989634, 1424073248),
(1072, 1, 13748256, 1402642016),
(1072, 4, 14169016, 1410210569),
(1072, 7, 11094128, 1356989092),
(1072, 8, 13259613, 1393925273),
(1077, 7, 16561333, 1449682232),
(1078, 1, 12807073, 1386490105),
(1079, 1, 12311661, 1378578373),
(1080, 7, 12603403, 1383335834),
(1081, 4, 14677599, 1418641459),
(1081, 13, 14793199, 1421072959),
(1088, 1, 12517640, 1382033759),
(1088, 7, 12981610, 1389906392),
(1088, 8, 12638627, 1383835597),
(1088, 13, 12879648, 1387715109),
(1090, 7, 14708448, 1419204805),
(1091, 1, 12549333, 1382557605),
(1093, 7, 10835062, 1351919072),
(1093, 8, 13593658, 1399365463),
(1099, 13, 16203056, 1443877574),
(1102, 1, 12766215, 1385905015),
(1102, 7, 11341909, 1361817849),
(1102, 8, 12770644, 1385966277),
(1102, 13, 13255630, 1393872149),
(1103, 1, 12911399, 1388448629),
(1103, 7, 10434833, 1344105680),
(1103, 8, 12951459, 1389326034),
(1103, 13, 12321739, 1378755074),
(1106, 7, 16235586, 1444375749),
(1106, 13, 16964275, 1457323877),
(1109, 1, 12351684, 1379315436),
(1109, 4, 13314085, 1394656272),
(1109, 13, 12333620, 1378974117),
(1111, 1, 12233893, 1377113496),
(1111, 4, 13475420, 1397102064),
(1111, 7, 10105455, 1336826300),
(1111, 8, 12254893, 1377512438),
(1111, 13, 12409672, 1380305012),
(1112, 1, 12961782, 1389548991),
(1112, 4, 13233701, 1393587735),
(1112, 7, 10752119, 1350536384),
(1112, 8, 13231809, 1393557541),
(1112, 13, 12980038, 1389884329),
(1117, 7, 14672669, 1418551696),
(1119, 7, 10698050, 1349606293),
(1120, 1, 12857880, 1387289932),
(1120, 4, 13228403, 1393513993),
(1120, 7, 12983915, 1389960324),
(1120, 8, 13098365, 1391747922),
(1120, 13, 12697034, 1384846482),
(1121, 7, 16561120, 1449678488),
(1123, 7, 15118052, 1426015691),
(1124, 7, 11156048, 1358618261),
(1128, 7, 12997855, 1390230210),
(1130, 1, 12170092, 1375787759),
(1130, 7, 10034056, 1335353959),
(1130, 8, 12228613, 1377010601),
(1130, 13, 12383589, 1379855848),
(1131, 1, 12840247, 1387005402),
(1131, 4, 12844389, 1387064042),
(1131, 7, 9917961, 1332859994),
(1131, 8, 12972475, 1389756342),
(1131, 13, 12867951, 1387464730),
(1133, 1, 13123518, 1392126946),
(1133, 4, 13335912, 1394994039),
(1133, 7, 10763447, 1350695282),
(1133, 8, 12359842, 1379448863),
(1133, 13, 13160910, 1392644032),
(1134, 1, 12285273, 1378123381),
(1134, 4, 12705440, 1384984195),
(1134, 7, 10446536, 1344355757),
(1134, 8, 12284676, 1378110882),
(1134, 13, 12344854, 1379174581),
(1135, 1, 12357694, 1379418988),
(1135, 7, 11087265, 1356796379),
(1136, 1, 12215299, 1376759072),
(1136, 7, 10051458, 1335689536),
(1136, 8, 12222867, 1376905236),
(1136, 13, 12404510, 1380221943),
(1141, 1, 12775460, 1386015724),
(1141, 7, 10316911, 1341965407),
(1141, 13, 12771058, 1385971896),
(1150, 7, 16544936, 1449402201),
(1150, 13, 14266688, 1411713628),
(1151, 7, 10106007, 1336837605),
(1153, 1, 12930298, 1388873942),
(1153, 4, 12936522, 1389005920),
(1153, 7, 10695947, 1349555527),
(1153, 8, 12951427, 1389324473),
(1160, 1, 12345122, 1379179250),
(1160, 4, 12693879, 1384785594),
(1160, 7, 12479762, 1381435178),
(1160, 8, 12693116, 1384777329),
(1161, 1, 11987340, 1372715510),
(1161, 4, 12639079, 1383840074),
(1161, 7, 10759546, 1350637031),
(1161, 8, 12001564, 1372961285),
(1161, 13, 12408157, 1380284622),
(1162, 1, 12172069, 1375819831),
(1162, 4, 12597068, 1383238343),
(1162, 7, 10049573, 1335641179),
(1162, 8, 12378850, 1379756018),
(1162, 13, 12303834, 1378452267),
(1163, 1, 11972753, 1372447796),
(1163, 7, 10073159, 1336119350),
(1163, 8, 12015282, 1373206237),
(1163, 13, 12393407, 1380036269),
(1164, 4, 14906532, 1422828231),
(1164, 7, 10167523, 1338289559),
(1164, 13, 14756608, 1420265286),
(1167, 1, 12298787, 1378368633),
(1167, 7, 10524075, 1345973222),
(1168, 1, 12713982, 1385134836),
(1168, 8, 12700996, 1384914397),
(1168, 13, 12665643, 1384276544),
(1170, 1, 13772802, 1403282954),
(1170, 4, 14481061, 1415139355),
(1170, 13, 13781557, 1403506315),
(1175, 7, 17064202, 1458631789),
(1176, 1, 11872181, 1370633186),
(1176, 4, 13447063, 1396643866),
(1176, 7, 10029284, 1335248075),
(1176, 8, 11916961, 1371533116),
(1176, 13, 12336958, 1379023591),
(1183, 1, 14274845, 1411846337),
(1183, 7, 10020830, 1335082054),
(1186, 13, 17093565, 1458998370),
(1187, 7, 10843156, 1352059624),
(1190, 7, 14330433, 1412900446),
(1191, 1, 12853553, 1387214183),
(1191, 7, 16470606, 1448131550),
(1191, 8, 13760983, 1402986882),
(1193, 1, 11940109, 1371916592),
(1193, 7, 10176539, 1338486403),
(1193, 8, 12330705, 1378915440),
(1193, 13, 12413661, 1380375661),
(1199, 1, 12464110, 1381185261),
(1199, 7, 13027408, 1390653133),
(1199, 8, 12958905, 1389491997),
(1199, 13, 12958104, 1389465902),
(1201, 1, 11612031, 1366044017),
(1201, 8, 11630872, 1366312918),
(1202, 7, 14686170, 1418767671),
(1204, 7, 16476482, 1448239105),
(1217, 1, 13003196, 1390326705),
(1217, 4, 13314432, 1394663848),
(1217, 7, 13003217, 1390327197),
(1217, 8, 13117658, 1392035924),
(1219, 1, 12742742, 1385579037),
(1219, 7, 13055583, 1391044739),
(1219, 13, 12975786, 1389805860),
(1220, 7, 10738298, 1350305262),
(1222, 1, 11851387, 1370200997),
(1222, 13, 12404420, 1380220623),
(1223, 1, 12365625, 1379540233),
(1223, 7, 10435564, 1344124905),
(1223, 8, 12310010, 1378554077),
(1224, 7, 16547191, 1449432683),
(1224, 13, 14267478, 1411729445),
(1226, 1, 13654852, 1400530342),
(1226, 4, 13658483, 1400601049),
(1226, 8, 13682344, 1401121128),
(1226, 13, 13654831, 1400529583),
(1227, 7, 10167528, 1338289764),
(1236, 1, 12298474, 1378363172),
(1236, 7, 10554799, 1346591525),
(1237, 7, 12644315, 1383934353),
(1237, 13, 15250002, 1427819157),
(1238, 7, 10167529, 1338289842),
(1239, 7, 10641993, 1348403463),
(1239, 13, 14480875, 1415136123),
(1240, 1, 12857875, 1387289876),
(1240, 4, 13230357, 1393532855),
(1240, 8, 13231276, 1393548665),
(1240, 13, 13118610, 1392046375),
(1241, 1, 11496611, 1364065523),
(1241, 7, 10212371, 1339399262),
(1241, 8, 11614506, 1366098191),
(1243, 1, 12161058, 1375636382),
(1243, 4, 12418626, 1380464023),
(1243, 7, 9912602, 1332768644),
(1243, 13, 12409418, 1380300379),
(1244, 4, 14906515, 1422827959),
(1244, 7, 14904251, 1422802208),
(1244, 13, 14905285, 1422811889),
(1246, 1, 12394473, 1380049765),
(1246, 4, 12940876, 1389086712),
(1246, 7, 10572508, 1346972674),
(1246, 8, 12648317, 1384009543),
(1246, 13, 12596196, 1383229641),
(1247, 7, 11261735, 1360280874),
(1249, 1, 12902184, 1388240149),
(1249, 7, 12247219, 1377355716),
(1251, 1, 12954594, 1389390789),
(1251, 7, 10175680, 1338471401),
(1251, 8, 12984679, 1389970541),
(1251, 13, 12918970, 1388665580),
(1252, 1, 12841170, 1387017525),
(1252, 4, 12844286, 1387060397),
(1252, 7, 10438949, 1344200589),
(1252, 8, 13264313, 1393983123),
(1253, 7, 15070441, 1425334509),
(1254, 1, 13446393, 1396635195),
(1254, 4, 13441835, 1396567748),
(1254, 7, 14690026, 1418844177),
(1254, 8, 13491469, 1397396413),
(1256, 1, 12914133, 1388529781),
(1264, 1, 11476930, 1363790363),
(1264, 4, 12019150, 1373273100),
(1264, 7, 9930731, 1333079788),
(1264, 8, 11651991, 1366656170),
(1264, 13, 14094292, 1408987101),
(1265, 1, 11978978, 1372573882),
(1265, 4, 12417159, 1380437900),
(1265, 7, 10072827, 1336112374),
(1265, 8, 11988490, 1372740562),
(1265, 13, 12298364, 1378361155),
(1266, 1, 13495666, 1397484256),
(1266, 7, 12427022, 1380602187),
(1268, 1, 14297974, 1412270902),
(1268, 4, 12491437, 1381606545),
(1268, 7, 9973113, 1333973456),
(1268, 8, 11689387, 1367344749),
(1268, 13, 12314369, 1378634615),
(1271, 7, 13314335, 1394661723),
(1271, 13, 15979488, 1440320092),
(1275, 1, 11986372, 1372697708),
(1275, 4, 12644464, 1383936942),
(1275, 7, 10095950, 1336638435),
(1275, 8, 12316344, 1378663918),
(1275, 13, 12708344, 1385042494),
(1277, 1, 12011900, 1373137293),
(1277, 4, 13169521, 1392755941),
(1277, 7, 10372126, 1342975426),
(1277, 8, 12383002, 1379844353),
(1277, 13, 12894622, 1388064207),
(1279, 1, 12573284, 1382900816),
(1279, 4, 12596264, 1383230189),
(1279, 7, 9997589, 1334584169),
(1279, 8, 12575476, 1382938711),
(1279, 13, 12665323, 1384273393),
(1281, 1, 13015160, 1390515530),
(1281, 4, 12609147, 1383412278),
(1281, 7, 10727727, 1350113924),
(1281, 8, 12233808, 1377111980),
(1281, 13, 12260874, 1377621273),
(1282, 1, 12946675, 1389203503),
(1282, 4, 14344743, 1413201331),
(1282, 13, 12922466, 1388734841),
(1285, 1, 12672833, 1384368844),
(1285, 7, 11849515, 1370160891),
(1285, 8, 12691897, 1384744964),
(1285, 13, 14051300, 1408206402),
(1287, 1, 11689887, 1367354807),
(1287, 4, 12936903, 1389010693),
(1287, 7, 9900660, 1332519922),
(1287, 8, 11689595, 1367348372),
(1287, 13, 12345341, 1379182511),
(1288, 1, 11847816, 1370116099),
(1288, 4, 12581143, 1383002775),
(1288, 7, 10073007, 1336115772),
(1288, 8, 11873157, 1370663763),
(1290, 1, 14350654, 1413303464),
(1290, 7, 11868550, 1370550310),
(1290, 13, 14246598, 1411407706),
(1295, 1, 12985207, 1389979715),
(1295, 13, 13306396, 1394557523),
(1297, 1, 12965994, 1389629442),
(1297, 4, 13113712, 1391965609),
(1297, 7, 12975135, 1389797853),
(1297, 8, 13049623, 1390972200),
(1297, 13, 13615813, 1399734515),
(1298, 7, 16517483, 1448916147),
(1302, 1, 13395462, 1395861291),
(1302, 8, 13346553, 1395150810),
(1302, 13, 12330752, 1378915996),
(1304, 1, 13431315, 1396421237),
(1304, 7, 10512658, 1345726997),
(1304, 8, 13427717, 1396364097),
(1304, 13, 14263188, 1411658937),
(1305, 7, 12640801, 1383873200),
(1305, 13, 13979633, 1406965288),
(1309, 7, 16240048, 1444420155),
(1310, 1, 12524968, 1382171139),
(1310, 4, 12907493, 1388360377),
(1310, 7, 12994741, 1390176892),
(1310, 8, 12652097, 1384076416),
(1310, 13, 12709934, 1385060586),
(1311, 1, 11365054, 1362163053),
(1311, 4, 11614823, 1366103198),
(1311, 7, 9906114, 1332641953),
(1311, 8, 11403295, 1362721938),
(1311, 13, 12361503, 1379483253),
(1315, 1, 12865115, 1387403306),
(1315, 7, 12472842, 1381325590),
(1315, 13, 12876427, 1387641351),
(1316, 1, 12217532, 1376808315),
(1316, 8, 12304820, 1378462592),
(1316, 13, 12305610, 1378475473),
(1328, 7, 16540166, 1449315147),
(1330, 1, 12877982, 1387664891),
(1330, 13, 12944838, 1389158491),
(1332, 7, 12824896, 1386754776),
(1333, 1, 12055803, 1374006842),
(1333, 4, 14675510, 1418595387),
(1333, 8, 12320036, 1378731290),
(1335, 1, 12282392, 1378053554),
(1335, 4, 12596691, 1383233995),
(1335, 7, 10014658, 1334940756),
(1335, 8, 14119553, 1409417648),
(1335, 13, 12248944, 1377400448),
(1338, 1, 12529929, 1382246298),
(1338, 7, 12975872, 1389807252),
(1338, 8, 12653506, 1384093213),
(1338, 13, 12721645, 1385268056),
(1341, 1, 13898753, 1405625385),
(1341, 7, 12501770, 1381773896),
(1345, 7, 16240424, 1444425975),
(1346, 1, 12365147, 1379533803),
(1346, 4, 13335955, 1394994980),
(1346, 7, 10763566, 1350697144),
(1346, 8, 12359789, 1379448007),
(1346, 13, 13157117, 1392579310),
(1348, 1, 12911212, 1388441772),
(1348, 7, 10321053, 1342052304),
(1348, 13, 12695019, 1384799361),
(1361, 1, 12230962, 1377061847),
(1361, 7, 10434337, 1344097068),
(1361, 8, 12334052, 1378981778),
(1363, 7, 16830188, 1455132650),
(1363, 13, 12937462, 1389017136),
(1365, 1, 11518285, 1364415239),
(1365, 4, 12408941, 1380293104),
(1365, 7, 9999056, 1334610712),
(1365, 8, 11522367, 1364483585),
(1365, 13, 12402582, 1380198172),
(1368, 1, 12356363, 1379395741),
(1368, 7, 10450909, 1344439893),
(1373, 1, 11607301, 1365966140),
(1373, 4, 13556053, 1398621974),
(1373, 7, 9718358, 1328626427),
(1373, 8, 11627752, 1366281173),
(1373, 13, 12303413, 1378446649),
(1387, 1, 13939724, 1406234074),
(1390, 13, 13926694, 1406049642),
(1391, 1, 12030672, 1373479939),
(1391, 4, 12750565, 1385668637),
(1391, 7, 10055910, 1335774569),
(1391, 8, 12030948, 1373483204),
(1391, 13, 12959333, 1389505318),
(1392, 7, 10174746, 1338451500),
(1392, 13, 14264142, 1411670996),
(1393, 1, 12676358, 1384436211),
(1393, 7, 10777301, 1350926574),
(1393, 8, 14222538, 1411023818),
(1394, 1, 13914385, 1405879336),
(1394, 7, 11075715, 1356534440),
(1394, 13, 14037294, 1407992984),
(1403, 1, 12583229, 1383041979),
(1403, 7, 12976018, 1389809427),
(1403, 8, 12721421, 1385263692),
(1403, 13, 12786847, 1386172307),
(1406, 1, 13503076, 1397615612),
(1406, 4, 13512324, 1397765996),
(1406, 7, 11129502, 1358014506),
(1406, 8, 13510448, 1397743453),
(1406, 13, 15255222, 1427905252),
(1407, 7, 16515577, 1448890290),
(1410, 1, 11798761, 1369210878),
(1410, 4, 12389264, 1379961238),
(1410, 7, 10047619, 1335611925),
(1410, 8, 11921273, 1371610324),
(1414, 1, 12109863, 1374866904),
(1414, 7, 14772610, 1420617090),
(1414, 8, 12379288, 1379763982),
(1414, 13, 12639783, 1383850516),
(1415, 1, 12364514, 1379523644),
(1415, 4, 13134919, 1392296682),
(1415, 7, 10696509, 1349568598),
(1415, 8, 12344756, 1379173100),
(1415, 13, 12342591, 1379138777),
(1421, 7, 13325789, 1394833053),
(1421, 13, 15980001, 1440329282),
(1423, 1, 13454604, 1396771931),
(1423, 4, 13493155, 1397428446),
(1423, 7, 13564638, 1398795141),
(1423, 13, 13564735, 1398796633),
(1427, 7, 12994622, 1390170693),
(1428, 1, 12688011, 1384670863),
(1430, 1, 12932357, 1388924643),
(1430, 4, 13168984, 1392748661),
(1430, 13, 12946178, 1389184448),
(1431, 1, 12907221, 1388352738),
(1431, 4, 14677868, 1418644784),
(1431, 7, 10026435, 1335192655),
(1431, 8, 12955424, 1389419351),
(1431, 13, 12909912, 1388416296),
(1432, 13, 14314282, 1412582319),
(1435, 1, 12781056, 1386092924),
(1435, 4, 12782455, 1386107879),
(1435, 7, 10240674, 1340158692),
(1437, 7, 11609560, 1366014453),
(1437, 13, 14490301, 1415368751),
(1438, 7, 14716312, 1419366600),
(1440, 1, 12697751, 1384859422),
(1440, 4, 12700018, 1384888662),
(1440, 7, 10247884, 1340358865),
(1440, 8, 12561278, 1382724387),
(1440, 13, 12961384, 1389541794),
(1446, 1, 12662541, 1384239407),
(1446, 4, 13325635, 1394828866),
(1446, 8, 12728059, 1385382599),
(1446, 13, 12913393, 1388505447),
(1448, 1, 13085404, 1391576477),
(1448, 7, 13129574, 1392220682),
(1448, 8, 13092579, 1391670673),
(1448, 13, 13119784, 1392060751),
(1450, 7, 10095443, 1336627439),
(1452, 13, 15986472, 1440440019),
(1456, 1, 12007480, 1373053894),
(1456, 8, 12970125, 1389711739),
(1456, 13, 12336063, 1379008737),
(1460, 7, 11146923, 1358437365),
(1463, 7, 10325190, 1342099137),
(1464, 7, 11146577, 1358431664),
(1466, 1, 12984071, 1389962547),
(1466, 7, 12974768, 1389793044),
(1466, 8, 13242513, 1393687387),
(1466, 13, 13011000, 1390458088),
(1471, 1, 12790918, 1386235903),
(1471, 7, 10106720, 1336854009),
(1471, 13, 12282483, 1378054936),
(1474, 1, 12767967, 1385924428),
(1474, 7, 10308881, 1341805549),
(1474, 13, 12323375, 1378789502),
(1475, 4, 14463572, 1414872011),
(1475, 7, 10547214, 1346421816),
(1475, 13, 14463741, 1414874633),
(1477, 4, 15259488, 1427986326),
(1477, 13, 15258864, 1427978775),
(1480, 1, 12352076, 1379320325),
(1480, 7, 10329959, 1342206756),
(1480, 8, 12351678, 1379315397),
(1480, 13, 12340562, 1379094927),
(1491, 1, 12903302, 1388259488),
(1498, 1, 12765591, 1385895496),
(1498, 13, 13885408, 1405413215),
(1502, 13, 17064315, 1458633487),
(1507, 7, 11343756, 1361860198),
(1507, 13, 14778980, 1420736940),
(1508, 13, 15991243, 1440524864),
(1514, 7, 10274105, 1341049864),
(1514, 13, 14263811, 1411666958),
(1518, 7, 16531298, 1449162371),
(1519, 7, 13766425, 1403114043),
(1519, 13, 16964522, 1457327198),
(1520, 1, 11688685, 1367334869),
(1520, 4, 12639356, 1383844316),
(1520, 7, 10086953, 1336423982),
(1524, 1, 12455441, 1381047525),
(1524, 7, 10861880, 1352415007),
(1524, 8, 12584864, 1383059902),
(1524, 13, 12659732, 1384193699),
(1526, 7, 16516038, 1448896525),
(1530, 1, 12782270, 1386104555),
(1530, 4, 12787857, 1386180263),
(1530, 7, 10065530, 1335964362),
(1530, 8, 12868474, 1387474104),
(1530, 13, 12308989, 1378535569),
(1532, 1, 11972538, 1372445392),
(1532, 7, 10066116, 1335971630),
(1532, 8, 11976931, 1372525678),
(1532, 13, 12402532, 1380197647),
(1535, 7, 14330824, 1412913361),
(1535, 13, 16928562, 1456832590),
(1537, 7, 16316537, 1445607644),
(1541, 1, 12580246, 1382989271),
(1541, 7, 15095491, 1425681307),
(1541, 8, 12696172, 1384823952),
(1541, 13, 12779530, 1386079003),
(1544, 7, 13607128, 1399575361),
(1549, 1, 12452766, 1380990472),
(1549, 7, 10858364, 1352364449),
(1549, 8, 12455922, 1381054425),
(1549, 13, 12648681, 1384013503),
(1551, 1, 12338890, 1379063890),
(1551, 7, 12932132, 1388920270),
(1551, 8, 12984167, 1389963684),
(1551, 13, 12895190, 1388073425),
(1552, 1, 12782027, 1386101016),
(1552, 4, 13135940, 1392307761),
(1552, 7, 10458059, 1344582061),
(1552, 8, 12780833, 1386090660),
(1552, 13, 12784400, 1386148252),
(1557, 4, 14761967, 1420380441),
(1557, 7, 11075464, 1356531146),
(1563, 7, 10276194, 1341102278),
(1574, 1, 12301349, 1378406714),
(1574, 7, 10043331, 1335523227),
(1574, 8, 11588250, 1365620224),
(1574, 13, 12402359, 1380195633),
(1576, 1, 13306350, 1394556720),
(1576, 13, 13163633, 1392675467),
(1592, 7, 12640589, 1383867085),
(1592, 13, 14041059, 1408036481),
(1594, 1, 12266093, 1377722195),
(1594, 4, 12892913, 1388020882),
(1594, 7, 10716948, 1349958784),
(1594, 8, 12435447, 1380727960),
(1594, 13, 12627970, 1383669988),
(1596, 7, 11576342, 1365449822),
(1597, 1, 13015196, 1390516142),
(1605, 1, 12919869, 1388678470),
(1605, 4, 13564980, 1398801074),
(1605, 7, 10947412, 1354024962),
(1605, 8, 13515745, 1397830439),
(1605, 13, 13136804, 1392318287),
(1608, 7, 11111815, 1357546676),
(1614, 1, 12981574, 1389905453),
(1614, 7, 10315602, 1341938857),
(1619, 1, 12810779, 1386537242),
(1619, 7, 15101291, 1425773760),
(1619, 8, 13413532, 1396109349),
(1619, 13, 14261006, 1411631132),
(1620, 1, 14472081, 1415011493),
(1620, 13, 14471720, 1415006432),
(1621, 1, 12414791, 1380387471),
(1621, 4, 13004012, 1390344626),
(1622, 7, 11278987, 1360673343),
(1625, 1, 13243798, 1393703658),
(1625, 7, 11106676, 1357393263),
(1625, 8, 13426972, 1396356685),
(1625, 13, 13365514, 1395423133),
(1626, 1, 12455207, 1381043387),
(1626, 4, 12903397, 1388260780),
(1626, 7, 10861994, 1352417733),
(1626, 8, 12582101, 1383026784),
(1626, 13, 12649392, 1384021927),
(1630, 1, 13772510, 1403277610),
(1630, 4, 14380818, 1413743210),
(1630, 7, 14716619, 1419377219),
(1630, 13, 13783558, 1403544671),
(1633, 1, 13119873, 1392061714),
(1633, 7, 13023429, 1390593260),
(1633, 13, 15082654, 1425502489),
(1637, 1, 11553317, 1365054684),
(1637, 4, 12387410, 1379934359),
(1637, 7, 9922885, 1332933714),
(1637, 8, 11553939, 1365061621),
(1637, 13, 12242150, 1377264608),
(1640, 1, 12030466, 1373476590),
(1640, 4, 12750590, 1385668826),
(1640, 7, 10276209, 1341103070),
(1640, 8, 12026204, 1373394942),
(1640, 13, 12238320, 1377191733),
(1642, 7, 10542708, 1346330645),
(1644, 1, 11537674, 1364744386),
(1647, 7, 10451424, 1344449232),
(1653, 7, 14706607, 1419169063),
(1659, 7, 12566376, 1382805654),
(1662, 1, 13516931, 1397851996),
(1662, 4, 13547882, 1398437884),
(1662, 8, 14202339, 1410711770),
(1662, 13, 13515411, 1397826188),
(1663, 7, 14706264, 1419163644),
(1665, 1, 12998652, 1390241573),
(1665, 7, 13019619, 1390563662),
(1665, 13, 14312559, 1412536577),
(1671, 1, 12693253, 1384778766),
(1672, 1, 13714590, 1401879523),
(1672, 13, 13708618, 1401741151),
(1674, 7, 15068159, 1425304590),
(1679, 1, 13939580, 1406229440),
(1680, 1, 13545965, 1398407343),
(1680, 4, 13643930, 1400266097),
(1680, 7, 13638491, 1400155995),
(1680, 8, 13543455, 1398353586),
(1680, 13, 13239031, 1393651323),
(1687, 7, 14004814, 1407432722),
(1692, 13, 12960825, 1389533983),
(1695, 1, 13776891, 1403381151),
(1695, 13, 13793169, 1403724023),
(1696, 7, 13015402, 1390519826),
(1700, 1, 14393823, 1413911170),
(1700, 4, 14401783, 1414000199),
(1700, 13, 14319189, 1412689446),
(1704, 1, 13333322, 1394965823),
(1714, 1, 12340136, 1379086827),
(1714, 4, 12425833, 1380580399),
(1714, 7, 10021528, 1335097628),
(1714, 8, 12356482, 1379397591),
(1714, 13, 12321190, 1378746912),
(1717, 1, 12649115, 1384018276),
(1717, 4, 13137117, 1392322508),
(1717, 7, 15038422, 1424870216),
(1717, 8, 12655943, 1384135582),
(1717, 13, 14754059, 1420204419),
(1720, 13, 16017473, 1440925936),
(1721, 1, 12911125, 1388439244),
(1721, 7, 10450504, 1344434405),
(1721, 13, 12866030, 1387433976),
(1724, 1, 11131897, 1358081656),
(1724, 4, 12018979, 1373270918),
(1724, 7, 9694375, 1328014249),
(1724, 8, 11403228, 1362720984),
(1724, 13, 12402446, 1380196703),
(1725, 1, 12066617, 1374170702),
(1725, 4, 12694026, 1384786833),
(1725, 7, 10021754, 1335102559),
(1725, 8, 12360381, 1379458350),
(1725, 13, 12311557, 1378576795),
(1730, 1, 12649918, 1384031792),
(1730, 4, 12592063, 1383160302),
(1730, 7, 10178910, 1338548318),
(1730, 13, 12952899, 1389356702),
(1731, 7, 15066864, 1425288087),
(1733, 7, 16532280, 1449179948),
(1734, 1, 13631198, 1400015796),
(1734, 7, 10836122, 1351938516),
(1734, 13, 13631097, 1400013554),
(1742, 1, 12670710, 1384348430),
(1742, 7, 13044557, 1390891495),
(1742, 13, 15573327, 1433387694),
(1744, 1, 12959916, 1389516710),
(1744, 7, 10776909, 1350922993),
(1745, 13, 15105981, 1425839973),
(1747, 7, 14330898, 1412915118),
(1747, 13, 16023367, 1441026239),
(1751, 1, 12852647, 1387203382),
(1751, 7, 10683985, 1349338366),
(1751, 8, 13357236, 1395309240),
(1751, 13, 13567557, 1398847722),
(1753, 1, 11607453, 1365968459),
(1753, 4, 12425376, 1380572987),
(1753, 7, 9925117, 1332970030),
(1753, 8, 11610847, 1366031288),
(1753, 13, 12781579, 1386096838),
(1755, 7, 11142605, 1358338065),
(1756, 1, 12072411, 1374262829),
(1756, 7, 10690893, 1349461248),
(1760, 7, 12639386, 1383844659),
(1760, 13, 13950589, 1406403337),
(1768, 7, 11107610, 1357409159),
(1771, 1, 13841911, 1404670798),
(1771, 7, 13036959, 1390777570),
(1771, 13, 15235344, 1427570706),
(1773, 7, 16516917, 1448907497),
(1783, 1, 12545369, 1382520321),
(1783, 7, 13012524, 1390480058),
(1783, 8, 12653088, 1384088736),
(1783, 13, 12713262, 1385126827),
(1793, 4, 14695388, 1418933683),
(1793, 7, 10067005, 1335983406),
(1793, 8, 13764548, 1403076138),
(1793, 13, 12258517, 1377579973),
(1803, 7, 10231906, 1339883972),
(1803, 13, 12872262, 1387557498),
(1806, 7, 16511026, 1448809490),
(1811, 1, 13773149, 1403291344),
(1811, 4, 14481129, 1415153754),
(1811, 13, 13783330, 1403540501),
(1812, 13, 12270029, 1377792440),
(1819, 7, 10341586, 1342445163),
(1820, 1, 12389913, 1379971176),
(1820, 8, 12388637, 1379952591),
(1820, 13, 12390747, 1379991617),
(1829, 13, 16022154, 1441005956),
(1832, 1, 14014688, 1407609883),
(1832, 8, 14029223, 1407869787),
(1832, 13, 14013538, 1407590106),
(1843, 1, 14826996, 1421693705),
(1843, 7, 14825526, 1421672263),
(1846, 1, 12467343, 1381239365),
(1846, 8, 12495998, 1381683449),
(1846, 13, 12551841, 1382600168),
(1849, 7, 12471378, 1381304365),
(1851, 7, 12504265, 1381818008),
(1851, 13, 14014670, 1407609626),
(1852, 1, 14357550, 1413404727),
(1852, 7, 12639769, 1383850285),
(1852, 13, 14312569, 1412536693),
(1853, 1, 14015909, 1407644994),
(1853, 13, 14013968, 1407598259),
(1857, 7, 10221398, 1339615624),
(1858, 7, 13692982, 1401368481),
(1862, 1, 11523202, 1364495569),
(1862, 4, 12502676, 1381785357),
(1862, 7, 9982185, 1334199118),
(1862, 8, 11525335, 1364539738),
(1862, 13, 12676410, 1384436776),
(1863, 1, 11545869, 1364960114),
(1863, 4, 12516972, 1382024795),
(1863, 7, 10051997, 1335699875),
(1863, 8, 12333162, 1378965244),
(1865, 1, 11598216, 1365787846),
(1865, 4, 12019908, 1373284548),
(1865, 7, 10023435, 1335132382),
(1865, 8, 11597789, 1365782271),
(1865, 13, 12228047, 1377001400),
(1866, 7, 10246239, 1340305387),
(1867, 1, 12859389, 1387307629),
(1868, 7, 16517621, 1448919679),
(1870, 1, 11523209, 1364495728),
(1870, 4, 12507271, 1381862865),
(1870, 7, 9960766, 1333696474),
(1870, 8, 11747730, 1368291919),
(1870, 13, 12794133, 1386274028),
(1872, 1, 11845353, 1370070066),
(1872, 4, 12424543, 1380563414),
(1872, 7, 9927884, 1333028437),
(1872, 8, 11873174, 1370664322),
(1872, 13, 13451179, 1396712309),
(1876, 1, 12070155, 1374234320),
(1876, 4, 12700400, 1384894954),
(1876, 7, 10250799, 1340442491),
(1876, 8, 12367657, 1379578890),
(1876, 13, 12427441, 1380608567),
(1881, 1, 12369267, 1379600082),
(1881, 4, 13325530, 1394826798),
(1881, 7, 10250899, 1340444998),
(1881, 8, 12368091, 1379584062),
(1881, 13, 12427760, 1380612582),
(1884, 1, 14014883, 1407612980),
(1884, 7, 12484444, 1381515562),
(1884, 13, 13981748, 1406998633),
(1885, 7, 12427028, 1380602234),
(1886, 1, 11417124, 1362947746),
(1886, 4, 12518168, 1382041109),
(1886, 7, 9989691, 1334351155),
(1886, 8, 11537832, 1364746579),
(1886, 13, 12412123, 1380352065),
(1887, 1, 12373906, 1379671128),
(1887, 7, 10460596, 1344619755),
(1887, 8, 12374419, 1379680612),
(1887, 13, 12375631, 1379695815),
(1888, 1, 12997602, 1390228576),
(1888, 7, 13038439, 1390806932),
(1889, 1, 12468136, 1381245686),
(1889, 4, 14695417, 1418934438),
(1889, 7, 10071953, 1336087369),
(1889, 8, 12493327, 1381644075),
(1889, 13, 12282312, 1378052225),
(1895, 1, 12714938, 1385148690),
(1895, 4, 13795489, 1403770908),
(1895, 7, 10625084, 1348086223),
(1895, 8, 12759738, 1385819217),
(1895, 13, 12386019, 1379908022),
(1900, 1, 12357067, 1379408655),
(1900, 4, 12714914, 1385148364),
(1900, 8, 12429853, 1380642193),
(1900, 13, 12435716, 1380730845),
(1911, 1, 11484025, 1363887995),
(1911, 4, 12018924, 1373270104),
(1911, 7, 9925123, 1332970107),
(1911, 8, 11560838, 1365162520),
(1911, 13, 12344240, 1379164719),
(1918, 1, 12552153, 1382604066),
(1918, 13, 12954461, 1389385595),
(1921, 7, 11269093, 1360425841),
(1924, 13, 16030357, 1441137103),
(1927, 1, 12604851, 1383362467),
(1927, 4, 13022007, 1390578647),
(1927, 7, 10601976, 1347627507),
(1927, 8, 12783180, 1386130845),
(1927, 13, 12814361, 1386594699),
(1931, 1, 13130909, 1392233900),
(1931, 8, 13123393, 1392125622);
INSERT INTO `uva_solve` (`problem_number`, `judge_code_id`, `uva_judge_id`, `timestamp`) VALUES
(1931, 13, 13124372, 1392137851),
(1932, 4, 14401761, 1413999941),
(1932, 7, 9913699, 1332785080),
(1935, 1, 12718351, 1385211699),
(1935, 7, 12983173, 1389948150),
(1941, 1, 12014350, 1373187839),
(1941, 4, 12644286, 1383933701),
(1941, 7, 9973091, 1333972961),
(1941, 8, 12015987, 1373215137),
(1941, 13, 12232088, 1377083540),
(1942, 7, 12916977, 1388610750),
(1944, 7, 14681389, 1418699536),
(1956, 1, 13054310, 1391023929),
(1956, 4, 13242215, 1393684633),
(1956, 7, 13034426, 1390739428),
(1956, 8, 13053267, 1391013380),
(1956, 13, 13021275, 1390574105),
(1960, 7, 15639730, 1434479349),
(1967, 7, 12250419, 1377428900),
(1970, 1, 12947451, 1389215940),
(1970, 4, 13414617, 1396129057),
(1970, 7, 10308886, 1341805655),
(1970, 8, 13405400, 1395997053),
(1973, 7, 10533624, 1346157472),
(1980, 1, 12474120, 1381341260),
(1985, 1, 11615680, 1366114555),
(1985, 7, 10062603, 1335897321),
(1985, 8, 11617521, 1366136068),
(1985, 13, 12343475, 1379150624),
(1986, 1, 14367104, 1413547524),
(1986, 7, 13318035, 1394717341),
(1986, 13, 14306658, 1412428993),
(1996, 4, 15138926, 1426269345),
(1996, 7, 15138133, 1426260501),
(1997, 7, 10429542, 1344033893),
(1998, 1, 12646088, 1383978443),
(1998, 4, 13136303, 1392312028),
(1998, 7, 10065304, 1335960698),
(1998, 8, 12386847, 1379924563),
(1998, 13, 12331077, 1378921834),
(2000, 1, 12240621, 1377240716),
(2000, 7, 10055563, 1335768576),
(2000, 8, 12243111, 1377277311),
(2000, 13, 12638745, 1383836434),
(2001, 1, 12399025, 1380133916),
(2001, 4, 12941801, 1389101614),
(2001, 7, 10572096, 1346959069),
(2001, 8, 12650567, 1384050788),
(2001, 13, 12599681, 1383287607),
(2003, 1, 12389408, 1379963502),
(2005, 13, 12328995, 1378889888),
(2008, 8, 12408495, 1380287858),
(2009, 1, 13939581, 1406229462),
(2009, 7, 10090328, 1336502205),
(2010, 7, 12822359, 1386702043),
(2019, 7, 12915097, 1388565656),
(2021, 1, 12714661, 1385143964),
(2021, 4, 12771927, 1385982356),
(2021, 8, 12719017, 1385218406),
(2021, 13, 12691885, 1384744676),
(2022, 1, 16137639, 1442813360),
(2023, 7, 13371273, 1395504704),
(2023, 13, 15990447, 1440513727),
(2025, 13, 15739629, 1436418912),
(2026, 1, 12778377, 1386068360),
(2026, 4, 13429377, 1396388699),
(2026, 8, 13162077, 1392654564),
(2026, 13, 13148497, 1392466382),
(2030, 7, 14716666, 1419378679),
(2032, 1, 14575296, 1416767932),
(2032, 13, 14589543, 1417027858),
(2035, 1, 12429682, 1380640405),
(2035, 7, 10525671, 1346001119),
(2035, 8, 12430604, 1380652429),
(2035, 13, 13996906, 1407302952),
(2042, 1, 12436532, 1380741548),
(2048, 7, 13629192, 1399988964),
(2051, 1, 12979684, 1389880230),
(2051, 7, 10427534, 1344004974),
(2051, 8, 12974531, 1389789357),
(2056, 7, 10057913, 1335803917),
(2062, 1, 12542909, 1382467736),
(2062, 4, 12603476, 1383336693),
(2066, 7, 14704141, 1419101892),
(2074, 7, 13765589, 1403097481),
(2078, 1, 12924995, 1388774846),
(2078, 4, 13342250, 1395086439),
(2078, 7, 10521700, 1345919207),
(2078, 8, 13462081, 1396883552),
(2078, 13, 13521261, 1397937566),
(2079, 13, 14312573, 1412536744),
(2090, 1, 13787361, 1403615329),
(2090, 7, 11523593, 1364502066),
(2091, 1, 11520141, 1364456159),
(2091, 4, 12936898, 1389010634),
(2091, 7, 9924792, 1332964974),
(2091, 8, 11583975, 1365576354),
(2091, 13, 12348834, 1379261693),
(2092, 7, 10768349, 1350769957),
(2093, 1, 12375573, 1379694893),
(2093, 7, 10059228, 1335826482),
(2093, 8, 12375735, 1379697299),
(2093, 13, 12375822, 1379698445),
(2098, 7, 13411783, 1396086537),
(2100, 1, 14243720, 1411332288),
(2100, 4, 14252791, 1411497143),
(2100, 7, 11863903, 1370461021),
(2100, 13, 14249759, 1411458486),
(2102, 7, 14717796, 1419410503),
(2105, 7, 15132835, 1426204484),
(2113, 1, 11131799, 1358078536),
(2113, 4, 12387317, 1379932913),
(2113, 7, 9693542, 1327997630),
(2113, 8, 11355498, 1362032011),
(2113, 13, 12402488, 1380197185),
(2122, 7, 12907276, 1388353963),
(2126, 1, 11641730, 1366482966),
(2126, 4, 12389448, 1379964148),
(2126, 7, 9902802, 1332574220),
(2126, 8, 11641653, 1366481838),
(2126, 13, 12392673, 1380027320),
(2133, 1, 11517969, 1364410610),
(2133, 4, 12490776, 1381599953),
(2133, 7, 9931004, 1333085871),
(2133, 13, 12311778, 1378580593),
(2144, 7, 10375012, 1343035163),
(2145, 7, 15054999, 1425110669),
(2159, 7, 12644953, 1383947484),
(2160, 1, 11548785, 1365000685),
(2160, 4, 13868800, 1405111403),
(2160, 7, 10025214, 1335175285),
(2160, 13, 12269711, 1377787827),
(2164, 7, 12500635, 1381762298),
(2169, 1, 12510621, 1381923594),
(2169, 4, 12943316, 1389119871),
(2169, 7, 10878592, 1352790234),
(2169, 8, 13135446, 1392302624),
(2169, 13, 12780703, 1386089521),
(2171, 7, 14689194, 1418829429),
(2174, 1, 12238020, 1377187082),
(2174, 7, 10523084, 1345955115),
(2174, 8, 12254795, 1377510820),
(2174, 13, 12401347, 1380177612),
(2176, 4, 14185157, 1410454586),
(2176, 7, 13800705, 1403866673),
(2176, 8, 14176767, 1410340068),
(2176, 13, 13944548, 1406311677),
(2177, 7, 11235719, 1359849837),
(2180, 1, 12300722, 1378397688),
(2180, 7, 10691270, 1349466994),
(2183, 1, 12688585, 1384682806),
(2183, 7, 11220394, 1359622904),
(2201, 1, 12010086, 1373108953),
(2201, 4, 12654887, 1384111316),
(2201, 7, 10367693, 1342891101),
(2201, 8, 12368429, 1379589279),
(2201, 13, 12351383, 1379308111),
(2204, 1, 12370394, 1379612910),
(2204, 8, 12387037, 1379927842),
(2204, 13, 12372927, 1379657158),
(2221, 1, 12962139, 1389556364),
(2221, 8, 12990791, 1390104330),
(2221, 13, 12953633, 1389369191),
(2253, 7, 10419265, 1343838504),
(2255, 13, 13926938, 1406053488),
(2256, 7, 16535516, 1449237250),
(2261, 1, 12345708, 1379190581),
(2262, 4, 14675390, 1418591897),
(2262, 7, 15075099, 1425414531),
(2271, 7, 10275019, 1341069353),
(2272, 7, 16709752, 1452861101),
(2275, 13, 16809938, 1454748292),
(2276, 13, 16027225, 1441090175),
(2283, 1, 12321317, 1378748466),
(2283, 13, 14050670, 1408196474),
(2286, 7, 16240700, 1444431839),
(2296, 1, 12389595, 1379966420),
(2296, 4, 13073429, 1391369968),
(2296, 7, 10692337, 1349494473),
(2296, 13, 12953770, 1389371455),
(2299, 7, 13694575, 1401391757),
(2301, 7, 16534901, 1449228350),
(2307, 1, 11542951, 1364849221),
(2307, 4, 12389526, 1379965361),
(2307, 7, 9913202, 1332778423),
(2307, 8, 11549540, 1365008478),
(2315, 1, 11640487, 1366467335),
(2315, 7, 10455735, 1344532025),
(2315, 13, 12670852, 1384350010),
(2316, 7, 13613448, 1399694559),
(2318, 7, 16517072, 1448909937),
(2319, 1, 12933118, 1388934089),
(2319, 7, 10238823, 1340103905),
(2319, 8, 12935204, 1388983362),
(2319, 13, 12949834, 1389282464),
(2320, 8, 13450367, 1396705031),
(2321, 7, 12907406, 1388358189),
(2324, 1, 12413744, 1380376667),
(2324, 8, 12398458, 1380125924),
(2324, 13, 12401564, 1380181570),
(2325, 7, 10686809, 1349379669),
(2327, 1, 12427982, 1380616849),
(2327, 8, 12433869, 1380707644),
(2327, 13, 12566057, 1382802054),
(2343, 13, 16050559, 1441472579),
(2347, 1, 13333820, 1394972871),
(2347, 7, 10419058, 1343834260),
(2347, 8, 13269499, 1394038486),
(2347, 13, 13401874, 1395941369),
(2349, 1, 12339961, 1379083918),
(2349, 4, 13003857, 1390338712),
(2349, 7, 10066441, 1335975287),
(2349, 13, 12402449, 1380196779),
(2352, 7, 11654708, 1366703187),
(2353, 7, 13800103, 1403855104),
(2354, 1, 12117609, 1375004872),
(2354, 7, 10421419, 1343891039),
(2354, 8, 12260641, 1377617862),
(2354, 13, 12344941, 1379176092),
(2366, 1, 12553331, 1382621354),
(2366, 4, 12877423, 1387655000),
(2366, 7, 10181800, 1338624073),
(2366, 8, 12705938, 1384999562),
(2366, 13, 12261196, 1377627411),
(2372, 1, 12647164, 1383997435),
(2372, 7, 13035093, 1390747261),
(2375, 13, 16030480, 1441138713),
(2376, 7, 14334583, 1412976943),
(2379, 7, 10048553, 1335625200),
(2380, 1, 12903576, 1388264584),
(2380, 7, 10425979, 1343977374),
(2380, 13, 12409935, 1380308488),
(2382, 7, 10271982, 1340995610),
(2383, 1, 11826866, 1369723906),
(2383, 4, 12417149, 1380437734),
(2383, 7, 9899366, 1332496378),
(2383, 13, 12310570, 1378562203),
(2384, 1, 12236925, 1377168887),
(2384, 4, 13003786, 1390336389),
(2384, 8, 12334730, 1378991445),
(2390, 1, 13631212, 1400016074),
(2390, 7, 13626399, 1399938053),
(2391, 1, 12728722, 1385388137),
(2391, 4, 12776018, 1386025376),
(2391, 8, 12783019, 1386126287),
(2391, 13, 12693120, 1384777355),
(2396, 1, 12698267, 1384865588),
(2396, 4, 12743465, 1385585792),
(2396, 7, 10009266, 1334840936),
(2396, 13, 12824723, 1386752718),
(2397, 1, 13845226, 1404734878),
(2397, 7, 13813912, 1404144805),
(2397, 13, 13845412, 1404737142),
(2400, 7, 13697129, 1401455224),
(2402, 4, 14762951, 1420399030),
(2402, 13, 14013673, 1407592198),
(2403, 1, 13000201, 1390283962),
(2403, 7, 11184650, 1359120695),
(2408, 7, 12649510, 1384023633),
(2412, 1, 11936657, 1371853106),
(2412, 4, 12019790, 1373282962),
(2412, 7, 9911361, 1332745901),
(2412, 8, 11934817, 1371824857),
(2412, 13, 12402482, 1380197121),
(2413, 13, 15986098, 1440434579),
(2414, 1, 14624130, 1417611010),
(2414, 13, 14598925, 1417198237),
(2415, 1, 13385428, 1395732014),
(2415, 4, 13391405, 1395817190),
(2415, 7, 12504690, 1381824486),
(2415, 8, 13391397, 1395817064),
(2415, 13, 13526560, 1398052353),
(2419, 1, 12930104, 1388868952),
(2419, 4, 13672256, 1400877274),
(2419, 7, 12038549, 1373620962),
(2419, 8, 13121630, 1392096006),
(2421, 1, 12930070, 1388868405),
(2421, 4, 13672266, 1400877399),
(2421, 7, 12046734, 1373735453),
(2421, 8, 13674030, 1400927767),
(2423, 1, 12242537, 1377268548),
(2423, 7, 10168821, 1338318194),
(2423, 8, 12249240, 1377407561),
(2427, 7, 14700591, 1419023923),
(2432, 7, 10325353, 1342101412),
(2435, 7, 14712514, 1419298564),
(2443, 7, 11144485, 1358374085),
(2445, 1, 13914619, 1405885533),
(2445, 4, 14762925, 1420398402),
(2445, 7, 11256304, 1360189947),
(2445, 13, 13992678, 1407217717),
(2450, 1, 11906230, 1371320092),
(2450, 4, 12520517, 1382090490),
(2450, 7, 9999319, 1334621789),
(2450, 8, 11906340, 1371321647),
(2450, 13, 12758412, 1385805286),
(2451, 7, 11093787, 1356977002),
(2456, 1, 11641768, 1366483635),
(2456, 4, 12415384, 1380394592),
(2456, 7, 9938258, 1333209808),
(2456, 8, 11641684, 1366482325),
(2456, 13, 12402493, 1380197236),
(2457, 1, 11847030, 1370101363),
(2457, 4, 12512099, 1381942551),
(2457, 7, 10011344, 1334878023),
(2457, 8, 11863446, 1370451865),
(2457, 13, 12305752, 1378476669),
(2458, 1, 13117973, 1392039325),
(2458, 4, 13113696, 1391965387),
(2458, 7, 10674742, 1349115747),
(2458, 8, 12996950, 1390224120),
(2458, 13, 13118101, 1392040486),
(2461, 1, 12056174, 1374013507),
(2461, 4, 14675477, 1418594202),
(2461, 7, 10522900, 1345949936),
(2461, 8, 12055828, 1374007286),
(2461, 13, 12719928, 1385230727),
(2465, 1, 12010932, 1373124015),
(2465, 4, 12743640, 1385587747),
(2465, 7, 10048247, 1335621770),
(2465, 8, 12757370, 1385780337),
(2465, 13, 12314028, 1378629068),
(2467, 7, 12646084, 1383978348),
(2470, 7, 10646122, 1348495208),
(2470, 13, 14475430, 1415049432),
(2474, 1, 11525807, 1364545747),
(2474, 4, 12402597, 1380198344),
(2474, 7, 9932233, 1333109037),
(2474, 13, 12954511, 1389387449),
(2475, 1, 12762454, 1385847617),
(2475, 4, 12762479, 1385848020),
(2475, 7, 10012110, 1334900662),
(2481, 1, 14412535, 1414139779),
(2481, 4, 15233408, 1427544973),
(2483, 1, 13606668, 1399567775),
(2484, 7, 16240366, 1444424927),
(2484, 13, 12282157, 1378049769),
(2487, 1, 12654374, 1384103315),
(2487, 7, 10845873, 1352124780),
(2487, 13, 12858682, 1387299413),
(2489, 1, 12025904, 1373389719),
(2489, 8, 12014194, 1373184657),
(2489, 13, 12402477, 1380197065),
(2490, 7, 10686633, 1349377086),
(2493, 1, 11905813, 1371314811),
(2493, 7, 10185838, 1338724668),
(2493, 8, 11874034, 1370686376),
(2493, 13, 12403168, 1380204891),
(2498, 1, 12453706, 1381009908),
(2498, 4, 12903633, 1388265899),
(2498, 7, 15050543, 1425046623),
(2498, 8, 12594879, 1383213514),
(2498, 13, 12653568, 1384093726),
(2499, 1, 12413398, 1380372667),
(2499, 4, 14213757, 1410890002),
(2499, 7, 10678524, 1349203722),
(2499, 8, 12740658, 1385557661),
(2499, 13, 13696189, 1401435390),
(2500, 1, 14276147, 1411883412),
(2500, 7, 16515112, 1448885225),
(2501, 7, 13324976, 1394820696),
(2501, 13, 15976203, 1440250107),
(2507, 7, 12964980, 1389613733),
(2512, 1, 13447269, 1396647124),
(2512, 4, 13458492, 1396830170),
(2512, 7, 11154118, 1358593933),
(2512, 8, 13473350, 1397059377),
(2512, 13, 13521368, 1397940031),
(2513, 1, 12409223, 1380297134),
(2513, 4, 12957856, 1389462266),
(2513, 7, 10550309, 1346482615),
(2513, 8, 12930716, 1388892616),
(2513, 13, 12937185, 1389013874),
(2514, 7, 16517991, 1448929988),
(2521, 1, 13397616, 1395896760),
(2521, 4, 13418518, 1396203127),
(2521, 7, 9948759, 1333451416),
(2521, 8, 13445443, 1396624417),
(2521, 13, 15238837, 1427633509),
(2525, 1, 11849908, 1370169970),
(2525, 4, 12425215, 1380570647),
(2525, 7, 10021878, 1335105205),
(2525, 13, 12394071, 1380044638),
(2529, 13, 17065278, 1458643695),
(2531, 7, 10544552, 1346362845),
(2536, 1, 12085395, 1374483903),
(2536, 4, 12573903, 1382908887),
(2536, 7, 10009297, 1334841438),
(2536, 8, 12093402, 1374607528),
(2542, 1, 11478369, 1363804257),
(2542, 4, 12345505, 1379185482),
(2542, 7, 9924614, 1332961334),
(2542, 8, 11575299, 1365438172),
(2542, 13, 12383369, 1379852007),
(2549, 7, 9992043, 1334418145),
(2549, 13, 15069282, 1425316194),
(2595, 1, 12804385, 1386440139),
(2595, 7, 10192897, 1338902971),
(2597, 1, 12694823, 1384796721),
(2597, 8, 12710994, 1385088962),
(2597, 13, 13994990, 1407256226),
(2613, 7, 14680670, 1418678134),
(2616, 13, 16207487, 1443965583),
(2619, 1, 12306756, 1378489637),
(2619, 13, 16145760, 1442933290),
(2623, 7, 10646289, 1348498003),
(2624, 1, 12129483, 1375173595),
(2624, 4, 12725452, 1385329340),
(2624, 7, 10080890, 1336295188),
(2624, 13, 12970707, 1389718240),
(2626, 7, 16530964, 1449158355),
(2633, 7, 10522826, 1345947838),
(2635, 1, 12647965, 1384005865),
(2635, 7, 10727963, 1350117209),
(2644, 1, 11745071, 1368251988),
(2644, 7, 14668796, 1418476402),
(2644, 8, 11680034, 1367166579),
(2655, 1, 11899624, 1371194363),
(2655, 7, 10212695, 1339406281),
(2655, 8, 11873956, 1370684727),
(2655, 13, 12335584, 1379001702),
(2661, 1, 11821955, 1369630957),
(2661, 4, 12579019, 1382977738),
(2661, 7, 9998752, 1334604050),
(2661, 8, 12384484, 1379869174),
(2662, 7, 10835581, 1351927890),
(2671, 1, 12419952, 1380479235),
(2671, 4, 12878538, 1387688090),
(2671, 7, 10685919, 1349368777),
(2671, 8, 13644790, 1400313773),
(2671, 13, 14230275, 1411131144),
(2676, 1, 12306003, 1378478990),
(2676, 8, 12349261, 1379269526),
(2678, 1, 12611950, 1383458627),
(2678, 4, 12911198, 1388441320),
(2678, 7, 10853473, 1352274544),
(2678, 8, 12617222, 1383536470),
(2678, 13, 12701604, 1384929853),
(2683, 1, 11458479, 1363545207),
(2683, 4, 12021574, 1373307903),
(2683, 7, 9911503, 1332749454),
(2683, 8, 11532879, 1364658855),
(2683, 13, 12315233, 1378648539),
(2686, 7, 10242055, 1340193826),
(2686, 8, 13432334, 1396431853),
(2693, 7, 11446748, 1363379882),
(2697, 1, 11849898, 1370169557),
(2697, 7, 10029056, 1335243323),
(2697, 8, 11873533, 1370674252),
(2697, 13, 12998618, 1390241127),
(2705, 4, 13565355, 1398806660),
(2705, 7, 10951257, 1354087672),
(2705, 13, 13583637, 1399131548),
(2706, 1, 13176010, 1392842920),
(2706, 8, 13741926, 1402489595),
(2706, 13, 13264859, 1393995566),
(2708, 4, 13134974, 1392297408),
(2724, 1, 12066347, 1374166297),
(2724, 4, 12502518, 1381782518),
(2724, 7, 10022025, 1335107833),
(2724, 13, 12884917, 1387818051),
(2733, 1, 12613551, 1383482990),
(2733, 4, 12941967, 1389103670),
(2733, 7, 10584982, 1347256915),
(2733, 8, 12667872, 1384315213),
(2733, 13, 12667867, 1384315125),
(2734, 1, 12639600, 1383847947),
(2736, 1, 11689831, 1367353540),
(2736, 4, 12517089, 1382026128),
(2736, 7, 9953939, 1333543091),
(2736, 8, 11689580, 1367348071),
(2736, 13, 12402499, 1380197319),
(2737, 1, 12457748, 1381077392),
(2737, 8, 13100334, 1391778413),
(2737, 13, 12660155, 1384197541),
(2740, 7, 13700218, 1401532303),
(2750, 1, 13529142, 1398100246),
(2750, 4, 13475017, 1397088885),
(2750, 7, 10727439, 1350109232),
(2750, 8, 13529013, 1398098186),
(2750, 13, 12300455, 1378393875),
(2756, 1, 12614554, 1383494707),
(2756, 4, 14208446, 1410811303),
(2756, 8, 12751868, 1385690184),
(2756, 13, 13733199, 1402303400),
(2757, 1, 12630546, 1383715183),
(2757, 7, 10853613, 1352278607),
(2757, 8, 12689585, 1384700238),
(2757, 13, 12719313, 1385222535),
(2760, 1, 13015249, 1390517214),
(2760, 4, 13230475, 1393535091),
(2760, 7, 9933885, 1333132198),
(2760, 8, 11863835, 1370459787),
(2762, 1, 11669712, 1366951067),
(2762, 4, 12407856, 1380281172),
(2762, 7, 10021288, 1335092945),
(2762, 8, 11670737, 1366969348),
(2762, 13, 12402572, 1380198048),
(2763, 1, 12230896, 1377060376),
(2763, 4, 12561073, 1382722033),
(2763, 7, 10071642, 1336078959),
(2763, 8, 12246413, 1377341609),
(2763, 13, 12228261, 1377004236),
(2765, 13, 16208411, 1443977723),
(2768, 7, 13036839, 1390774200),
(2769, 7, 12907279, 1388353993),
(2823, 1, 11671789, 1366986168),
(2823, 4, 12422731, 1380535560),
(2823, 7, 10026980, 1335200040),
(2823, 8, 11681857, 1367208237),
(2823, 13, 12402454, 1380196833),
(2825, 7, 12565870, 1382800118),
(2827, 1, 11612660, 1366055162),
(2827, 4, 12407097, 1380269661),
(2827, 7, 9927807, 1333027173),
(2827, 8, 11614363, 1366095272),
(2827, 13, 12402539, 1380197754),
(2828, 1, 12794009, 1386272353),
(2828, 4, 12868993, 1387480815),
(2828, 7, 9954024, 1333545108),
(2828, 8, 12790888, 1386235618),
(2828, 13, 12779900, 1386082687),
(2830, 1, 12730479, 1385408907),
(2830, 7, 10720036, 1349994124),
(2833, 1, 12506211, 1381846363),
(2833, 4, 12993625, 1390149799),
(2833, 7, 12610439, 1383425786),
(2833, 8, 13069695, 1391306104),
(2833, 13, 12793844, 1386271138),
(2834, 1, 12123995, 1375094015),
(2834, 4, 13230638, 1393538018),
(2834, 7, 9989464, 1334347121),
(2834, 8, 13318858, 1394725976),
(2843, 1, 12645742, 1383971083),
(2843, 4, 12548430, 1382548587),
(2843, 7, 10520730, 1345902356),
(2843, 8, 12548761, 1382552217),
(2843, 13, 13401533, 1395937388),
(2847, 1, 12507334, 1381863872),
(2847, 7, 10878824, 1352794094),
(2847, 8, 12620744, 1383578796),
(2847, 13, 12709458, 1385054114),
(2849, 1, 12954222, 1389379377),
(2849, 8, 13020523, 1390569130),
(2849, 13, 12950724, 1389295566),
(2852, 7, 14720284, 1419454523),
(2857, 13, 16034751, 1441215071),
(2860, 7, 10519650, 1345879502),
(2862, 7, 12903379, 1388260622),
(2864, 1, 11580766, 1365520680),
(2864, 4, 12518033, 1382039401),
(2864, 7, 9902201, 1332560460),
(2864, 8, 11579107, 1365500977),
(2864, 13, 12402461, 1380196901),
(2865, 13, 16030238, 1441135070),
(2870, 1, 12414874, 1380388407),
(2870, 4, 14212607, 1410877238),
(2870, 8, 12741249, 1385562526),
(2870, 13, 13708343, 1401734898),
(2874, 7, 10055105, 1335761427),
(2877, 1, 11477426, 1363794599),
(2877, 4, 12415680, 1380398493),
(2877, 7, 9938792, 1333217866),
(2877, 8, 11577509, 1365476814),
(2880, 7, 14719332, 1419433198),
(2882, 7, 15731549, 1436269261),
(2890, 7, 11127620, 1357976456),
(2895, 7, 12427017, 1380602158),
(2899, 1, 11672612, 1366995985),
(2899, 7, 9916875, 1332842642),
(2899, 8, 11680082, 1367167382),
(2899, 13, 12172331, 1375826352),
(2904, 1, 13377698, 1395602221),
(2904, 7, 10408866, 1343643289),
(2905, 1, 11646328, 1366565033),
(2905, 4, 12580681, 1382994691),
(2905, 7, 9958874, 1333648016),
(2905, 8, 11643977, 1366532417),
(2905, 13, 12402575, 1380198089),
(2906, 1, 14060545, 1408376582),
(2906, 7, 14050094, 1408187352),
(2906, 13, 14055690, 1408284405),
(2917, 7, 10740919, 1350340448),
(2924, 7, 10519392, 1345875326),
(2927, 1, 12714253, 1385137877),
(2927, 4, 12730981, 1385418413),
(2927, 7, 10326248, 1342114357),
(2927, 8, 12731542, 1385432414),
(2927, 13, 14465323, 1414910452),
(2930, 4, 12580887, 1382997733),
(2930, 7, 11148914, 1358488044),
(2933, 1, 12627555, 1383666266),
(2933, 7, 13046927, 1390920874),
(2938, 1, 12740146, 1385553353),
(2938, 4, 14212589, 1410876993),
(2938, 8, 12740258, 1385554421),
(2938, 13, 12740764, 1385558518),
(2939, 7, 10519248, 1345872972),
(2949, 1, 12611938, 1383458435),
(2949, 7, 10066668, 1335978530),
(2949, 13, 13022066, 1390578991),
(2950, 1, 12853849, 1387216934),
(2950, 7, 10518239, 1345842931),
(2950, 8, 12863551, 1387382088),
(2950, 13, 12863268, 1387378675),
(2954, 1, 11607348, 1365967083),
(2954, 4, 12407228, 1380272118),
(2954, 7, 9936535, 1333181773),
(2954, 8, 11602823, 1365869955),
(2954, 13, 12313737, 1378624874),
(2955, 7, 13504948, 1397658032),
(2957, 1, 12630475, 1383713680),
(2957, 4, 12911429, 1388449806),
(2957, 7, 10881410, 1352834028),
(2957, 8, 12631030, 1383722813),
(2957, 13, 12906512, 1388338785),
(2958, 7, 10683975, 1349337995),
(2958, 13, 13567573, 1398847840),
(2986, 1, 11642758, 1366512781),
(2986, 4, 12497176, 1381701590),
(2986, 7, 9980999, 1334170288),
(2986, 8, 11641841, 1366484883),
(2986, 13, 12402579, 1380198127),
(2987, 1, 12677012, 1384443334),
(2987, 7, 11135105, 1358169779),
(2987, 13, 14783677, 1420831934),
(2988, 1, 13329233, 1394893286),
(2988, 4, 13416725, 1396177061),
(2989, 7, 10316745, 1341959433),
(2994, 7, 16523966, 1449047448),
(2999, 1, 11585797, 1365596251),
(2999, 4, 12936893, 1389010575),
(2999, 7, 9994517, 1334497480),
(2999, 8, 11583641, 1365572736),
(3000, 1, 11847872, 1370116952),
(3000, 4, 12502393, 1381780685),
(3000, 7, 10246674, 1340318016),
(3000, 8, 11863491, 1370452714),
(3001, 1, 11872346, 1370636286),
(3001, 4, 12530120, 1382249661),
(3001, 7, 10325499, 1342103232),
(3001, 8, 11921175, 1371608518),
(3051, 1, 11973095, 1372452043),
(3051, 4, 12551883, 1382600724),
(3051, 7, 10034366, 1335357872),
(3051, 8, 11972763, 1372447890),
(3051, 13, 12320631, 1378739636),
(3060, 1, 12340044, 1379085392),
(3060, 4, 13394628, 1395851851),
(3060, 7, 10027878, 1335213221),
(3060, 8, 13388100, 1395762585),
(3060, 13, 12407006, 1380267923),
(3068, 1, 12303604, 1378449051),
(3068, 7, 14667270, 1418451070),
(3068, 8, 12338393, 1379055006),
(3068, 13, 12404098, 1380215717),
(3084, 1, 13118561, 1392045722),
(3084, 13, 13121677, 1392096542),
(3085, 1, 11972725, 1372447357),
(3085, 4, 12878208, 1387672507),
(3085, 7, 10724537, 1350057030),
(3085, 8, 12388448, 1379950557),
(3085, 13, 12392636, 1380026768),
(3087, 1, 11609301, 1366010346),
(3087, 4, 12520280, 1382085665),
(3087, 7, 10071675, 1336079698),
(3087, 8, 11603474, 1365880735),
(3087, 13, 12330879, 1378917930),
(3093, 1, 11798729, 1369210189),
(3093, 4, 12572986, 1382898047),
(3093, 7, 10028929, 1335240167),
(3093, 8, 11743212, 1368209012),
(3093, 13, 12306031, 1378479284),
(3096, 4, 12420517, 1380486441),
(3096, 7, 9966665, 1333815170),
(3096, 13, 12411978, 1380349007),
(3097, 1, 12159959, 1375621790),
(3097, 7, 10518125, 1345840234),
(3097, 8, 12303154, 1378443625),
(3098, 7, 10516774, 1345817552),
(3102, 7, 11265729, 1360350762),
(3104, 1, 12591789, 1383157153),
(3104, 4, 12660714, 1384203168),
(3104, 8, 12591820, 1383157523),
(3104, 13, 12590488, 1383144294),
(3109, 1, 12413901, 1380378497),
(3109, 7, 10203506, 1339146484),
(3109, 8, 12357075, 1379408732),
(3109, 13, 12363492, 1379510981),
(3110, 7, 10774799, 1350894476),
(3111, 13, 12259910, 1377607498),
(3116, 1, 12224294, 1376930353),
(3116, 7, 10516119, 1345802357),
(3116, 8, 12240588, 1377240204),
(3121, 7, 10324867, 1342096014),
(3125, 7, 12427035, 1380602302),
(3132, 7, 12823051, 1386712279),
(3135, 1, 11689777, 1367352388),
(3135, 4, 12507338, 1381863954),
(3135, 7, 9947208, 1333420888),
(3135, 8, 11689443, 1367345743),
(3139, 1, 12238633, 1377197317),
(3139, 7, 10509526, 1345656099),
(3141, 7, 15318012, 1428958510),
(3142, 7, 14658356, 1418303651),
(3142, 8, 14003906, 1407419025),
(3146, 4, 14761885, 1420379282),
(3146, 7, 10625530, 1348096923),
(3146, 13, 16165900, 1443243077),
(3154, 7, 15140289, 1426286888),
(3154, 13, 15302012, 1428680821),
(3155, 1, 13325204, 1394822878),
(3155, 4, 13314578, 1394667626),
(3155, 7, 15129467, 1426166128),
(3155, 8, 13323002, 1394798718),
(3155, 13, 13330268, 1394904142),
(3156, 7, 12472355, 1381319840),
(3166, 1, 12441719, 1380821651),
(3166, 7, 10050856, 1335678716),
(3166, 8, 12552039, 1382602565),
(3166, 13, 12411924, 1380347959),
(3175, 1, 12320134, 1378732969),
(3175, 8, 12314969, 1378644360),
(3175, 13, 14322594, 1412759506),
(3179, 7, 12965006, 1389614192),
(3181, 7, 12701478, 1384927050),
(3183, 1, 13501881, 1397587884),
(3183, 4, 13731985, 1402257882),
(3183, 7, 16251893, 1444611539),
(3183, 8, 13757847, 1402902443),
(3194, 4, 12782706, 1386113347),
(3198, 13, 14052388, 1408222124),
(3200, 1, 12978323, 1389858910),
(3212, 8, 13685874, 1401199738),
(3215, 7, 12645079, 1383951025),
(3220, 1, 12647711, 1384003108),
(3220, 7, 10456545, 1344545389),
(3220, 13, 12373340, 1379663298),
(3235, 13, 14789660, 1420990342),
(3237, 1, 14834517, 1421858207),
(3237, 7, 14834524, 1421858298),
(3237, 13, 14835222, 1421867604),
(3238, 7, 13812173, 1404120789),
(3238, 13, 13840905, 1404652720),
(3266, 1, 11849059, 1370151946),
(3266, 7, 10514062, 1345753954),
(3266, 8, 11873792, 1370680184),
(3266, 13, 12340325, 1379090206),
(3277, 7, 13410695, 1396072160),
(3277, 13, 15976125, 1440248914),
(3288, 1, 12379826, 1379773028),
(3288, 7, 10512024, 1345710945),
(3288, 8, 12547997, 1382545256),
(3288, 13, 12373879, 1379670754),
(3296, 1, 12974484, 1389788257),
(3296, 4, 14278931, 1411929584),
(3296, 7, 14238692, 1411254644),
(3298, 4, 14278947, 1411929751),
(3298, 8, 14261526, 1411639520),
(3298, 13, 14279128, 1411932451),
(3300, 4, 14278954, 1411929905),
(3300, 7, 14238696, 1411254782),
(3300, 8, 14261517, 1411639403),
(3301, 1, 11579030, 1365499888),
(3301, 4, 12573334, 1382901249),
(3301, 7, 9998620, 1334601257),
(3301, 8, 11578069, 1365487047),
(3301, 13, 12362152, 1379493349),
(3302, 4, 14278984, 1411930301),
(3302, 7, 14238691, 1411254574),
(3309, 1, 12169841, 1375783062),
(3309, 4, 12581007, 1383000080),
(3309, 7, 10062756, 1335900092),
(3309, 8, 12260903, 1377621722),
(3320, 13, 14790228, 1420999395),
(3347, 1, 12859743, 1387312588),
(3347, 7, 15104215, 1425820595),
(3362, 4, 13514649, 1397813703),
(3362, 7, 14672585, 1418550069),
(3362, 13, 12406728, 1380263194),
(3383, 1, 12907354, 1388356843),
(3383, 8, 12978603, 1389863491),
(3390, 7, 12574437, 1382917731),
(3395, 1, 11670783, 1366970464),
(3395, 7, 10441992, 1344263427),
(3395, 13, 12394656, 1380053761),
(3402, 1, 11667905, 1366911936),
(3402, 4, 12491361, 1381605480),
(3402, 7, 9949559, 1333464560),
(3402, 8, 11672588, 1366995662),
(3402, 13, 12311627, 1378577909),
(3407, 7, 16569244, 1449849418),
(3409, 4, 14788749, 1420974060),
(3409, 7, 12959802, 1389514950),
(3431, 1, 11669838, 1366953482),
(3431, 4, 12731054, 1385420057),
(3431, 7, 14666024, 1418413063),
(3431, 8, 11671685, 1366985054),
(3431, 13, 12933551, 1388942224),
(3497, 1, 12425324, 1380572342),
(3497, 7, 15095358, 1425678212),
(3497, 8, 12936817, 1389009577),
(3497, 13, 12956771, 1389448743),
(3520, 7, 13281256, 1394220309),
(3553, 1, 12877311, 1387653745),
(3553, 7, 12981818, 1389914449),
(3553, 8, 12860783, 1387343019),
(3553, 13, 12820664, 1386682045),
(3565, 1, 11872359, 1370636451),
(3565, 4, 12936915, 1389010780),
(3565, 7, 10268989, 1340922518),
(3565, 8, 11873938, 1370684051),
(3565, 13, 12919975, 1388679686),
(3589, 1, 12954657, 1389393324),
(3589, 8, 13768189, 1403166485),
(3589, 13, 12913799, 1388514903),
(3599, 1, 14834506, 1421858073),
(3599, 7, 14834527, 1421858340),
(3599, 13, 14835216, 1421867529),
(3601, 1, 12576216, 1382950008),
(3601, 7, 12981643, 1389907820),
(3601, 8, 12777353, 1386053693),
(3601, 13, 12906965, 1388346825),
(3615, 1, 12569952, 1382869401),
(3615, 4, 12928306, 1388841705),
(3615, 7, 12981692, 1389910212),
(3615, 8, 12625079, 1383635095),
(3615, 13, 12872973, 1387568756),
(3621, 1, 12553530, 1382624111),
(3621, 7, 10035626, 1335375165),
(3621, 8, 12645967, 1383976593),
(3621, 13, 12602677, 1383325922),
(3625, 13, 16024585, 1441041954),
(3626, 7, 10326753, 1342122462),
(3630, 7, 11175128, 1358946110),
(3635, 13, 14795624, 1421129127),
(3637, 7, 13606196, 1399562474),
(3638, 7, 11165813, 1358811639),
(3638, 13, 16203839, 1443888243),
(3642, 13, 16027998, 1441105412),
(3647, 7, 14834537, 1421858406),
(3648, 1, 13125595, 1392156623),
(3648, 7, 13125573, 1392156240),
(3648, 13, 13820827, 1404279517),
(3649, 1, 12570439, 1382875947),
(3649, 7, 12987927, 1390046209),
(3649, 8, 12689838, 1384703530),
(3649, 13, 12874375, 1387606723),
(3651, 1, 12934129, 1388951472),
(3651, 4, 13446807, 1396640336),
(3651, 7, 15074703, 1425408764),
(3651, 8, 12931908, 1388915860),
(3651, 13, 13035092, 1390747255),
(3654, 4, 13531663, 1398158713),
(3654, 7, 12630982, 1383722030),
(3654, 8, 13586090, 1399201558),
(3654, 13, 13454611, 1396772004),
(3657, 1, 12584359, 1383055241),
(3657, 7, 12988436, 1390054360),
(3657, 8, 12789840, 1386217687),
(3657, 13, 14025251, 1407821950),
(3660, 1, 14834531, 1421858357),
(3660, 7, 14834534, 1421858375),
(3661, 7, 12955387, 1389418350),
(3664, 7, 13631322, 1400020814),
(3666, 1, 12052627, 1373966053),
(3666, 4, 12878131, 1387669614),
(3666, 7, 10171779, 1338385944),
(3666, 8, 12052598, 1373965763),
(3666, 13, 12311268, 1378571922),
(3671, 1, 12962437, 1389562178),
(3671, 4, 13348265, 1395168922),
(3671, 7, 10524681, 1345983493),
(3671, 8, 13349769, 1395200058),
(3671, 13, 12958168, 1389467009),
(3672, 7, 13845702, 1404741791),
(3675, 1, 12575745, 1382943086),
(3675, 7, 12987395, 1390035356),
(3675, 8, 12800767, 1386399232),
(3675, 13, 12815266, 1386602644),
(3676, 1, 12572006, 1382889244),
(3676, 7, 12614926, 1383498265),
(3676, 8, 12972391, 1389754986),
(3676, 13, 12980979, 1389893480),
(3687, 1, 12378546, 1379752307),
(3687, 7, 14987519, 1424029277),
(3687, 8, 12561065, 1382721939),
(3687, 13, 12374959, 1379687832),
(3690, 7, 16518814, 1448944233),
(3699, 7, 14719980, 1419445973),
(3701, 1, 12688136, 1384672968),
(3701, 7, 10201242, 1339085884),
(3702, 7, 14093891, 1408981520),
(3703, 7, 11247040, 1360054631),
(3707, 1, 13023178, 1390590927),
(3710, 1, 11665615, 1366871099),
(3710, 4, 12417141, 1380437631),
(3710, 7, 9961085, 1333705486),
(3710, 8, 11675932, 1367085619),
(3710, 13, 12997546, 1390228323),
(3714, 7, 14664389, 1418391531),
(3722, 7, 10317363, 1341977044),
(3741, 13, 14312800, 1412541422),
(3764, 1, 12098327, 1374681382),
(3764, 7, 10262109, 1340742439),
(3764, 13, 12393968, 1380043271),
(3769, 13, 14052032, 1408216360),
(3776, 13, 17037354, 1458228545),
(3788, 7, 13325580, 1394827652),
(3790, 7, 12622410, 1383594144),
(3794, 1, 11684462, 1367252997),
(3794, 4, 12561832, 1382731062),
(3794, 7, 10166794, 1338273326),
(3794, 8, 11689340, 1367343785),
(3794, 13, 12998486, 1390238749),
(3798, 7, 12622418, 1383594241),
(3816, 7, 14704163, 1419102271),
(3817, 7, 14704169, 1419102417),
(3834, 1, 11905597, 1371312259),
(3834, 4, 12497111, 1381700473),
(3834, 7, 10045574, 1335553861),
(3834, 8, 11907612, 1371351080),
(3834, 13, 12758476, 1385806074),
(3836, 1, 13454026, 1396764057),
(3836, 4, 13458534, 1396831573),
(3836, 7, 10767695, 1350758620),
(3837, 4, 14180690, 1410396268),
(3837, 7, 11610591, 1366029151),
(3840, 13, 16973968, 1457447045),
(3847, 7, 10767767, 1350759951),
(3866, 1, 12709217, 1385051129),
(3866, 13, 14773644, 1420635332),
(3867, 1, 14021504, 1407754704),
(3867, 7, 13782950, 1403535273),
(3867, 13, 14021531, 1407755101),
(3870, 1, 13071926, 1391347999),
(3870, 4, 14599364, 1417203892),
(3870, 7, 12982934, 1389943634),
(3873, 1, 12854561, 1387226408),
(3873, 4, 14208342, 1410809908),
(3873, 7, 12465698, 1381216957),
(3873, 8, 12977757, 1389851049),
(3875, 7, 10201920, 1339099271),
(3886, 7, 11612815, 1366059083),
(3890, 1, 12007600, 1373055984),
(3890, 4, 12561665, 1382728832),
(3890, 7, 10102350, 1336765459),
(3890, 8, 11981274, 1372613270),
(3890, 13, 12248761, 1377396420),
(3904, 4, 15132709, 1426201165),
(3904, 7, 10744716, 1350406115),
(3905, 7, 15553185, 1432862483),
(3906, 7, 11611029, 1366033647),
(3909, 7, 10767514, 1350756188),
(3911, 7, 15730768, 1436256856),
(3912, 1, 11813967, 1369468375),
(3912, 4, 12517927, 1382037855),
(3912, 7, 10404155, 1343555896),
(3912, 8, 11906372, 1371322072),
(3912, 13, 13058307, 1391103192),
(3913, 7, 16240796, 1444435484),
(3913, 13, 17006647, 1457845799),
(3914, 1, 13939269, 1406221310),
(3914, 7, 12462783, 1381162301),
(3914, 13, 13956827, 1406532830),
(3917, 7, 12325470, 1378821931),
(3922, 7, 10513962, 1345752197),
(3946, 1, 11933760, 1371809736),
(3946, 4, 12548769, 1382552265),
(3946, 7, 10768542, 1350776874),
(3946, 8, 11928682, 1371728334),
(3946, 13, 12375417, 1379692433),
(3947, 1, 12237655, 1377182556),
(3947, 7, 14663824, 1418384264),
(3947, 8, 12255573, 1377525097),
(3947, 13, 12402508, 1380197406),
(3962, 4, 14185875, 1410461708),
(3962, 13, 14055182, 1408276456),
(3972, 1, 12052766, 1373967845),
(3972, 4, 12878192, 1387671556),
(3972, 7, 12470600, 1381292920),
(3972, 8, 13550113, 1398492255),
(3972, 13, 12367944, 1379582381),
(3976, 1, 12382546, 1379834067),
(3976, 4, 12386922, 1379925997),
(3976, 8, 12363146, 1379505292),
(3976, 13, 12408215, 1380285309),
(3977, 1, 13840239, 1404638770),
(3977, 7, 13809292, 1404054515),
(3977, 13, 13819151, 1404242326),
(3978, 7, 12470572, 1381292361),
(3986, 1, 12765977, 1385902295),
(3986, 4, 12854268, 1387221652),
(3986, 7, 15092733, 1425649285),
(3986, 8, 12777442, 1386055039),
(3986, 13, 12693939, 1384786175),
(3987, 4, 13447434, 1396651538),
(3987, 7, 15074929, 1425411526),
(3987, 13, 12309136, 1378538825),
(3988, 1, 12441943, 1380825780),
(3988, 4, 12614610, 1383495262),
(3988, 7, 14663625, 1418381724),
(3988, 8, 12453290, 1381000495),
(3988, 13, 12402566, 1380197998),
(3989, 7, 14846959, 1422057238),
(3991, 7, 14905525, 1422814131),
(3994, 1, 14846820, 1422053399),
(3994, 7, 14846827, 1422053516),
(3994, 13, 14846035, 1422038480),
(3996, 1, 14846846, 1422054075),
(3996, 7, 14846565, 1422046611),
(3996, 13, 14851626, 1422135899),
(3999, 4, 12854716, 1387230232),
(3999, 7, 14663548, 1418380757),
(4000, 1, 12223406, 1376915498),
(4000, 7, 14661101, 1418340397),
(4000, 8, 12241427, 1377254599),
(4016, 1, 12382891, 1379841328),
(4016, 7, 11509868, 1364302679),
(4016, 8, 12384379, 1379867514),
(4016, 13, 12375028, 1379688424),
(4018, 7, 11509180, 1364291375),
(4019, 7, 11509991, 1364304295),
(4020, 7, 11509887, 1364302761),
(4022, 1, 11592691, 1365699029),
(4022, 4, 12425582, 1380575520),
(4022, 7, 11509889, 1364302797),
(4022, 8, 11592557, 1365697193),
(4022, 13, 12311831, 1378581214),
(4023, 1, 11684546, 1367254062),
(4023, 4, 13286738, 1394297073),
(4023, 7, 11509892, 1364302829),
(4023, 8, 11667585, 1366907585),
(4023, 13, 12366910, 1379567947),
(4025, 7, 11511751, 1364327420),
(4027, 1, 13904881, 1405706592),
(4028, 1, 12388805, 1379954525),
(4028, 8, 12453066, 1380996240),
(4028, 13, 12406649, 1380261622),
(4031, 13, 14168706, 1410206757),
(4060, 7, 17061843, 1458589491),
(4085, 7, 11091518, 1356905010),
(4096, 7, 11159200, 1358685061),
(4134, 7, 16550375, 1449494529),
(4150, 7, 14710615, 1419257737),
(4150, 13, 14783187, 1420822641),
(4240, 1, 14356726, 1413392014),
(4259, 7, 12649736, 1384027972),
(4260, 7, 13322692, 1394794495),
(4268, 7, 11153813, 1358588077),
(4270, 1, 11847340, 1370106522),
(4270, 7, 14660988, 1418337142),
(4270, 8, 12005486, 1373023654),
(4270, 13, 12311946, 1378583235),
(4280, 1, 11848717, 1370143796),
(4280, 4, 12561239, 1382723939),
(4280, 7, 12236843, 1377166478),
(4280, 8, 11908264, 1371364192),
(4286, 7, 12244355, 1377294868),
(4289, 1, 11915658, 1371500375),
(4289, 4, 12560796, 1382718436),
(4289, 7, 12236902, 1377168334),
(4289, 8, 11915278, 1371494141),
(4289, 13, 12402543, 1380197802),
(4291, 7, 13668065, 1400791756),
(4292, 1, 12741070, 1385561015),
(4292, 4, 12554557, 1382635654),
(4292, 7, 12237114, 1377172891),
(4292, 8, 13662966, 1400692972),
(4292, 13, 12741034, 1385560709),
(4294, 7, 13660767, 1400648014),
(4297, 1, 13663743, 1400705889),
(4297, 7, 13668064, 1400791735),
(4297, 8, 13669526, 1400836289),
(4297, 13, 13663812, 1400706993),
(4324, 7, 15299501, 1428648062),
(4343, 7, 12244121, 1377290970),
(4349, 1, 11818798, 1369568469),
(4349, 4, 12512473, 1381947746),
(4349, 7, 12236753, 1377164982),
(4349, 8, 11977569, 1372536277),
(4349, 13, 12339655, 1379079037),
(4375, 1, 12907311, 1388354897),
(4375, 4, 12936877, 1389010445),
(4375, 7, 14660958, 1418336439),
(4375, 8, 12863193, 1387377877),
(4379, 1, 13896058, 1405581518),
(4379, 7, 14660937, 1418335816),
(4396, 7, 12500859, 1381764810),
(4400, 7, 12500862, 1381764840),
(4401, 7, 12502254, 1381778563),
(4403, 7, 12500871, 1381764880),
(4405, 7, 12500878, 1381764903),
(4406, 1, 14883791, 1422556746),
(4406, 7, 14262725, 1411653871),
(4408, 1, 14883266, 1422551637),
(4408, 7, 14883296, 1422551921),
(4408, 13, 15089162, 1425586431),
(4410, 1, 15006608, 1424352689),
(4410, 4, 14237498, 1411236050),
(4410, 7, 14884179, 1422560257),
(4410, 13, 16805928, 1454677955),
(4411, 1, 12758145, 1385804022),
(4411, 7, 14883480, 1422553807),
(4415, 7, 14884720, 1422566861),
(4422, 1, 14584169, 1416932623),
(4422, 13, 14584144, 1416932475),
(4424, 1, 14584158, 1416932557),
(4426, 7, 13708726, 1401745440),
(4428, 7, 13706354, 1401696101),
(4430, 7, 13721171, 1402022289),
(4432, 7, 12765696, 1385897214),
(4434, 1, 12865205, 1387404550),
(4434, 4, 12865244, 1387405039),
(4434, 7, 14660906, 1418335061),
(4434, 8, 12866122, 1387435642),
(4434, 13, 12863380, 1387380050),
(4435, 7, 12921712, 1388711032),
(4438, 1, 12900300, 1388180891),
(4438, 4, 12876692, 1387644445),
(4438, 7, 14660874, 1418334174),
(4438, 13, 12786179, 1386166649),
(4440, 1, 12847802, 1387118830),
(4440, 8, 12835300, 1386915545),
(4440, 13, 12810136, 1386529260),
(4441, 1, 12755852, 1385738802),
(4441, 4, 14817865, 1421522038),
(4441, 13, 12805144, 1386448705),
(4442, 1, 12759122, 1385813718),
(4442, 4, 12762614, 1385850190),
(4442, 7, 14660822, 1418332682),
(4442, 8, 12763537, 1385864560),
(4442, 13, 12771178, 1385973230),
(4443, 13, 12802588, 1386421913),
(4446, 1, 12754103, 1385721801),
(4446, 4, 12758094, 1385800759),
(4446, 7, 14660762, 1418331527),
(4446, 8, 12751897, 1385690675),
(4446, 13, 12740502, 1385556402),
(4447, 1, 12962343, 1389559947),
(4447, 7, 14660707, 1418330497),
(4447, 13, 12956517, 1389444732),
(4450, 1, 13883624, 1405375240),
(4450, 4, 13882705, 1405354769),
(4450, 13, 13878998, 1405276639),
(4454, 7, 15039871, 1424883472),
(4456, 1, 13893315, 1405531930),
(4456, 13, 13781567, 1403506530),
(4458, 1, 12953118, 1389361237),
(4458, 7, 14657782, 1418298446),
(4458, 13, 12933964, 1388948955),
(4460, 1, 12946980, 1389206902),
(4460, 13, 12934203, 1388953075),
(4461, 13, 12934111, 1388951077),
(4515, 1, 14303749, 1412365945),
(4515, 4, 14303075, 1412355717),
(4519, 1, 12994579, 1390169101),
(4519, 7, 13784055, 1403553371),
(4519, 8, 13257302, 1393898924),
(4519, 13, 13036437, 1390765716),
(4577, 1, 14827175, 1421696138),
(4577, 7, 14659361, 1418313645),
(4578, 1, 15006419, 1424350953),
(4578, 4, 14835700, 1421876407),
(4578, 7, 15010311, 1424407941),
(4578, 13, 15003480, 1424288771),
(4597, 7, 14458615, 1414795756),
(4598, 1, 14455226, 1414754263),
(4600, 13, 14782744, 1420815451),
(4601, 7, 14659244, 1418312591),
(4602, 13, 14456299, 1414766406),
(4603, 1, 14827169, 1421696088),
(4603, 7, 14659165, 1418311853),
(4603, 8, 14004495, 1407426740),
(4604, 4, 13672060, 1400873431),
(4604, 7, 14659043, 1418310815),
(4605, 7, 13692887, 1401367581),
(4606, 1, 13674304, 1400933839),
(4606, 4, 13672536, 1400885900),
(4606, 13, 13675410, 1400951470),
(4607, 1, 13675789, 1400959500),
(4607, 4, 13672057, 1400873391),
(4607, 7, 13673469, 1400914041),
(4607, 8, 13744538, 1402557113),
(4608, 1, 13672047, 1400873251),
(4608, 13, 13671940, 1400871029),
(4618, 7, 16569186, 1449848825),
(4623, 8, 13795637, 1403773480),
(4627, 7, 13784391, 1403561386),
(4629, 7, 13790341, 1403667295),
(4629, 13, 13788856, 1403628717),
(4631, 7, 15726762, 1436178086),
(4648, 1, 14409603, 1414092483),
(4649, 1, 14409599, 1414092420),
(4654, 7, 14406127, 1414058154),
(4655, 7, 14463718, 1414874312),
(4657, 1, 14577324, 1416825933),
(4661, 1, 14577215, 1416823684),
(4662, 1, 14594944, 1417121281),
(4662, 13, 14579279, 1416850234),
(4663, 7, 14658946, 1418309791),
(4664, 13, 14321912, 1412747770),
(4665, 7, 14540324, 1416148807),
(4666, 7, 14240386, 1411290545),
(4696, 7, 14480709, 1415133503),
(4698, 7, 14487750, 1415336749),
(4701, 7, 14519767, 1415820510),
(4719, 7, 14658583, 1418306042),
(4720, 7, 14611406, 1417420517),
(4726, 7, 14611560, 1417423127),
(4727, 7, 14611556, 1417423051),
(4738, 7, 14609514, 1417379311),
(4738, 13, 14603685, 1417284293),
(4741, 7, 14609522, 1417379428),
(4743, 7, 14609438, 1417378298),
(4745, 7, 14609345, 1417377202),
(4751, 7, 14613577, 1417447291),
(4760, 7, 14658550, 1418305578),
(4761, 7, 14719839, 1419441811),
(4763, 7, 16661033, 1451753190),
(4766, 7, 15875540, 1438674295),
(4766, 13, 14823693, 1421643258),
(4771, 13, 14714454, 1419338397),
(4877, 4, 16556426, 1449590716),
(4878, 4, 16556437, 1449590806),
(4879, 4, 16556448, 1449590888),
(4881, 1, 16555850, 1449583906),
(4881, 4, 16561684, 1449691774),
(4882, 4, 16556458, 1449590955),
(4888, 4, 16556406, 1449590552),
(4932, 4, 16587613, 1450175344),
(4933, 4, 16587632, 1450175793),
(4934, 4, 16589369, 1450203186),
(4936, 4, 16587667, 1450176446),
(4937, 4, 16587702, 1450177038),
(4938, 4, 16587600, 1450174896),
(4940, 1, 16591265, 1450249040),
(4944, 4, 16587956, 1450182200);

-- --------------------------------------------------------

--
-- Table structure for table `uva_user`
--

CREATE TABLE `uva_user` (
  `user_id` int(11) NOT NULL,
  `judge_code_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `uva_user`
--

INSERT INTO `uva_user` (`user_id`, `judge_code_id`) VALUES
(8, 1),
(1, 4),
(6, 4),
(10, 13);

-- --------------------------------------------------------

--
-- Table structure for table `vjudge_user`
--

CREATE TABLE `vjudge_user` (
  `user_id` int(11) NOT NULL,
  `judge_code_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `vjudge_user`
--

INSERT INTO `vjudge_user` (`user_id`, `judge_code_id`) VALUES
(5, 10),
(8, 10),
(6, 12),
(10, 15);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `approve_table`
--
ALTER TABLE `approve_table`
  ADD UNIQUE KEY `contest_id` (`contest_id`,`student_id`),
  ADD KEY `approve_table_ibfk_2` (`student_id`);

--
-- Indexes for table `codeforces_category`
--
ALTER TABLE `codeforces_category`
  ADD UNIQUE KEY `problem_number` (`problem_number`,`category`);

--
-- Indexes for table `codeforces_solve`
--
ALTER TABLE `codeforces_solve`
  ADD UNIQUE KEY `problem_number` (`problem_number`,`judge_code_id`),
  ADD KEY `judge_code_id` (`judge_code_id`);

--
-- Indexes for table `codeforces_user`
--
ALTER TABLE `codeforces_user`
  ADD UNIQUE KEY `user_id` (`user_id`),
  ADD KEY `user_id_2` (`user_id`),
  ADD KEY `judge_code_id` (`judge_code_id`);

--
-- Indexes for table `contest_list`
--
ALTER TABLE `contest_list`
  ADD PRIMARY KEY (`contest_id`),
  ADD KEY `course_id` (`course_id`);

--
-- Indexes for table `contest_problem_list`
--
ALTER TABLE `contest_problem_list`
  ADD PRIMARY KEY (`problem_id`),
  ADD UNIQUE KEY `problem_number` (`problem_number`,`contest_id`),
  ADD KEY `contest_id` (`contest_id`);

--
-- Indexes for table `course_table`
--
ALTER TABLE `course_table`
  ADD PRIMARY KEY (`course_id`),
  ADD KEY `owner_id` (`owner_id`);

--
-- Indexes for table `enroll_table`
--
ALTER TABLE `enroll_table`
  ADD UNIQUE KEY `course_id_2` (`course_id`,`student_id`),
  ADD KEY `course_id` (`course_id`),
  ADD KEY `student_id` (`student_id`);

--
-- Indexes for table `handle_table`
--
ALTER TABLE `handle_table`
  ADD PRIMARY KEY (`judge_code_id`),
  ADD UNIQUE KEY `judge_name` (`judge_name`,`handle`);

--
-- Indexes for table `solve_list`
--
ALTER TABLE `solve_list`
  ADD UNIQUE KEY `problem_id` (`problem_id`,`student_id`),
  ADD KEY `solve_list_ibfk_2` (`student_id`);

--
-- Indexes for table `user_table`
--
ALTER TABLE `user_table`
  ADD PRIMARY KEY (`user_id`),
  ADD UNIQUE KEY `user_email` (`user_email`),
  ADD KEY `user_id` (`user_id`);

--
-- Indexes for table `uva_problem_category`
--
ALTER TABLE `uva_problem_category`
  ADD UNIQUE KEY `problem_number` (`problem_number`,`category`),
  ADD UNIQUE KEY `problem_number_2` (`problem_number`,`category`);

--
-- Indexes for table `uva_solve`
--
ALTER TABLE `uva_solve`
  ADD UNIQUE KEY `problem_number` (`problem_number`,`judge_code_id`),
  ADD KEY `judge_code_id` (`judge_code_id`);

--
-- Indexes for table `uva_user`
--
ALTER TABLE `uva_user`
  ADD UNIQUE KEY `user_id` (`user_id`),
  ADD KEY `judge_code_id` (`judge_code_id`);

--
-- Indexes for table `vjudge_user`
--
ALTER TABLE `vjudge_user`
  ADD UNIQUE KEY `user_id_2` (`user_id`),
  ADD KEY `user_id` (`user_id`),
  ADD KEY `judge_code_id` (`judge_code_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `contest_list`
--
ALTER TABLE `contest_list`
  MODIFY `contest_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=17;
--
-- AUTO_INCREMENT for table `contest_problem_list`
--
ALTER TABLE `contest_problem_list`
  MODIFY `problem_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=104;
--
-- AUTO_INCREMENT for table `course_table`
--
ALTER TABLE `course_table`
  MODIFY `course_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;
--
-- AUTO_INCREMENT for table `handle_table`
--
ALTER TABLE `handle_table`
  MODIFY `judge_code_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;
--
-- AUTO_INCREMENT for table `user_table`
--
ALTER TABLE `user_table`
  MODIFY `user_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;
--
-- Constraints for dumped tables
--

--
-- Constraints for table `approve_table`
--
ALTER TABLE `approve_table`
  ADD CONSTRAINT `approve_table_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contest_list` (`contest_id`),
  ADD CONSTRAINT `approve_table_ibfk_2` FOREIGN KEY (`student_id`) REFERENCES `enroll_table` (`student_id`);

--
-- Constraints for table `codeforces_solve`
--
ALTER TABLE `codeforces_solve`
  ADD CONSTRAINT `codeforces_solve_ibfk_1` FOREIGN KEY (`judge_code_id`) REFERENCES `handle_table` (`judge_code_id`);

--
-- Constraints for table `codeforces_user`
--
ALTER TABLE `codeforces_user`
  ADD CONSTRAINT `codeforces_user_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user_table` (`user_id`),
  ADD CONSTRAINT `codeforces_user_ibfk_2` FOREIGN KEY (`judge_code_id`) REFERENCES `handle_table` (`judge_code_id`);

--
-- Constraints for table `contest_list`
--
ALTER TABLE `contest_list`
  ADD CONSTRAINT `contest_list_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `course_table` (`course_id`);

--
-- Constraints for table `contest_problem_list`
--
ALTER TABLE `contest_problem_list`
  ADD CONSTRAINT `contest_problem_list_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contest_list` (`contest_id`);

--
-- Constraints for table `course_table`
--
ALTER TABLE `course_table`
  ADD CONSTRAINT `course_table_ibfk_1` FOREIGN KEY (`owner_id`) REFERENCES `user_table` (`user_id`);

--
-- Constraints for table `enroll_table`
--
ALTER TABLE `enroll_table`
  ADD CONSTRAINT `enroll_table_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `course_table` (`course_id`),
  ADD CONSTRAINT `enroll_table_ibfk_2` FOREIGN KEY (`student_id`) REFERENCES `user_table` (`user_id`);

--
-- Constraints for table `solve_list`
--
ALTER TABLE `solve_list`
  ADD CONSTRAINT `solve_list_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `contest_problem_list` (`problem_id`),
  ADD CONSTRAINT `solve_list_ibfk_2` FOREIGN KEY (`student_id`) REFERENCES `enroll_table` (`student_id`);

--
-- Constraints for table `uva_solve`
--
ALTER TABLE `uva_solve`
  ADD CONSTRAINT `uva_solve_ibfk_1` FOREIGN KEY (`judge_code_id`) REFERENCES `handle_table` (`judge_code_id`);

--
-- Constraints for table `uva_user`
--
ALTER TABLE `uva_user`
  ADD CONSTRAINT `uva_user_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user_table` (`user_id`),
  ADD CONSTRAINT `uva_user_ibfk_2` FOREIGN KEY (`judge_code_id`) REFERENCES `handle_table` (`judge_code_id`);

--
-- Constraints for table `vjudge_user`
--
ALTER TABLE `vjudge_user`
  ADD CONSTRAINT `vjudge_user_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user_table` (`user_id`),
  ADD CONSTRAINT `vjudge_user_ibfk_2` FOREIGN KEY (`judge_code_id`) REFERENCES `handle_table` (`judge_code_id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
